[
    {
        "subtype": "channel_join",
        "user": "U01ERR6MN9G",
        "text": "<@U01ERR6MN9G> has joined the channel",
        "type": "message",
        "ts": "1605371333.000200"
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605393429.000800",
        "client_msg_id": "69e7b7d5-7bf0-405b-8a04-4c7312bb42a3",
        "text": "Slight retroactive work out loud (not really sure what the format should be here)",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605393429.000800",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1605405250.018100",
        "reply_users": [
            "U01ETREKM6V",
            "U01ECGRL8CB",
            "U01F4PHUT0R"
        ],
        "replies": [
            {
                "user": "U01ETREKM6V",
                "ts": "1605395078.014500"
            },
            {
                "user": "U01ECGRL8CB",
                "ts": "1605395442.016000"
            },
            {
                "user": "U01F4PHUT0R",
                "ts": "1605405250.018100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8di",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Slight retroactive work out loud (not really sure what the format should be here)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01ETREKM6V"
                ],
                "count": 1
            },
            {
                "name": "raised_hands::skin-tone-2",
                "users": [
                    "U01DZUA88S1",
                    "U01EBJS7VDG"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605393700.003300",
        "edited": {
            "user": "U01ECGRL8CB",
            "ts": "1605393759.000000"
        },
        "client_msg_id": "c1d1c3e0-67a0-44f3-a93a-46829d01dcf7",
        "text": "Reading ALTREP-aware code while preparing talk, noticed problem in fastpass of is.unsorted. It checked for decreasing-sortedness and returned TRUE in that case. <https:\/\/github.com\/wch\/r-source\/blob\/trunk\/src\/main\/sort.c#L243-L246> That is usually right, because is.unsorted only checks for *increasing* sortedness, but wrong if the input is constant-valued (because decreasing and increasing sorting are equivalent here).",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[wch\/r-source] src\/main\/sort.c:243-246",
                "text": "```\n\t\/* is.unsorted returns TRUE for vectors sorted in descending order *\/\n\telse if( KNOWN_DECR(sorted) || sorted == KNOWN_UNSORTED) {\n\t    UNPROTECT(1);\n\t    return ScalarLogical(TRUE);\n```",
                "title": "src\/main\/sort.c:243-246",
                "footer": "<https:\/\/github.com\/wch\/r-source|wch\/r-source>",
                "id": 1,
                "title_link": "https:\/\/github.com\/wch\/r-source\/blob\/trunk\/src\/main\/sort.c#L243-L246",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01ER5BE7NX",
                "app_unfurl_url": "https:\/\/github.com\/wch\/r-source\/blob\/trunk\/src\/main\/sort.c#L243-L246",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LhIDS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reading ALTREP-aware code while preparing talk, noticed problem in fastpass of is.unsorted. It checked for decreasing-sortedness and returned TRUE in that case. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wch\/r-source\/blob\/trunk\/src\/main\/sort.c#L243-L246"
                            },
                            {
                                "type": "text",
                                "text": " That",
                                "style": {
                                    "unlink": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is usually right, because is.unsorted only checks for *increasing* sortedness, but wrong if the input is constant-valued (because decreasing and increasing sorting are equivalent here)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605393831.004300",
        "client_msg_id": "b2589834-6397-40f6-a5cb-6dd9b4ecd366",
        "text": "Code needed to be smarter, detect constant-value case.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YsH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Code needed to be smarter, detect constant-value case."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605393860.004800",
        "client_msg_id": "45728550-ddad-4913-bd24-0c493329ecaa",
        "text": "Its sorted so I figure comparing first and last values should be sufficient",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ju8Pq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Its sorted so I figure comparing first and last values should be sufficient"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605394193.007700",
        "client_msg_id": "0fe4c727-e7ae-4177-afe7-fa6b50b73c70",
        "text": "But what about NAs? `is.sorted` takes `na.rm`, but no mention of it in C code, go to calling R code, see that we’re guaranteed no NAs by the time we get to C code <https:\/\/github.com\/wch\/r-source\/blob\/8e223d95f054482b2c8b5ccb35a4453e14b2d010\/src\/library\/base\/R\/New-Internal.R#L180-L184>\n\nNote, if youd on’t know where the calling R code is , you go to names.c, which provides a map of C functions do_* to the R level “internals” (ie blabla in `.Internal(blabla(x))`. In this case I knew it would be is.unsorted so that was unnecessary (though I did have to grep to figure out its in New-Internal.R).",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "[wch\/r-source] src\/library\/base\/R\/New-Internal.R:180-184",
                "text": "```\n    if(!na.rm &amp;&amp; anyNA(x))\n\treturn(NA)\n    ## else\n    if(na.rm &amp;&amp; any(ii &lt;- <http:\/\/is.na|is.na>(x)))\n\tx &lt;- x[!ii]\n```",
                "title": "src\/library\/base\/R\/New-Internal.R:180-184",
                "footer": "<https:\/\/github.com\/wch\/r-source|wch\/r-source>",
                "id": 1,
                "title_link": "https:\/\/github.com\/wch\/r-source\/blob\/8e223d95f054482b2c8b5ccb35a4453e14b2d010\/src\/library\/base\/R\/New-Internal.R#L180-L184",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B01ER5BE7NX",
                "app_unfurl_url": "https:\/\/github.com\/wch\/r-source\/blob\/8e223d95f054482b2c8b5ccb35a4453e14b2d010\/src\/library\/base\/R\/New-Internal.R#L180-L184",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SC0dM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But what about NAs? "
                            },
                            {
                                "type": "text",
                                "text": "is.sorted",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " takes "
                            },
                            {
                                "type": "text",
                                "text": "na.rm",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but no mention of it in C code, go to calling R code, see that we’re guaranteed no NAs by the time we get to C code "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wch\/r-source\/blob\/8e223d95f054482b2c8b5ccb35a4453e14b2d010\/src\/library\/base\/R\/New-Internal.R#L180-L184"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNote, if youd on’t know where the calling R code is , you go to names.c, which provides a map of C functions do_* to the R level “internals” (ie blabla in "
                            },
                            {
                                "type": "text",
                                "text": ".Internal(blabla(x))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". In this case I knew it would be is.unsorted so that was unnecessary (though I did have to grep to figure out its in New-Internal.R)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605394294.009200",
        "client_msg_id": "8a26c309-3a1a-489d-85c5-d2322a953734",
        "text": "So we don’t have to worry about NAs, the simple first-last comparison is sufficient.\n\nBut we’re in C code so we have to handle the different SEXP types differently, so I made a pair of macros which handles that. Could have been a function.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q\/Q9f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So we don’t have to worry about NAs, the simple first-last comparison is sufficient.\n\nBut we’re in C code so we have to handle the different SEXP types differently, so I made a pair of macros which handles that. Could have been a function."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605394359.010400",
        "client_msg_id": "6f53f94f-20d5-4e09-b800-89d36090144a",
        "text": "Next we need tests to make sure we actually fixed the problem, so I add things to tests\/reg-tests-1d.R (read comments at the top of the reg-tests* files to see what should go in there, I have embarassed myself and annoyed R core people by not doing so in the past).",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xs8h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Next we need tests to make sure we actually fixed the problem, so I add things to tests\/reg-tests-1d.R (read comments at the top of the reg-tests* files to see what should go in there, I have embarassed myself and annoyed R core people by not doing so in the past)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605394400.011300",
        "client_msg_id": "f8c6fbfb-6e5e-4529-b0ad-54757e5309dc",
        "text": "Next we rebuild R from source and do make check-devel just in case…. it passes",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pS2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Next we rebuild R from source and do make check-devel just in case…. it passes"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605394530.013200",
        "client_msg_id": "d7549ba2-6192-4974-8d9d-8e17b1e1a3c5",
        "text": "So finally, we submit a bug w\/patch on bugzilla, which is here: <https:\/\/bugs.r-project.org\/bugzilla\/show_bug.cgi?id=17975>\n\n(NB, do not ‘brigade’ bugzilla by posting congratulatory or +1 type agreement, as every(?) member of R core gets an email for every comment on every bug)",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Ez\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So finally, we submit a bug w\/patch on bugzilla, which is here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/bugzilla\/show_bug.cgi?id=17975"
                            },
                            {
                                "type": "text",
                                "text": "\n\n(NB, do not ‘brigade’ bugzilla by posting congratulatory or +1 type agreement, as every(?) member of R core gets an email for every comment on every bug)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605394532.013400",
        "client_msg_id": "2f1ea35d-b1df-4fae-ad1d-1547b682d7e4",
        "text": "Fin.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nrwq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fin."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605394686.014400",
        "client_msg_id": "21172f48-c43b-4d67-bbad-b714f78d48b4",
        "text": "But not really, because reading this back makes me realize that  unsortedness may have a similar problem. Need to know when vectors can receive that value",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O86y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But not really, because reading this back makes me realize that  unsortedness may have a similar problem. Need to know when vectors can receive that value"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ETREKM6V",
        "type": "message",
        "ts": "1605395078.014500",
        "client_msg_id": "fde57378-c123-42e3-a7e2-4dab7de4077a",
        "text": "thanks for posting this! i’m still too far removed to really understand what’s going on, but I think the way you went about describing your steps was clear. I think including suggestions, links, and code chunks like you did was great. even <https:\/\/r-devel.slack.com\/archives\/C01EVRJRYA0\/p1605394686014400|the most recent comment> was helpful to see as an example that the process of fixing a bug isn’t always linear. for these sorts of situations I wonder if it would help to ask people not to go back and edit their posts if they’ve changed their mind or chosen to take a different approach?",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "bfee1c398ac3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-10\/1497404155380_bfee1c398ac33ba04a82_72.png",
            "first_name": "Silvia",
            "real_name": "Silvia Canelón (she\/her)",
            "display_name": "Silvia Canelón",
            "team": "T01DW9DLB2A",
            "name": "sp.canelon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605393429.000800",
        "parent_user_id": "U01ECGRL8CB",
        "attachments": [
            {
                "from_url": "https:\/\/r-devel.slack.com\/archives\/C01EVRJRYA0\/p1605394686014400",
                "fallback": "[November 14th, 2020 2:58 PM] gabembecker: But not really, because reading this back makes me realize that  unsortedness may have a similar problem. Need to know when vectors can receive that value",
                "ts": "1605394686.014400",
                "author_id": "U01ECGRL8CB",
                "author_subname": "Gabriel Becker",
                "channel_id": "C01EVRJRYA0",
                "is_msg_unfurl": true,
                "text": "But not really, because reading this back makes me realize that  unsortedness may have a similar problem. Need to know when vectors can receive that value",
                "author_name": "Gabriel Becker",
                "author_link": "https:\/\/r-devel.slack.com\/team\/U01ECGRL8CB",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/r-devel.slack.com\/archives\/C01EVRJRYA0\/p1605394686014400",
                "footer": "Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oxbhJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks for posting this! i’m still too far removed to really understand what’s going on, but I think the way you went about describing your steps was clear. I think including suggestions, links, and code chunks like you did was great. even "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/r-devel.slack.com\/archives\/C01EVRJRYA0\/p1605394686014400",
                                "text": "the most recent comment"
                            },
                            {
                                "type": "text",
                                "text": " was helpful to see as an example that the process of fixing a bug isn’t always linear. for these sorts of situations I wonder if it would help to ask people not to go back and edit their posts if they’ve changed their mind or chosen to take a different approach?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605395166.015900",
        "client_msg_id": "3608f0b5-9dc4-4f39-b1e5-ae3e2892c8a7",
        "text": "Things look good, KNOWN_UNSORTED does not appear to be used anywhere (at alll currently) so provided it is only ever correctly applied in the future, the patched code will give the right answer.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8xl6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Things look good, KNOWN_UNSORTED does not appear to be used anywhere (at alll currently) so provided it is only ever correctly applied in the future, the patched code will give the right answer."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U01F5FZJ4MN"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1605395442.016000",
        "client_msg_id": "01a83186-01d2-4551-b497-d5867f5a42d8",
        "text": "Probably. I think a maybe better way to do that for larger pieces of work is by checking things into github, which i did for the patch for review I posted. if you dig into the commits there you’ll see lots of catching cases that were wrong\/problems before and flip\/flopping in terms of approach it arrives at what (I hope) is a solid, safe patch.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605393429.000800",
        "parent_user_id": "U01ECGRL8CB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A5R0M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Probably. I think a maybe better way to do that for larger pieces of work is by checking things into github, which i did for the patch for review I posted. if you dig into the commits there you’ll see lots of catching cases that were wrong\/problems before and flip\/flopping in terms of approach it arrives at what (I hope) is a solid, safe patch."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01ETREKM6V"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "U01F4PHUT0R",
        "text": "<@U01F4PHUT0R> has joined the channel",
        "type": "message",
        "ts": "1605404502.016500"
    },
    {
        "user": "U01F4PHUT0R",
        "type": "message",
        "ts": "1605405031.018000",
        "client_msg_id": "35f518d3-a653-4400-8f92-8602385770f8",
        "text": "<@U01ECGRL8CB> This is wonderful that you are working out loud through issues and solutions. I think you are doing a great job helping folks with the process here. :tada:",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "811933f8298d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-14\/1487429531831_811933f8298deec8344f_72.jpg",
            "first_name": "",
            "real_name": "Carol Willing",
            "display_name": "Carol Willing",
            "team": "T01DW9DLB2A",
            "name": "willingc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lYBD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01ECGRL8CB"
                            },
                            {
                                "type": "text",
                                "text": " This is wonderful that you are working out loud through issues and solutions. I think you are doing a great job helping folks with the process here. "
                            },
                            {
                                "type": "emoji",
                                "name": "tada",
                                "unicode": "1f389"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01F4PHUT0R",
        "type": "message",
        "ts": "1605405250.018100",
        "client_msg_id": "89424616-7851-4e90-bc8d-56638e5f7df0",
        "text": "Great idea <@U01ECGRL8CB> for using GitHub and have the series of commits reflect your thought process.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "811933f8298d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-14\/1487429531831_811933f8298deec8344f_72.jpg",
            "first_name": "",
            "real_name": "Carol Willing",
            "display_name": "Carol Willing",
            "team": "T01DW9DLB2A",
            "name": "willingc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1605393429.000800",
        "parent_user_id": "U01ECGRL8CB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jyW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great idea "
                            },
                            {
                                "type": "user",
                                "user_id": "U01ECGRL8CB"
                            },
                            {
                                "type": "text",
                                "text": " for using GitHub and have the series of commits reflect your thought process."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
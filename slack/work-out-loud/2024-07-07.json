[
    {
        "user": "U062MDESA6S",
        "type": "message",
        "ts": "1720381029.098219",
        "client_msg_id": "ab1e1a6f-dd6f-4373-b551-a95d66aac403",
        "text": "I'm taking my first baby steps in the R C API and could use some advice from folks more knowledgeable. I'm trying to get access to the `~\/test.R#4` information displayed in the debugger prompt, ie:\n\n```&gt; source(\"~\/test.R\", keep.source = TRUE)\n&gt; debug(f)\n&gt; f(3, 4, 5)\ndebugging in: f(3, 4, 5)\ndebug at ~\/test.R#4: {\n    if (a + b + c &gt; 10) {\n        print(\"Big Sum\")\n...```\nI'd like to get the line number `4` from a function that I can run from within a `browser()`\/`debug` prompt. In the C code, this is produced <https:\/\/github.com\/wch\/r-source\/blob\/56509cd8d689fd69d6669d30d73a67b840eaaae3\/src\/main\/eval.c#L1313-L1315|in this function (src\/main\/eval.c#1313-1315)>. I've tried to adapt the relevant bits into a simplified function (below), but it's not coming up with anything useful.\n\n```SEXP srcpos(void) {\n    SEXP srcref = R_Srcref;\n    PROTECT(srcpos = allocVector(INTSXP, 1));\n    INTEGER(srcpos)[0] = Rf_asInteger(srcref);\n    UNPROTECT(1);\n    return srcpos;\n}```\nWould appreciate any and all suggestions\/ideas\/alternative approaches!",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gb7a486e82b3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b7a486e82b323d2e2e5ea299aad816b3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Doug",
            "real_name": "Doug Kelkhoff",
            "display_name": "Doug Kelkhoff",
            "team": "T01DW9DLB2A",
            "name": "doug.kelkhoff",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720381029.098219",
        "reply_count": 8,
        "reply_users_count": 2,
        "latest_reply": "1720483791.460869",
        "reply_users": [
            "U01N3ET8N82",
            "U062MDESA6S"
        ],
        "replies": [
            {
                "user": "U01N3ET8N82",
                "ts": "1720381982.530979"
            },
            {
                "user": "U062MDESA6S",
                "ts": "1720388523.627699"
            },
            {
                "user": "U01N3ET8N82",
                "ts": "1720403725.182799"
            },
            {
                "user": "U062MDESA6S",
                "ts": "1720409269.757999"
            },
            {
                "user": "U062MDESA6S",
                "ts": "1720409561.442059"
            },
            {
                "user": "U062MDESA6S",
                "ts": "1720410144.500209"
            },
            {
                "user": "U062MDESA6S",
                "ts": "1720483742.144399"
            },
            {
                "user": "U01N3ET8N82",
                "ts": "1720483791.460869"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B01V53YD4FJ",
                "app_unfurl_url": "https:\/\/github.com\/wch\/r-source\/blob\/56509cd8d689fd69d6669d30d73a67b840eaaae3\/src\/main\/eval.c#L1313-L1315",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/wch\/r-source\/blob\/56509cd8d689fd69d6669d30d73a67b840eaaae3\/src\/main\/eval.c | eval.c>",
                "text": "```\n\t\tRprintf(_(\"%s at %s#%d: \"), prefix,\n\t\t\tCHAR(STRING_ELT(filename, 0)),\n\t\t\tasInteger(srcref));\n```",
                "title": "<https:\/\/github.com\/wch\/r-source\/blob\/56509cd8d689fd69d6669d30d73a67b840eaaae3\/src\/main\/eval.c | eval.c>",
                "footer": "<https:\/\/github.com\/wch\/r-source|wch\/r-source>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SkMpN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm taking my first baby steps in the R C API and could use some advice from folks more knowledgeable. I'm trying to get access to the "
                            },
                            {
                                "type": "text",
                                "text": "~\/test.R#4",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information displayed in the debugger prompt, ie:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> source(\"~\/test.R\", keep.source = TRUE)\n> debug(f)\n> f(3, 4, 5)\ndebugging in: f(3, 4, 5)\ndebug at ~\/test.R#4: {\n    if (a + b + c > 10) {\n        print(\"Big Sum\")\n..."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'd like to get the line number "
                            },
                            {
                                "type": "text",
                                "text": "4",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " from a function that I can run from within a "
                            },
                            {
                                "type": "text",
                                "text": "browser()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\/"
                            },
                            {
                                "type": "text",
                                "text": "debug",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " prompt. In the C code, this is produced "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wch\/r-source\/blob\/56509cd8d689fd69d6669d30d73a67b840eaaae3\/src\/main\/eval.c#L1313-L1315",
                                "text": "in this function (src\/main\/eval.c#1313-1315)"
                            },
                            {
                                "type": "text",
                                "text": ". I've tried to adapt the relevant bits into a simplified function (below), but it's not coming up with anything useful.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "SEXP srcpos(void) {\n    SEXP srcref = R_Srcref;\n    PROTECT(srcpos = allocVector(INTSXP, 1));\n    INTEGER(srcpos)[0] = Rf_asInteger(srcref);\n    UNPROTECT(1);\n    return srcpos;\n}"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWould appreciate any and all suggestions\/ideas\/alternative approaches!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "white_check_mark",
                "users": [
                    "U062MDESA6S"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1720381982.530979",
        "client_msg_id": "3d2fe74c-50f2-4e99-af8f-e72bfeb7e5eb",
        "text": "my first step would be to figure out how to get the number from the R side first",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720381029.098219",
        "parent_user_id": "U062MDESA6S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J8WU8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my first step would be to figure out how to get the number from the R side first"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U062MDESA6S",
        "type": "message",
        "ts": "1720388523.627699",
        "client_msg_id": "99140ade-6ff1-4833-9f72-e9e71365929c",
        "text": "This was definitely my first goal too, but resorted to inspecting the C code after having no luck. The `srcref` used in the C code is something we _might_ have access to in a debugger using `getSrcref(sys.function())`, but it provides the whole function being debugged, not the exact line number that we're paused at.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gb7a486e82b3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b7a486e82b323d2e2e5ea299aad816b3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Doug",
            "real_name": "Doug Kelkhoff",
            "display_name": "Doug Kelkhoff",
            "team": "T01DW9DLB2A",
            "name": "doug.kelkhoff",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720381029.098219",
        "parent_user_id": "U062MDESA6S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mSO+q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was definitely my first goal too, but resorted to inspecting the C code after having no luck. The "
                            },
                            {
                                "type": "text",
                                "text": "srcref",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " used in the C code is something we "
                            },
                            {
                                "type": "text",
                                "text": "might",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " have access to in a debugger using "
                            },
                            {
                                "type": "text",
                                "text": "getSrcref(sys.function())",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but it provides the whole function being debugged, not the exact line number that we're paused at."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1720403725.182799",
        "client_msg_id": "e1ef6b92-89ab-4226-b495-e1c4c8e25eed",
        "text": "have you seen how utils::getParseData works?",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720381029.098219",
        "parent_user_id": "U062MDESA6S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8FEON",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "have you seen how utils::getParseData works?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U062MDESA6S",
        "type": "message",
        "ts": "1720409269.757999",
        "client_msg_id": "4eef4b96-ea33-4eb7-9dd1-d5613ad658e6",
        "text": "Oh, that looks like a great resource. I haven't looked into that one yet. I'll see if there's a gem in there that I can borrow.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gb7a486e82b3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b7a486e82b323d2e2e5ea299aad816b3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Doug",
            "real_name": "Doug Kelkhoff",
            "display_name": "Doug Kelkhoff",
            "team": "T01DW9DLB2A",
            "name": "doug.kelkhoff",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720381029.098219",
        "parent_user_id": "U062MDESA6S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ms5fL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, that looks like a great resource. I haven't looked into that one yet. I'll see if there's a gem in there that I can borrow."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U062MDESA6S",
        "type": "message",
        "ts": "1720409561.442059",
        "client_msg_id": "90363d54-43b1-4dfe-94ce-6793753b535e",
        "text": "This looks like another avenue, but I think I still need some indication of where the debugger is at that won't be captured here. This does open the door to converting from a token number to a line number if I had the current debug expression.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gb7a486e82b3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b7a486e82b323d2e2e5ea299aad816b3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Doug",
            "real_name": "Doug Kelkhoff",
            "display_name": "Doug Kelkhoff",
            "team": "T01DW9DLB2A",
            "name": "doug.kelkhoff",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720381029.098219",
        "parent_user_id": "U062MDESA6S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0UEf\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks like another avenue, but I think I still need some indication of where the debugger is at that won't be captured here. This does open the door to converting from a token number to a line number if I had the current debug expression."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U062MDESA6S",
        "type": "message",
        "ts": "1720410144.500209",
        "client_msg_id": "e2877214-1d61-4d42-af80-d92505413287",
        "text": "At worst I can at least captures this output with `sink()`, but that is a really messy way of getting at this info",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gb7a486e82b3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b7a486e82b323d2e2e5ea299aad816b3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Doug",
            "real_name": "Doug Kelkhoff",
            "display_name": "Doug Kelkhoff",
            "team": "T01DW9DLB2A",
            "name": "doug.kelkhoff",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1720381029.098219",
        "parent_user_id": "U062MDESA6S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pxG1S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At worst I can at least captures this output with "
                            },
                            {
                                "type": "text",
                                "text": "sink()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but that is a really messy way of getting at this info"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
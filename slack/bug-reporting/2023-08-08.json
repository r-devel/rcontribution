[
    {
        "user": "U01KXG8HH98",
        "type": "message",
        "ts": "1691504968.451369",
        "client_msg_id": "46d7e9ed-3e54-44f1-bd0e-03dd15c4320d",
        "text": "Hi, I just stumbled over some surprising behavior when multiplying sparse matrices that contain `Inf`. Here is a reproducible example; I had expected that all three calls return diagonal matrix with values `Inf`, `Inf`, `NaN`.\n```library(Matrix)\nmat &lt;- Matrix(0, nrow = 3, ncol = 3)\nmat[1,1] &lt;- 1\nmat[2,2] &lt;- 5\nmat[3,3] &lt;- 0\n\nmat2 &lt;- matrix(0, nrow = 3, ncol = 3)\nmat2[1,1] &lt;- Inf\nmat2[2,2] &lt;- Inf\nmat2[3,3] &lt;- Inf\n\nmat * mat2\n#&gt; 3 x 3 diagonal matrix of class \"ddiMatrix\"\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]  Inf    .    .\n#&gt; [2,]    .  Inf    .\n#&gt; [3,]    .    .  NaN\nmat * as(mat2, \"denseMatrix\")\n#&gt; 3 x 3 diagonal matrix of class \"ddiMatrix\"\n#&gt;      [,1] [,2] [,3]\n#&gt; [1,]  Inf    .    .\n#&gt; [2,]    .  Inf    .\n#&gt; [3,]    .    .  NaN\nmat * as(mat2, \"sparseMatrix\")\n#&gt; 3 x 3 sparse Matrix of class \"dsCMatrix\"\n#&gt;               \n#&gt; [1,] Inf   . .\n#&gt; [2,]   . Inf .\n#&gt; [3,]   .   . .```\nThere is a somewhat related question on <https:\/\/stackoverflow.com\/questions\/38275519\/sparse-matrix-multiplication-with-na|stackoverflow> which asks about multiplication of `0` and `NA`. I also found this <https:\/\/marc.info\/?l=r-devel&amp;m=159023097110433&amp;w=2|discussion> on the mailing list where Martin Maechler states that he thinks that  `0 * NA` should return `0`  for sparse matrices. However, I couldn't find any discussion of the case of `0 * Inf` . Happy about any feedback :)",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "7301d3650449",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-26\/1701400015568_7301d36504493d8014bf_72.jpg",
            "first_name": "Constantin",
            "real_name": "Constantin Ahlmann-Eltze",
            "display_name": "Constantin Ahlmann-Eltze",
            "team": "T01DW9DLB2A",
            "name": "constantin.ahlmann",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691504968.451369",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1691567661.849099",
        "reply_users": [
            "U01DZUA88S1",
            "U01KXG8HH98",
            "U033CD64FS4"
        ],
        "replies": [
            {
                "user": "U01DZUA88S1",
                "ts": "1691509032.028459"
            },
            {
                "user": "U01KXG8HH98",
                "ts": "1691510666.115509"
            },
            {
                "user": "U033CD64FS4",
                "ts": "1691517887.992909"
            },
            {
                "user": "U01KXG8HH98",
                "ts": "1691526656.567739"
            },
            {
                "user": "U033CD64FS4",
                "ts": "1691528190.590759"
            },
            {
                "user": "U01KXG8HH98",
                "ts": "1691567661.849099"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1691567661.849099",
        "attachments": [
            {
                "from_url": "https:\/\/stackoverflow.com\/questions\/38275519\/sparse-matrix-multiplication-with-na",
                "service_icon": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a",
                "thumb_url": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded",
                "thumb_width": 316,
                "thumb_height": 316,
                "id": 1,
                "original_url": "https:\/\/stackoverflow.com\/questions\/38275519\/sparse-matrix-multiplication-with-na",
                "fallback": "Stack Overflow: Sparse matrix multiplication with NA",
                "text": "Performing matrix multiplication on sparse matrices in R gives a different result as the same operation performed on dense forms of the same matrices if there are NA's in the data.\n\nSome data to",
                "title": "Sparse matrix multiplication with NA",
                "title_link": "https:\/\/stackoverflow.com\/questions\/38275519\/sparse-matrix-multiplication-with-na",
                "service_name": "Stack Overflow"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ppA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, I just stumbled over some surprising behavior when multiplying sparse matrices that contain "
                            },
                            {
                                "type": "text",
                                "text": "Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Here is a reproducible example; I had expected that all three calls return diagonal matrix with values "
                            },
                            {
                                "type": "text",
                                "text": "Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "NaN",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "library(Matrix)\nmat <- Matrix(0, nrow = 3, ncol = 3)\nmat[1,1] <- 1\nmat[2,2] <- 5\nmat[3,3] <- 0\n\nmat2 <- matrix(0, nrow = 3, ncol = 3)\nmat2[1,1] <- Inf\nmat2[2,2] <- Inf\nmat2[3,3] <- Inf\n\nmat * mat2\n#> 3 x 3 diagonal matrix of class \"ddiMatrix\"\n#>      [,1] [,2] [,3]\n#> [1,]  Inf    .    .\n#> [2,]    .  Inf    .\n#> [3,]    .    .  NaN\nmat * as(mat2, \"denseMatrix\")\n#> 3 x 3 diagonal matrix of class \"ddiMatrix\"\n#>      [,1] [,2] [,3]\n#> [1,]  Inf    .    .\n#> [2,]    .  Inf    .\n#> [3,]    .    .  NaN\nmat * as(mat2, \"sparseMatrix\")\n#> 3 x 3 sparse Matrix of class \"dsCMatrix\"\n#>               \n#> [1,] Inf   . .\n#> [2,]   . Inf .\n#> [3,]   .   . ."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThere is a somewhat related question on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stackoverflow.com\/questions\/38275519\/sparse-matrix-multiplication-with-na",
                                "text": "stackoverflow"
                            },
                            {
                                "type": "text",
                                "text": " which asks about multiplication of "
                            },
                            {
                                "type": "text",
                                "text": "0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "NA",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I also found this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/marc.info\/?l=r-devel&m=159023097110433&w=2",
                                "text": "discussion"
                            },
                            {
                                "type": "text",
                                "text": " on the mailing list where Martin Maechler states that he thinks that  "
                            },
                            {
                                "type": "text",
                                "text": "0 * NA",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " should return "
                            },
                            {
                                "type": "text",
                                "text": "0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  for sparse matrices. However, I couldn't find any discussion of the case of "
                            },
                            {
                                "type": "text",
                                "text": "0 * Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " . Happy about any feedback :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01DZUA88S1",
        "type": "message",
        "ts": "1691509032.028459",
        "client_msg_id": "a3090330-ca55-4cc5-b1a5-894530730258",
        "text": "This is probably a case where it's best to get a response from Martin Maechler if possible, so I would suggest to email the R-devel mailing list or open a report on Bugzilla. I agree that the behaviour is surprising, so it could be a bug.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "g580131f5a7a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/580131f5a7a4fa33c811dc6d20ab3ef8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Heather",
            "real_name": "Heather Turner (she\/her)",
            "display_name": "Heather Turner",
            "team": "T01DW9DLB2A",
            "name": "ht",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691504968.451369",
        "parent_user_id": "U01KXG8HH98",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5=Qe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is probably a case where it's best to get a response from Martin Maechler if possible, so I would suggest to email the R-devel mailing list or open a report on Bugzilla. I agree that the behaviour is surprising, so it could be a bug."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01KXG8HH98",
        "type": "message",
        "ts": "1691510666.115509",
        "client_msg_id": "d9ef0680-5619-4d66-9146-e7e6ba576dc6",
        "text": "Thanks :slightly_smiling_face:",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "7301d3650449",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-26\/1701400015568_7301d36504493d8014bf_72.jpg",
            "first_name": "Constantin",
            "real_name": "Constantin Ahlmann-Eltze",
            "display_name": "Constantin Ahlmann-Eltze",
            "team": "T01DW9DLB2A",
            "name": "constantin.ahlmann",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691504968.451369",
        "parent_user_id": "U01KXG8HH98",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pI6OX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U033CD64FS4",
        "type": "message",
        "ts": "1691517887.992909",
        "edited": {
            "user": "U033CD64FS4",
            "ts": "1691517917.000000"
        },
        "client_msg_id": "6d6767e6-ed0c-485f-9b3b-00f97f2fefa5",
        "text": "It is expected, and the logic is the same for `NaN` and `Inf`.  The principle is that structural zeros (i.e., those not stored in memory, printed as `.` rather than `0`) are \"supreme\" and should annihilate even `NaN` and `Inf`.  The reason for the principle is twofold: it preserves sparseness _and_ it allows one to determine the nonzero pattern of the result as the intersection of the nonzero patterns of the operands.  The latter means that we can know the length of the arrays that we have to allocate without needing inspect the `x` slots for special values.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "8ca4e7a47a0c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-02-10\/3103315181841_8ca4e7a47a0c1ee8c851_72.jpg",
            "first_name": "Mikael",
            "real_name": "Mikael Jagan",
            "display_name": "Mikael Jagan",
            "team": "T01DW9DLB2A",
            "name": "jaganmn2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691504968.451369",
        "parent_user_id": "U01KXG8HH98",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Muh5S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is expected, and the logic is the same for "
                            },
                            {
                                "type": "text",
                                "text": "NaN",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".  The principle is that structural zeros (i.e., those not stored in memory, printed as "
                            },
                            {
                                "type": "text",
                                "text": ".",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " rather than "
                            },
                            {
                                "type": "text",
                                "text": "0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") are \"supreme\" and should annihilate even "
                            },
                            {
                                "type": "text",
                                "text": "NaN",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".  The reason for the principle is twofold: it preserves sparseness "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it allows one to determine the nonzero pattern of the result as the intersection of the nonzero patterns of the operands.  The latter means that we can know the length of the arrays that we have to allocate without needing inspect the "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " slots for special values."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01KXG8HH98",
        "type": "message",
        "ts": "1691526656.567739",
        "client_msg_id": "169c3751-ae33-4f4e-9ab3-4b0fbdbb6282",
        "text": "Thanks for the explanation. Do you know if this is documented somewhere?",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "7301d3650449",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-26\/1701400015568_7301d36504493d8014bf_72.jpg",
            "first_name": "Constantin",
            "real_name": "Constantin Ahlmann-Eltze",
            "display_name": "Constantin Ahlmann-Eltze",
            "team": "T01DW9DLB2A",
            "name": "constantin.ahlmann",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691504968.451369",
        "parent_user_id": "U01KXG8HH98",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2zYy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the explanation. Do you know if this is documented somewhere?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U033CD64FS4",
        "type": "message",
        "ts": "1691528190.590759",
        "client_msg_id": "6303da55-2fa0-4d6c-98ec-5c7ad6c0c399",
        "text": "The `0 * NA` behaviour, but not the `0 * Inf` behaviour, is documented in `help(\"kronecker-methods\")`.  Not a great place for it, as the user is left to read between the lines.  The right place for such details is a vignette - it's in the backlog ...",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "8ca4e7a47a0c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-02-10\/3103315181841_8ca4e7a47a0c1ee8c851_72.jpg",
            "first_name": "Mikael",
            "real_name": "Mikael Jagan",
            "display_name": "Mikael Jagan",
            "team": "T01DW9DLB2A",
            "name": "jaganmn2",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1691504968.451369",
        "parent_user_id": "U01KXG8HH98",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Slw3R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The "
                            },
                            {
                                "type": "text",
                                "text": "0 * NA",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " behaviour, but not the "
                            },
                            {
                                "type": "text",
                                "text": "0 * Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " behaviour, is documented in "
                            },
                            {
                                "type": "text",
                                "text": "help(\"kronecker-methods\")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".  Not a great place for it, as the user is left to read between the lines.  The right place for such details is a vignette - it's in the backlog ..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-2",
                "users": [
                    "U01DZUA88S1"
                ],
                "count": 1
            }
        ]
    }
]
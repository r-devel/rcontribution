[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18462] aggregate.formula fails to remove terms in the RHS with dot notation*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18462>\n\n--- Comment #4 from Elin Waring (<mailto:elin.waring@gmail.com|elin.waring@gmail.com>) ---\nI have been looking into the code of aggregate.formula() more deeply. \n\nThere is this comment starting at around line 171\n\n```\n## lhs ends up as quote(cbind(v1, v2, ....)) using all variables in\n        ## data, except those that are used on the RHS.\n\n        ## This version uses terms() to get the rhs variables, which means\n        ## that it will NOT remove a variable from the expansion if a\n        ## transformation of it is on the RHS of the formula.\n```\n\nSo this is clearly a known thing, but it is not documented in the aggregate\nfunction documentation.\n\nI think it could be be argued that handling this would be a good feature, but\nmeanwhile it would be important to document it both in the aggregate\ndocumentation but also in\n<https:\/\/stat.ethz.ch\/R-manual\/R-devel\/library\/stats\/html\/formula.html>  which\nshould at least mention that it is possible that in some contexts the \"other\noperators\" may not work.\n\nHappy to make a patch for that if others agree.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1704050841.681339",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y\/Zob",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18462] aggregate.formula fails to remove terms in the RHS with dot notation",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18462"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #4 from Elin Waring ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:elin.waring@gmail.com",
                                "text": "elin.waring@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nI have been looking into the code of aggregate.formula() more deeply. \n\nThere is this comment starting at around line 171\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "## lhs ends up as quote(cbind(v1, v2, ....)) using all variables in\n        ## data, except those that are used on the RHS.\n\n        ## This version uses terms() to get the rhs variables, which means\n        ## that it will NOT remove a variable from the expansion if a\n        ## transformation of it is on the RHS of the formula.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nSo this is clearly a known thing, but it is not documented in the aggregate\nfunction documentation.\n\nI think it could be be argued that handling this would be a good feature, but\nmeanwhile it would be important to document it both in the aggregate\ndocumentation but also in\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stat.ethz.ch\/R-manual\/R-devel\/library\/stats\/html\/formula.html"
                            },
                            {
                                "type": "text",
                                "text": "  which\nshould at least mention that it is possible that in some contexts the \"other\noperators\" may not work.\n\nHappy to make a patch for that if others agree."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18623] Inconsistent Method Dispatch in t.test and kruskal.test (and probably others) with Named Arguments*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18623>\n\n--- Comment #6 from Elin Waring (<mailto:elin.waring@gmail.com|elin.waring@gmail.com>) ---\nYes and I just was looking at `aggregate()` and saw that in 2012 it was\nmodified to replace `formula` with `x`.  I think that consistency would be a\ngood argument for doing the same here. \n\nHowever, I think that the real issue is that t.test is not expecting a data\nframe for x, it is expecting a vector. If you force a data frame as the x, it\nwill convert the columns into one long vector.  In the case of iris this will\ncreate a character vector because of the factor (Species).  Then it can't\ncalculate the mean or variance and so it errors out.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1704054134.586649",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ttUA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18623] Inconsistent Method Dispatch in t.test and kruskal.test (and probably others) with Named Arguments",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18623"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #6 from Elin Waring ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:elin.waring@gmail.com",
                                "text": "elin.waring@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nYes and I just was looking at "
                            },
                            {
                                "type": "text",
                                "text": "aggregate()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and saw that in 2012 it was\nmodified to replace "
                            },
                            {
                                "type": "text",
                                "text": "formula",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".  I think that consistency would be a\ngood argument for doing the same here. \n\nHowever, I think that the real issue is that t.test is not expecting a data\nframe for x, it is expecting a vector. If you force a data frame as the x, it\nwill convert the columns into one long vector.  In the case of iris this will\ncreate a character vector because of the factor (Species).  Then it can't\ncalculate the mean or variance and so it errors out."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
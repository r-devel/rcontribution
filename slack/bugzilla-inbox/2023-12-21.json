[
    {
        "subtype": "bot_message",
        "text": "*[Bug 15853] chol problem with positive semi definite matrix and pivoting*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=15853>\n\n--- Comment #6 from Mikael Jagan (<mailto:jaganmn@mcmaster.ca|jaganmn@mcmaster.ca>) ---\nCreated attachment 3277\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3277&amp;action=edit>\nchol(x, pivot=TRUE) for two examples of near-positive semidefinite 'x'\n\nI am unable to reproduce your (described) output using my build of R, where the\ncomputed rank of `A` is 5 and the relative error in `crossprod(R)` is small\neven without zeroing the trailing submatrix.  `dpstrf` does not encounter a\nnegative pivot.\n\nI am attaching a script (`.R` and `.Rout`) that contains the first and second\nexamples together, where the second matrix is computed a bit more carefully\nthan in your comment 5 (conceptually as `tcrossprod(Q Lambda^(1\/2))`).\n\n(In reply to Simon Wood from comment #5)\n&gt; The point here is that there is a contradiction between the actual behaviour\n&gt; and what the helpfile says. \n\nYou should clarify the exact point of contradiction.  The `Warning` section in\n`help(\"chol\")`, quoted in comment 3, says\n\n```\n    {A not positive semidefinite} =&gt; {large error}\n```\n\nIt does _not_ say that\n\n```\n    {A     positive semidefinite} =&gt; {small error}\n```\n\nwhere I am defining \"error\" as `norm(A[p, p] - crossprod(R)) \/ norm(A)` and\n\"positive semidefinite\" as `min(e)\/max(abs(e)) &gt;= -z` for computed eigenvalues\n`e` and some small, positive tolerance `z`.\n\nNeither example here contradicts the warning, as both matrices are numerically\npositive semidefinite.  Then maybe you are referring to the more general text\nin the `Details` section,\n\n&gt; `t(Q[, oo]) %*% Q[, oo]` equals `x`, or, alternatively, `t(Q) %*% Q` equals `x[pivot, pivot]`\n\nwhere clearly here we do _not_ have \"equality\", with or without zeroing the\ntrailing submatrix.\n\nProposals for `help(\"chol\")`, then, could be:\n\n1. Clarify the text in `Details`, maybe adding \"see Warning\".\n\n2. Expand the text in `Warning` to address potential issues even in the\npositive semidefinite case, where `abs(min(e))\/max(abs(e)) &lt;&lt; 1`. \nSpecifically, where the computed rank `r` is less than `n`, users should\nconsider following Higham by always setting `R[(r+1):n, (r+1):n]` to 0.  (Why R\nhas not done this automatically, in its `La_chol()`, is not clear to me... Is\nit ever desirable to keep unfactorized elements of `A` in `R`?)\n\n3. Add Higham and\/or LAWN 161 to `References`.  The Higham reference is section\n10.3 of the second edition of his book *Accuracy and Stability of Numerical\nAlgorithms*, notably Theorem 10.14 (discussed also in [LAWN\n161](https:\/\/www.netlib.org\/lapack\/lawnspdf\/lawn161.pdf), sections 6 and 7).\n\n(In reply to Simon Wood from comment #5)\n&gt; I'm not sure the issue is really about crossprod(X) somehow not being\n&gt; positive semi-definite - by the same logic there would never be any\n&gt; possibility of computing non-trivially with positive semi definite matrices\n&gt; in finite precision would there? - there would only be positive definite or\n&gt; indefinite. \n\nUsers _can_ compute with positive semidefinite matrices, but they should be\nvery careful and understand the caveats of the numerical algorithms that they\nemploy.  Before computing with `R &lt;- chol(A, pivot = TRUE)`, defensive code\nwill always check the computed rank `r`, and highly defensive code will always\nmeasure the relative error in `crossprod(R)` (_after_ zeroing if `r &lt; n`).",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1703182937.676109",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6+SP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 15853] chol problem with positive semi definite matrix and pivoting",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=15853"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #6 from Mikael Jagan ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:jaganmn@mcmaster.ca",
                                "text": "jaganmn@mcmaster.ca"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nCreated attachment 3277\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3277&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3277&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nchol(x, pivot=TRUE) for two examples of near-positive semidefinite 'x'\n\nI am unable to reproduce your (described) output using my build of R, where the\ncomputed rank of "
                            },
                            {
                                "type": "text",
                                "text": "A",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is 5 and the relative error in "
                            },
                            {
                                "type": "text",
                                "text": "crossprod(R)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is small\neven without zeroing the trailing submatrix.  "
                            },
                            {
                                "type": "text",
                                "text": "dpstrf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " does not encounter a\nnegative pivot.\n\nI am attaching a script ("
                            },
                            {
                                "type": "text",
                                "text": ".R",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": ".Rout",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") that contains the first and second\nexamples together, where the second matrix is computed a bit more carefully\nthan in your comment 5 (conceptually as "
                            },
                            {
                                "type": "text",
                                "text": "tcrossprod(Q Lambda^(1\/2))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ").\n\n(In reply to Simon Wood from comment #5)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The point here is that there is a contradiction between the actual behaviour\nand what the helpfile says. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nYou should clarify the exact point of contradiction.  The "
                            },
                            {
                                "type": "text",
                                "text": "Warning",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " section in\n"
                            },
                            {
                                "type": "text",
                                "text": "help(\"chol\")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", quoted in comment 3, says\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    {A not positive semidefinite} => {large error}\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIt does "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " say that\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    {A     positive semidefinite} => {small error}\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nwhere I am defining \"error\" as "
                            },
                            {
                                "type": "text",
                                "text": "norm(A[p, p] - crossprod(R)) \/ norm(A)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and\n\"positive semidefinite\" as "
                            },
                            {
                                "type": "text",
                                "text": "min(e)\/max(abs(e)) >= -z",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for computed eigenvalues\n"
                            },
                            {
                                "type": "text",
                                "text": "e",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and some small, positive tolerance "
                            },
                            {
                                "type": "text",
                                "text": "z",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nNeither example here contradicts the warning, as both matrices are numerically\npositive semidefinite.  Then maybe you are referring to the more general text\nin the "
                            },
                            {
                                "type": "text",
                                "text": "Details",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " section,\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "t(Q[, oo]) %*% Q[, oo]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " equals "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", or, alternatively, "
                            },
                            {
                                "type": "text",
                                "text": "t(Q) %*% Q",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " equals "
                            },
                            {
                                "type": "text",
                                "text": "x[pivot, pivot]",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nwhere clearly here we do "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " have \"equality\", with or without zeroing the\ntrailing submatrix.\n\nProposals for "
                            },
                            {
                                "type": "text",
                                "text": "help(\"chol\")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", then, could be:\n\n1. Clarify the text in "
                            },
                            {
                                "type": "text",
                                "text": "Details",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", maybe adding \"see Warning\".\n\n2. Expand the text in "
                            },
                            {
                                "type": "text",
                                "text": "Warning",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to address potential issues even in the\npositive semidefinite case, where "
                            },
                            {
                                "type": "text",
                                "text": "abs(min(e))\/max(abs(e)) << 1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". \nSpecifically, where the computed rank "
                            },
                            {
                                "type": "text",
                                "text": "r",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is less than "
                            },
                            {
                                "type": "text",
                                "text": "n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", users should\nconsider following Higham by always setting "
                            },
                            {
                                "type": "text",
                                "text": "R[(r+1):n, (r+1):n]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to 0.  (Why R\nhas not done this automatically, in its "
                            },
                            {
                                "type": "text",
                                "text": "La_chol()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", is not clear to me... Is\nit ever desirable to keep unfactorized elements of "
                            },
                            {
                                "type": "text",
                                "text": "A",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in "
                            },
                            {
                                "type": "text",
                                "text": "R",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?)\n\n3. Add Higham and\/or LAWN 161 to "
                            },
                            {
                                "type": "text",
                                "text": "References",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".  The Higham reference is section\n10.3 of the second edition of his book *Accuracy and Stability of Numerical\nAlgorithms*, notably Theorem 10.14 (discussed also in [LAWN\n161](https:\/\/www.netlib.org\/lapack\/lawnspdf\/lawn161.pdf), sections 6 and 7).\n\n(In reply to Simon Wood from comment #5)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure the issue is really about crossprod(X) somehow not being\npositive semi-definite - by the same logic there would never be any\npossibility of computing non-trivially with positive semi definite matrices\nin finite precision would there? - there would only be positive definite or\nindefinite. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nUsers "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " compute with positive semidefinite matrices, but they should be\nvery careful and understand the caveats of the numerical algorithms that they\nemploy.  Before computing with "
                            },
                            {
                                "type": "text",
                                "text": "R <- chol(A, pivot = TRUE)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", defensive code\nwill always check the computed rank "
                            },
                            {
                                "type": "text",
                                "text": "r",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and highly defensive code will always\nmeasure the relative error in "
                            },
                            {
                                "type": "text",
                                "text": "crossprod(R)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ("
                            },
                            {
                                "type": "text",
                                "text": "after",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " zeroing if "
                            },
                            {
                                "type": "text",
                                "text": "r < n",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
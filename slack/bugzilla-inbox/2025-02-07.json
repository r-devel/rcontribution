[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18848] libpq missing ldap support*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18848>\n\n--- Comment #1 from Jeroen Ooms (<mailto:jeroenooms@gmail.com|jeroenooms@gmail.com>) ---\nAnother issue with libpq:\n\nRPostgres shows a linking error for `$(pkg-config --libs libpq)` because\n`-lcrypt32` is missing. This is a transitive dependency of libcrypto (part of\nopenssl). However it is not included:\n\n```\n&gt; system(\"pkg-config --libs-only-l libpq\")\n-lpq -lpgcommon -lpgport -lssl -lcrypto -lm -lssl -lcrypto -lz -lpthread\n-lshell32 -lws2_32 -lsecur32 \n\n```\n\nIf we query openssl directly then `-lcrypt32` does get included:\n\n```\n&gt; system(\"pkg-config --libs-only-l openssl\")\n-lssl -lz -lws2_32 -lgdi32 -lcrypt32 -lcrypto -lz -lws2_32 -lgdi32 -lcrypt32 \n\n```\n\nMaybe `libpq.pc` needs `Requires.private: openssl`.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738947237.013979",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6YkI+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18848] libpq missing ldap support",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18848"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #1 from Jeroen Ooms ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:jeroenooms@gmail.com",
                                "text": "jeroenooms@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nAnother issue with libpq:\n\nRPostgres shows a linking error for "
                            },
                            {
                                "type": "text",
                                "text": "$(pkg-config --libs libpq)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " because\n"
                            },
                            {
                                "type": "text",
                                "text": "-lcrypt32",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is missing. This is a transitive dependency of libcrypto (part of\nopenssl). However it is not included:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> system(\"pkg-config --libs-only-l libpq\")\n-lpq -lpgcommon -lpgport -lssl -lcrypto -lm -lssl -lcrypto -lz -lpthread\n-lshell32 -lws2_32 -lsecur32 \n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIf we query openssl directly then "
                            },
                            {
                                "type": "text",
                                "text": "-lcrypt32",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " does get included:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> system(\"pkg-config --libs-only-l openssl\")\n-lssl -lz -lws2_32 -lgdi32 -lcrypt32 -lcrypto -lz -lws2_32 -lgdi32 -lcrypt32 \n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nMaybe "
                            },
                            {
                                "type": "text",
                                "text": "libpq.pc",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " needs "
                            },
                            {
                                "type": "text",
                                "text": "Requires.private: openssl",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18851] New: could default argument for 'last' in substring() be changed?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18851>\n\n            Bug ID: 18851\n           Summary: could default argument for 'last' in substring() be\n                    changed?\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Wishlist\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:kevinushey@gmail.com|kevinushey@gmail.com>\n\nI think the general expectation from users is that `substring(x, 10)` would\ngive the character vector x, but with the rest of the string starting from the\n10th character. This is true for 99.9% of usages, but then of course one can\nsee:\n\n```\n&gt; x &lt;- paste(rep.int(\"a\", 1E6), collapse = \"\")\n&gt; substring(x, 10) == substring(x, 10, nchar(x))\n[1] TRUE\n&gt; \n&gt; x &lt;- paste(rep.int(\"a\", 1E6 + 1), collapse = \"\")\n&gt; substring(x, 10) == substring(x, 10, nchar(x))\n[1] FALSE\n```\n\nTo wit, would it be reasonable to change the default argument for `last` to\nsomething like `.Machine$integer.max`?\n\nIf not, perhaps the default argument for `substr`'s `stop` could use this, just\nto improve its ergonomics in a backwards-compatible way?",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738956215.420879",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m1JrR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18851] New: could default argument for 'last' in substring() be changed?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18851"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18851\n           Summary: could default argument for 'last' in substring() be\n                    changed?\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Wishlist\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:kevinushey@gmail.com",
                                "text": "kevinushey@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI think the general expectation from users is that "
                            },
                            {
                                "type": "text",
                                "text": "substring(x, 10)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " would\ngive the character vector x, but with the rest of the string starting from the\n10th character. This is true for 99.9% of usages, but then of course one can\nsee:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> x <- paste(rep.int(\"a\", 1E6), collapse = \"\")\n> substring(x, 10) == substring(x, 10, nchar(x))\n[1] TRUE\n> \n> x <- paste(rep.int(\"a\", 1E6 + 1), collapse = \"\")\n> substring(x, 10) == substring(x, 10, nchar(x))\n[1] FALSE\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nTo wit, would it be reasonable to change the default argument for "
                            },
                            {
                                "type": "text",
                                "text": "last",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to\nsomething like "
                            },
                            {
                                "type": "text",
                                "text": ".Machine$integer.max",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "?\n\nIf not, perhaps the default argument for "
                            },
                            {
                                "type": "text",
                                "text": "substr",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "'s "
                            },
                            {
                                "type": "text",
                                "text": "stop",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " could use this, just\nto improve its ergonomics in a backwards-compatible way?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18849] as.environment() with its x argument not valid + error message not consistent?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18849>\n\nElin Waring (<mailto:elin.waring@gmail.com|elin.waring@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |elin.waring@gmail.com\n\n--- Comment #1 from Elin Waring (<mailto:elin.waring@gmail.com|elin.waring@gmail.com>) ---\n\nIt took me a minute to understand but \n\n```\n&gt; as.environment(x = 1)\nError in as.environment(x = 1) : \n  supplied argument name 'x' does not match 'object'\n&gt; as.environment(1)\n&lt;environment: R_GlobalEnv&gt;\n&gt; \n\n\n```\n\nIt looks like that code has not been touched for many years, though it\ncertainly seems like an issue. The documentation never uses `x=` and does not\nwarn against it as far as I can see.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738956656.812629",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l0cB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18849] as.environment() with its x argument not valid + error message not consistent?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18849"
                            },
                            {
                                "type": "text",
                                "text": "\n\nElin Waring ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:elin.waring@gmail.com",
                                "text": "elin.waring@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |elin.waring@gmail.com\n\n--- Comment #1 from Elin Waring ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:elin.waring@gmail.com",
                                "text": "elin.waring@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\n\nIt took me a minute to understand but \n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> as.environment(x = 1)\nError in as.environment(x = 1) : \n  supplied argument name 'x' does not match 'object'\n> as.environment(1)\n<environment: R_GlobalEnv>\n> \n\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIt looks like that code has not been touched for many years, though it\ncertainly seems like an issue. The documentation never uses "
                            },
                            {
                                "type": "text",
                                "text": "x=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and does not\nwarn against it as far as I can see."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18851] could default argument for 'last' in substring() be changed?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18851>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |maechler@stat.math.ethz.ch\n             Status|UNCONFIRMED                 |CONFIRMED\n     Ever confirmed|0                           |1\n\n--- Comment #1 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nThe default 100'000  has been there from the very beginning (currently see it\nin  a version of `character.R` from 1999),  and it has slightly bothered me\nmany times since I've first saw it ... but somehow never bothered to raise it\nas an issue (at the very beginning being to shy to annoy the \"gods\" who created\nR ..;-)\n\nLong story told, I'd tend to agree, we should update to maxInt;\nThis, BTW concerns  `substring&lt;-` identically.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738957760.744179",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iibx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18851] could default argument for 'last' in substring() be changed?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18851"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |maechler@stat.math.ethz.ch\n             Status|UNCONFIRMED                 |CONFIRMED\n     Ever confirmed|0                           |1\n\n--- Comment #1 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThe default 100'000  has been there from the very beginning (currently see it\nin  a version of "
                            },
                            {
                                "type": "text",
                                "text": "character.R",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " from 1999),  and it has slightly bothered me\nmany times since I've first saw it ... but somehow never bothered to raise it\nas an issue (at the very beginning being to shy to annoy the \"gods\" who created\nR ..;-)\n\nLong story told, I'd tend to agree, we should update to maxInt;\nThis, BTW concerns  "
                            },
                            {
                                "type": "text",
                                "text": "substring<-",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " identically."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18848] libpq missing ldap support*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18848>\n\n--- Comment #2 from Tomas Kalibera (<mailto:tomas.kalibera@gmail.com|tomas.kalibera@gmail.com>) ---\nYes, I've enabled the ldap support but so far only tested the build of Rtools\nitself. Thanks for testing via RPostgres - so when you add -lcrypt32 to the\npkg-config file (or dependency on openssl), does the package build and pass\nchecks correctly?",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738957807.487479",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H5QYz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18848] libpq missing ldap support",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18848"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #2 from Tomas Kalibera ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:tomas.kalibera@gmail.com",
                                "text": "tomas.kalibera@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nYes, I've enabled the ldap support but so far only tested the build of Rtools\nitself. Thanks for testing via RPostgres - so when you add -lcrypt32 to the\npkg-config file (or dependency on openssl), does the package build and pass\nchecks correctly?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18849] as.environment() with its x argument not valid + error message not consistent?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18849>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |maechler@stat.math.ethz.ch\n         Resolution|---                         |FIXED\n             Status|UNCONFIRMED                 |CLOSED\n\n--- Comment #2 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nYes, `as.environment` belong to the `.S3PrimitiveGenerics` and they have been\ntold to have an `x` argument..\nUnfortunately, obviously, the `as.environment()` C source has instead checked\nfor first argument named `\"object\"`.\n\n```\n&gt; ee &lt;- as.environment(object = list(a=1, bb=2))\n&gt; ls.str(ee)\na :  num 1\nbb :  num 2\n&gt; \n```\n\nI agree the above should become an error and using `x` instead should become\nvalid instead.\n\nI've committed the simple fix, a few minutes ago, svn rev 87707.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738959511.847479",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WCJmL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18849] as.environment() with its x argument not valid + error message not consistent?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18849"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |maechler@stat.math.ethz.ch\n         Resolution|---                         |FIXED\n             Status|UNCONFIRMED                 |CLOSED\n\n--- Comment #2 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nYes, "
                            },
                            {
                                "type": "text",
                                "text": "as.environment",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " belong to the "
                            },
                            {
                                "type": "text",
                                "text": ".S3PrimitiveGenerics",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and they have been\ntold to have an "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " argument..\nUnfortunately, obviously, the "
                            },
                            {
                                "type": "text",
                                "text": "as.environment()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " C source has instead checked\nfor first argument named "
                            },
                            {
                                "type": "text",
                                "text": "\"object\"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> ee <- as.environment(object = list(a=1, bb=2))\n> ls.str(ee)\na :  num 1\nbb :  num 2\n> \n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI agree the above should become an error and using "
                            },
                            {
                                "type": "text",
                                "text": "x",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead should become\nvalid instead.\n\nI've committed the simple fix, a few minutes ago, svn rev 87707."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18848] libpq missing ldap support*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18848>\n\n--- Comment #3 from Jeroen Ooms (<mailto:jeroenooms@gmail.com|jeroenooms@gmail.com>) ---\nYes with the `-lcrypt32` added, it links correctly and AFAICT things works as\nexpected. We may still need to double-check with someone running a windows\npostgres server if the authentication and encryption is fully working for them.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738959950.478439",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NpGL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18848] libpq missing ldap support",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18848"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #3 from Jeroen Ooms ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:jeroenooms@gmail.com",
                                "text": "jeroenooms@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nYes with the "
                            },
                            {
                                "type": "text",
                                "text": "-lcrypt32",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " added, it links correctly and AFAICT things works as\nexpected. We may still need to double-check with someone running a windows\npostgres server if the authentication and encryption is fully working for them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18851] could default argument for 'last' in substring() be changed?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18851>\n\n--- Comment #2 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\n(In reply to Martin Maechler from comment #1)\n&gt; The default 100'000  has been there from the very beginning ....\nwell it's been 10 x larger.\n\nActually, current R code uses `as.integer(last)` when passing, so we cannot use\n`Inf` currently, but in some sense that is what we'd conceptually want.\n\nAlso, replacing\n`1000000L`     by\n`2147483647L`  does not look very nicely, nor does\n`.Machine$integer.max`   (which incidentally is very slightly more costly)\n\nPossibly we should consider doing more in the .Internal(.)  code, notably \n`coerceToInteger(.)` but if we'd allow 'Inf' and check for that and in that\ncase\nuse for loops where we no longer need the  `i &lt; so`  check at all for the `Inf`\ncase.  \nA slight \"blow up\" of code (typically even some code duplication) would solve\nthe problem and may even be very slightly faster {the check for the \"end of\nstring\" needs to be done in any case}.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738962763.796579",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zgVi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18851] could default argument for 'last' in substring() be changed?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18851"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #2 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\n(In reply to Martin Maechler from comment #1)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The default 100'000  has been there from the very beginning ...."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "well it's been 10 x larger.\n\nActually, current R code uses "
                            },
                            {
                                "type": "text",
                                "text": "as.integer(last)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " when passing, so we cannot use\n"
                            },
                            {
                                "type": "text",
                                "text": "Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " currently, but in some sense that is what we'd conceptually want.\n\nAlso, replacing\n"
                            },
                            {
                                "type": "text",
                                "text": "1000000L",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "     by\n"
                            },
                            {
                                "type": "text",
                                "text": "2147483647L",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  does not look very nicely, nor does\n"
                            },
                            {
                                "type": "text",
                                "text": ".Machine$integer.max",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "   (which incidentally is very slightly more costly)\n\nPossibly we should consider doing more in the .Internal(.)  code, notably \n"
                            },
                            {
                                "type": "text",
                                "text": "coerceToInteger(.)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but if we'd allow 'Inf' and check for that and in that\ncase\nuse for loops where we no longer need the  "
                            },
                            {
                                "type": "text",
                                "text": "i < so",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  check at all for the "
                            },
                            {
                                "type": "text",
                                "text": "Inf",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\ncase.  \nA slight \"blow up\" of code (typically even some code duplication) would solve\nthe problem and may even be very slightly faster {the check for the \"end of\nstring\" needs to be done in any case}."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18852] New: R CMD check does not check return value from <https:\/\/worldtimeapi.org> robustly enough*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18852>\n\n            Bug ID: 18852\n           Summary: R CMD check does not check return value from\n                    <https:\/\/worldtimeapi.org> robustly enough\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: minor\n          Priority: P5\n         Component: Analyses\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>\n\nCreated attachment 3448\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3448&amp;action=edit>\nRelax check to be for any length-1 missing input, not logical NA specifically.\n\nSee the r-pkg-devel thread:\n\n<https:\/\/stat.ethz.ch\/pipermail\/r-package-devel\/2025q1\/011453.html>\n\nI think the `identical(NA, now)` check is at least partially at fault. I\nhaven't reproduced locally, but just from reading the code it seems clear that\nif the return value happens not to match the expected pattern, `as.POSIXct`\nwill just return `.POSIXct(NA_real_, tz='UTC')`.\n\nThe patch adapts for this possibility by allowing any length-1 NA return value\nto signal \"failed to read from worldtimeapi\".",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738966602.019049",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qqyY4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18852] New: R CMD check does not check return value from ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/worldtimeapi.org",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " robustly enough",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18852"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18852\n           Summary: R CMD check does not check return value from\n                    "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/worldtimeapi.org"
                            },
                            {
                                "type": "text",
                                "text": " robustly enough\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: minor\n          Priority: P5\n         Component: Analyses\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nCreated attachment 3448\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3448&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3448&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nRelax check to be for any length-1 missing input, not logical NA specifically.\n\nSee the r-pkg-devel thread:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stat.ethz.ch\/pipermail\/r-package-devel\/2025q1\/011453.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI think the "
                            },
                            {
                                "type": "text",
                                "text": "identical(NA, now)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " check is at least partially at fault. I\nhaven't reproduced locally, but just from reading the code it seems clear that\nif the return value happens not to match the expected pattern, "
                            },
                            {
                                "type": "text",
                                "text": "as.POSIXct",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nwill just return "
                            },
                            {
                                "type": "text",
                                "text": ".POSIXct(NA_real_, tz='UTC')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nThe patch adapts for this possibility by allowing any length-1 NA return value\nto signal \"failed to read from worldtimeapi\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18853] New: poppler-data package missing*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18853>\n\n            Bug ID: 18853\n           Summary: poppler-data package missing\n           Product: Rtools\n           Version: 4.4\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Toolchain and libraries\n          Assignee: <mailto:tomas.kalibera@gmail.com|tomas.kalibera@gmail.com>\n          Reporter: <mailto:jeroenooms@gmail.com|jeroenooms@gmail.com>\n\nThe poppler library needs some small additional static encoding files called\n\"poppler-data\", see the homepage for details: <https:\/\/poppler.freedesktop.org\/>\n\nMost distros ship this as a separate package, for example:\n\n - <https:\/\/github.com\/msys2\/MINGW-packages\/tree\/master\/mingw-w64-poppler-data>\n - <https:\/\/packages.debian.org\/sid\/poppler-data>\n - <https:\/\/github.com\/R-macos\/recipes\/blob\/master\/recipes\/poppler-data>\n\nOthers just bundle them with the poppler package which is easier:\n\n - <https:\/\/github.com\/Homebrew\/homebrew-core\/blob\/master\/Formula\/p\/poppler.rb>\n\nOne way or another, the 'pdftools' R package needs these files to build\noffline.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738968020.537149",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xj3ma",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18853] New: poppler-data package missing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18853"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18853\n           Summary: poppler-data package missing\n           Product: Rtools\n           Version: 4.4\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Toolchain and libraries\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:tomas.kalibera@gmail.com",
                                "text": "tomas.kalibera@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:jeroenooms@gmail.com",
                                "text": "jeroenooms@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe poppler library needs some small additional static encoding files called\n\"poppler-data\", see the homepage for details: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/poppler.freedesktop.org\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMost distros ship this as a separate package, for example:\n\n - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/msys2\/MINGW-packages\/tree\/master\/mingw-w64-poppler-data"
                            },
                            {
                                "type": "text",
                                "text": "\n - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/packages.debian.org\/sid\/poppler-data"
                            },
                            {
                                "type": "text",
                                "text": "\n - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/R-macos\/recipes\/blob\/master\/recipes\/poppler-data"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOthers just bundle them with the poppler package which is easier:\n\n - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/Homebrew\/homebrew-core\/blob\/master\/Formula\/p\/poppler.rb"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOne way or another, the 'pdftools' R package needs these files to build\noffline."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18853] poppler-data package missing*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18853>\n\n--- Comment #1 from Jeroen Ooms (<mailto:jeroenooms@gmail.com|jeroenooms@gmail.com>) ---\nForgot to add that these files are supposed to be locatable via:\n\n```\npkg-config --variable=poppler_datadir poppler-data\n```",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1738968210.460639",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DpD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18853] poppler-data package missing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18853"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #1 from Jeroen Ooms ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:jeroenooms@gmail.com",
                                "text": "jeroenooms@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nForgot to add that these files are supposed to be locatable via:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "pkg-config --variable=poppler_datadir poppler-data\n"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
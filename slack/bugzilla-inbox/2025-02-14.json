[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18434] Additional entries for tools::get_exclude_patterns()*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18434>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|NEW                         |CLOSED\n                 CC|                            |maechler@stat.math.ethz.ch\n         Resolution|---                         |FIXED\n\n--- Comment #3 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nIndeed your patch fixes both this and bug 18432; as R had been coined \"GNU S\"\nfor some time in the past, and also we have had so much \"coding power\" thanks\nGNU emacs in those days, I'm finally taking this up and commit it to the\nnon-small existing list of exclude patterns .. in the slightly optimistic\nattitude to do no harm.\n\n--&gt; committed to R's svn rev 87718",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1739565375.803149",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "22qWT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18434] Additional entries for tools::get_exclude_patterns()",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18434"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|NEW                         |CLOSED\n                 CC|                            |maechler@stat.math.ethz.ch\n         Resolution|---                         |FIXED\n\n--- Comment #3 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nIndeed your patch fixes both this and bug 18432; as R had been coined \"GNU S\"\nfor some time in the past, and also we have had so much \"coding power\" thanks\nGNU emacs in those days, I'm finally taking this up and commit it to the\nnon-small existing list of exclude patterns .. in the slightly optimistic\nattitude to do no harm.\n\n--> committed to R's svn rev 87718"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18432] Include all vim swap files in tools:::get_exclude_patterns()*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18432>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|UNCONFIRMED                 |CLOSED\n         Resolution|---                         |FIXED\n                 CC|                            |maechler@stat.math.ethz.ch\n\n--- Comment #1 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nThe proposed patch for bug 18434 also includes the pattern from here;\n--&gt; committed to R's svn rev 87718",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1739565386.250549",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3K7mu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18432] Include all vim swap files in tools:::get_exclude_patterns()",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18432"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|UNCONFIRMED                 |CLOSED\n         Resolution|---                         |FIXED\n                 CC|                            |maechler@stat.math.ethz.ch\n\n--- Comment #1 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThe proposed patch for bug 18434 also includes the pattern from here;\n--> committed to R's svn rev 87718"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18434] Additional entries for tools::get_exclude_patterns()*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18434>\n\n--- Comment #4 from Dirk Eddelbuettel (<mailto:edd@debian.org|edd@debian.org>) ---\nThanks.  While the report is indeed 2 1\/2 years old it still survives in my\ncheckout so I could say with a wink that I have been testing it...\n\n```\nedd@rob:~\/svn\/r-devel$ svn diff\nIndex: src\/library\/tools\/R\/build.R\n===================================================================\n--- src\/library\/tools\/R\/build.R (revision 87712)\n+++ src\/library\/tools\/R\/build.R (working copy)\n@@ -54,7 +54,7 @@\n     c(\"^\\\\.Rbuildignore$\",\n       \"(^|\/)\\\\.DS_Store$\",\n       \"^\\\\.(RData|Rhistory)$\",\n-      \"~$\", \"\\\\.bak$\", \"\\\\.swp$\",\n+      \"~$\", \"\\\\.bak$\", \"\\\\.sw.$\",\n       \"(^|\/)\\\\.#[^\/]*$\", \"(^|\/)#[^\/]*#$\",\n       ## Outdated ...\n       \"^TITLE$\", \"^data\/00Index$\",\n@@ -67,7 +67,9 @@\n       ## IRIX, of some vintage\n       \"^src\/so_locations$\",\n       ## Sweave detrius\n-      \"^inst\/doc\/Rplots\\\\.(ps|pdf)$\"\n+      \"^inst\/doc\/Rplots\\\\.(ps|pdf)$\",\n+      ## GNU Global\n+      \"^(GPATH|GRTAGS|GTAGS)$\"\n       )\n\n\nedd@rob:~\/svn\/r-devel$ \n```",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1739567034.500649",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i62MH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18434] Additional entries for tools::get_exclude_patterns()",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18434"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #4 from Dirk Eddelbuettel ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:edd@debian.org",
                                "text": "edd@debian.org"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThanks.  While the report is indeed 2 1\/2 years old it still survives in my\ncheckout so I could say with a wink that I have been testing it...\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "edd@rob:~\/svn\/r-devel$ svn diff\nIndex: src\/library\/tools\/R\/build.R\n===================================================================\n--- src\/library\/tools\/R\/build.R (revision 87712)\n+++ src\/library\/tools\/R\/build.R (working copy)\n@@ -54,7 +54,7 @@\n     c(\"^\\\\.Rbuildignore$\",\n       \"(^|\/)\\\\.DS_Store$\",\n       \"^\\\\.(RData|Rhistory)$\",\n-      \"~$\", \"\\\\.bak$\", \"\\\\.swp$\",\n+      \"~$\", \"\\\\.bak$\", \"\\\\.sw.$\",\n       \"(^|\/)\\\\.#[^\/]*$\", \"(^|\/)#[^\/]*#$\",\n       ## Outdated ...\n       \"^TITLE$\", \"^data\/00Index$\",\n@@ -67,7 +67,9 @@\n       ## IRIX, of some vintage\n       \"^src\/so_locations$\",\n       ## Sweave detrius\n-      \"^inst\/doc\/Rplots\\\\.(ps|pdf)$\"\n+      \"^inst\/doc\/Rplots\\\\.(ps|pdf)$\",\n+      ## GNU Global\n+      \"^(GPATH|GRTAGS|GTAGS)$\"\n       )\n\n\nedd@rob:~\/svn\/r-devel$ \n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18858] New: Should lengths() retain dimensions of its input?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18858>\n\n            Bug ID: 18858\n           Summary: Should lengths() retain dimensions of its input?\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: minor\n          Priority: P5\n         Component: Documentation\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>\n\nThis is in the `\\examples{}`:\n\n```\n## should always be true, except when a length does not fit in 32 bits\nstopifnot(identical(lengths(l), vapply(l, length, integer(1L))))\n```\n\nThe implication is that `lengths()` is equivalent to `sapply(., length)`, but\nhere is a counter-example:\n\n```\nl = lapply(0:3, \\(n) 0:n)\ndim(l) = c(2L, 2L)\n\nidentical(lengths(l), vapply(l, length, integer(1L)))\n# [1] FALSE\n```\n\nIs `lengths()` retaining the dimension of the input intended behavior? I guess\nit can go either way, but the current documentation is not crystal clear here.\n\nI came here by way of `lintr::lengths_linter()`\n(<https:\/\/github.com\/r-lib\/lintr\/issues\/2649>), where we find usage like\n`sapply(x, length)` statically and recommend `lengths()` instead.\n\nI was in the middle of adding a new example to `?lengths` covering my example\nwhen I came upon the statement above.\n\nI am happy to help with a patch either way (i.e., either adding an example\nclarifying it's intended behavior, or clearing out `.Dim` if it's a bug).",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1739574032.338929",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UOB2d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18858] New: Should lengths() retain dimensions of its input?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18858"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18858\n           Summary: Should lengths() retain dimensions of its input?\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: minor\n          Priority: P5\n         Component: Documentation\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis is in the "
                            },
                            {
                                "type": "text",
                                "text": "\\examples{}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "## should always be true, except when a length does not fit in 32 bits\nstopifnot(identical(lengths(l), vapply(l, length, integer(1L))))\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThe implication is that "
                            },
                            {
                                "type": "text",
                                "text": "lengths()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is equivalent to "
                            },
                            {
                                "type": "text",
                                "text": "sapply(., length)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but\nhere is a counter-example:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "l = lapply(0:3, \\(n) 0:n)\ndim(l) = c(2L, 2L)\n\nidentical(lengths(l), vapply(l, length, integer(1L)))\n# [1] FALSE\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIs "
                            },
                            {
                                "type": "text",
                                "text": "lengths()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " retaining the dimension of the input intended behavior? I guess\nit can go either way, but the current documentation is not crystal clear here.\n\nI came here by way of "
                            },
                            {
                                "type": "text",
                                "text": "lintr::lengths_linter()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-lib\/lintr\/issues\/2649"
                            },
                            {
                                "type": "text",
                                "text": "), where we find usage like\n"
                            },
                            {
                                "type": "text",
                                "text": "sapply(x, length)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " statically and recommend "
                            },
                            {
                                "type": "text",
                                "text": "lengths()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead.\n\nI was in the middle of adding a new example to "
                            },
                            {
                                "type": "text",
                                "text": "?lengths",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " covering my example\nwhen I came upon the statement above.\n\nI am happy to help with a patch either way (i.e., either adding an example\nclarifying it's intended behavior, or clearing out "
                            },
                            {
                                "type": "text",
                                "text": ".Dim",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " if it's a bug)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18859] New: documentation of termplot*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18859>\n\n            Bug ID: 18859\n           Summary: documentation of termplot\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: enhancement\n          Priority: P5\n         Component: Documentation\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:Thomas.SOEIRO@ap-hm.fr|Thomas.SOEIRO@ap-hm.fr>\n\nThis is a follow-up of a [discussion on\nr-help](<https:\/\/r-help.r-project.narkive.com\/BCYUsqk8\/r-termplot-intervals-se-or-ci>)\nmany years ago regarding the description of `se` in `?termplot`.\n\nPeter Dalgaard said:\n\n&gt; From ?termplot:\n&gt;\n&gt; <http:\/\/col.se|col.se>, <http:\/\/lty.se|lty.se>, <http:\/\/lwd.se|lwd.se>: color, line type and line width for the\n'twice-standard-error curve' when 'se = TRUE'.\n&gt;\n&gt; ...which is findable, but might usefully also be made explicit in the definition of the se= argument.\n\nEric Goodwin said:\n\n&gt; in the code the se.fit values from predict() are multiplied by 2 [presumably an approximation of 1.96], suggesting it's a rough 95% confidence interval\n\nMaybe this should be added in the documentation too?",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1739577501.408949",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DEe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18859] New: documentation of termplot",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18859"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18859\n           Summary: documentation of termplot\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: enhancement\n          Priority: P5\n         Component: Documentation\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:Thomas.SOEIRO@ap-hm.fr",
                                "text": "Thomas.SOEIRO@ap-hm.fr",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis is a follow-up of a [discussion on\nr-help]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/r-help.r-project.narkive.com\/BCYUsqk8\/r-termplot-intervals-se-or-ci"
                            },
                            {
                                "type": "text",
                                "text": ")\nmany years ago regarding the description of "
                            },
                            {
                                "type": "text",
                                "text": "se",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in "
                            },
                            {
                                "type": "text",
                                "text": "?termplot",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nPeter Dalgaard said:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From ?termplot:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/col.se",
                                "text": "col.se"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/lty.se",
                                "text": "lty.se"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/lwd.se",
                                "text": "lwd.se"
                            },
                            {
                                "type": "text",
                                "text": ": color, line type and line width for the"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "'twice-standard-error curve' when 'se = TRUE'.\n>"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "...which is findable, but might usefully also be made explicit in the definition of the se= argument."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nEric Goodwin said:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in the code the se.fit values from predict() are multiplied by 2 [presumably an approximation of 1.96], suggesting it's a rough 95% confidence interval"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nMaybe this should be added in the documentation too?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18573] Could grid::makeContent() record the package providing the grob?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18573>\n\nPaul Murrell (<mailto:paul@stat.auckland.ac.nz|paul@stat.auckland.ac.nz>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|UNCONFIRMED                 |CLOSED\n         Resolution|---                         |WONTFIX",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722328732.231359",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gw2pY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18573] Could grid::makeContent() record the package providing the grob?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18573"
                            },
                            {
                                "type": "text",
                                "text": "\n\nPaul Murrell ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:paul@stat.auckland.ac.nz",
                                "text": "paul@stat.auckland.ac.nz",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|UNCONFIRMED                 |CLOSED\n         Resolution|---                         |WONTFIX"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18769] New: Names containing backslash are not deparsed properly*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18769>\n\n            Bug ID: 18769\n           Summary: Names containing backslash are not deparsed properly\n           Product: R\n           Version: R 4.4.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Low-level\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:murdoch.duncan@gmail.com|murdoch.duncan@gmail.com>\n\nIt is possible to create a name containing a backslash, but these deparse into\ndifferent and possibly illegal code:\n\n```\nx &lt;- list(\"\\\\alpha\" = 0.05)\nx\n#&gt; $`\\\\alpha`\n#&gt; [1] 0.05\ntxt &lt;- deparse(x)\ntxt\n#&gt; [1] \"list(\\\"\\\\alpha\\\" = 0.05)\"\nparse(text = txt) # different code \n#&gt; expression(list(\"\\alpha\" = 0.05))\n\ny &lt;- list(\"\\\\%\" = 100)\ntxt &lt;- deparse(y)\ntxt\n#&gt; [1] \"list(\\\"\\\\%\\\" = 100)\"\nparse(text = txt) # illegal code\n#&gt; Error: '\\%' is an unrecognized escape in character string (&lt;text&gt;:1:8)\n```",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722348163.070699",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rRH6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18769] New: Names containing backslash are not deparsed properly",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18769"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18769\n           Summary: Names containing backslash are not deparsed properly\n           Product: R\n           Version: R 4.4.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Low-level\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:murdoch.duncan@gmail.com",
                                "text": "murdoch.duncan@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt is possible to create a name containing a backslash, but these deparse into\ndifferent and possibly illegal code:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "x <- list(\"\\\\alpha\" = 0.05)\nx\n#> $`\\\\alpha`\n#> [1] 0.05\ntxt <- deparse(x)\ntxt\n#> [1] \"list(\\\"\\\\alpha\\\" = 0.05)\"\nparse(text = txt) # different code \n#> expression(list(\"\\alpha\" = 0.05))\n\ny <- list(\"\\\\%\" = 100)\ntxt <- deparse(y)\ntxt\n#> [1] \"list(\\\"\\\\%\\\" = 100)\"\nparse(text = txt) # illegal code\n#> Error: '\\%' is an unrecognized escape in character string (<text>:1:8)\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18770] New: padj does the opposite of what it says for mtext*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770>\n\n            Bug ID: 18770\n           Summary: padj does the opposite of what it says for mtext\n           Product: R\n           Version: R 4.4.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Graphics\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:AHL27@pitt.edu|AHL27@pitt.edu>\n\nCreated attachment 3381\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3381&amp;action=edit>\nExample Plot Showing `padj` Behavior\n\nThe documentation available in `?mtext` has the following entry for `padj`:\n\npadj: adjustment for each string perpendicular to the reading direction (which\nis controlled by adj). For strings parallel to the axes, padj = 0 means left or\nbottom alignment, and padj = 1 means right or top alignment (relative to the\nline).\n\nHowever, this description is inaccurate--the actual description based on\nexisting functionality should read (differences bolded):\n\nFor strings parallel to the axes, padj = 0 means left or **top** alignment, and\npadj = 1 means right or **bottom** alignment (relative to the line).\n\nThis can be verified using the below script. `padj` values of `c(-2,0,2)` are\nused to accentuate the differences, but the same results are true for\n`c(0,0.5,1)`\n (the text just overlaps).\n\n```\nplot(1, axes=FALSE, xlab='', ylab='')\nfor(i in seq_len(4)){\n  for(j in c(-2,0,2)){\n    mtext(paste0(\"padj=\",j), side=i, padj=j)\n  }\n}\n```\n\nNote that for `side=c(1,3)`, `padj` values closer to 0 are oriented more\ntowards the top, whereas `padj` values closer to 1 are oriented more towards\nthe bottom. \n\nIt's unclear to me if this is a bug in the performance of `padj` or just a\ndocumentation error. It seems more like a bug in performance, since `adj` also\nimplies \"left or bottom\" vs. \"right or top\".",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722369851.524059",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "08l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18770] New: padj does the opposite of what it says for mtext",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18770\n           Summary: padj does the opposite of what it says for mtext\n           Product: R\n           Version: R 4.4.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Graphics\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:AHL27@pitt.edu",
                                "text": "AHL27@pitt.edu"
                            },
                            {
                                "type": "text",
                                "text": "\n\nCreated attachment 3381\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3381&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3381&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nExample Plot Showing "
                            },
                            {
                                "type": "text",
                                "text": "padj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Behavior\n\nThe documentation available in "
                            },
                            {
                                "type": "text",
                                "text": "?mtext",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " has the following entry for "
                            },
                            {
                                "type": "text",
                                "text": "padj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":\n\npadj: adjustment for each string perpendicular to the reading direction (which\nis controlled by adj). For strings parallel to the axes, padj = 0 means left or\nbottom alignment, and padj = 1 means right or top alignment (relative to the\nline).\n\nHowever, this description is inaccurate--the actual description based on\nexisting functionality should read (differences bolded):\n\nFor strings parallel to the axes, padj = 0 means left or **top** alignment, and\npadj = 1 means right or **bottom** alignment (relative to the line).\n\nThis can be verified using the below script. "
                            },
                            {
                                "type": "text",
                                "text": "padj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " values of "
                            },
                            {
                                "type": "text",
                                "text": "c(-2,0,2)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are\nused to accentuate the differences, but the same results are true for\n"
                            },
                            {
                                "type": "text",
                                "text": "c(0,0.5,1)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n (the text just overlaps).\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "plot(1, axes=FALSE, xlab='', ylab='')\nfor(i in seq_len(4)){\n  for(j in c(-2,0,2)){\n    mtext(paste0(\"padj=\",j), side=i, padj=j)\n  }\n}\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nNote that for "
                            },
                            {
                                "type": "text",
                                "text": "side=c(1,3)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "padj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " values closer to 0 are oriented more\ntowards the top, whereas "
                            },
                            {
                                "type": "text",
                                "text": "padj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " values closer to 1 are oriented more towards\nthe bottom. \n\nIt's unclear to me if this is a bug in the performance of "
                            },
                            {
                                "type": "text",
                                "text": "padj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or just a\ndocumentation error. It seems more like a bug in performance, since "
                            },
                            {
                                "type": "text",
                                "text": "adj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " also\nimplies \"left or bottom\" vs. \"right or top\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18693] rmultinom()  using LDOUBLE is platform dependent*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18693>\n\n--- Comment #6 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nIt may be relevant to notice that \"all\" our competition seem in some way to\nprovide plugins \/ toolboxes to work \"quadmath\" \/ quadruple-precision  (Matlab,\nJulia, Python, Mathematica,..):\n<https:\/\/en.wikipedia.org\/wiki\/Quadruple-precision_floating-point_format#Libraries_and_toolboxes>\n((but I have not checked if these all work on M1\/M2\/.. Aarch64 Macs, ... but I\nassume they would.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722369884.445009",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DHt\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18693] rmultinom()  using LDOUBLE is platform dependent",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18693"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #6 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nIt may be relevant to notice that \"all\" our competition seem in some way to\nprovide plugins \/ toolboxes to work \"quadmath\" \/ quadruple-precision  (Matlab,\nJulia, Python, Mathematica,..):\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Quadruple-precision_floating-point_format#Libraries_and_toolboxes"
                            },
                            {
                                "type": "text",
                                "text": "\n((but I have not checked if these all work on M1\/M2\/.. Aarch64 Macs, ... but I\nassume they would."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18770] padj does the opposite of what it says for mtext*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770>\n\nAidan H Lakshman (<mailto:AHL27@pitt.edu|AHL27@pitt.edu>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n           Hardware|Other                       |arm64\/M1\n           Severity|normal                      |minor\n\n--- Comment #1 from Aidan H Lakshman (<mailto:AHL27@pitt.edu|AHL27@pitt.edu>) ---\nI forgot to add--this bug was identified on an ARM Mac, with figures rendered\nin XQuartz. I'm not sure if it's OSX-specific or a general graphics bug.\n\n```\n&gt; sessionInfo()\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Monterey 12.6.1\n```",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722369986.646799",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4oN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18770] padj does the opposite of what it says for mtext",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAidan H Lakshman ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:AHL27@pitt.edu",
                                "text": "AHL27@pitt.edu"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n           Hardware|Other                       |arm64\/M1\n           Severity|normal                      |minor\n\n--- Comment #1 from Aidan H Lakshman ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:AHL27@pitt.edu",
                                "text": "AHL27@pitt.edu"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nI forgot to add--this bug was identified on an ARM Mac, with figures rendered\nin XQuartz. I'm not sure if it's OSX-specific or a general graphics bug.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> sessionInfo()\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Monterey 12.6.1\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18693] rmultinom()  using LDOUBLE is platform dependent*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18693>\n\n--- Comment #7 from Simon Urbanek (<mailto:simon.urbanek@r-project.org|simon.urbanek@r-project.org>) ---\nI think that is rather a separate topic - R has even arbitrary precision\npackages. Also the link just confirms what I said above - it is not something\nunder our control, you can't use quadmath if it is not supported by the\ncomputer and run-time - that has nothing to do with the software itself. I\ndon't have anything against having R use `__float128`, but given that it is not\nsupported by Apple clang on arm64 it doesn't address the practical issue for\nMacs as it wouldn't be used even if we added it.\n\nHonestly, I 'm not even sure this is the right place for this discussion as\ntechnically the issue is about algorithms in `rmultinorm()`, not about\nquad-math support by Apple on arm64 for which the simple answer is\n\"unsupported\".\n\n(FWIW with GNU Fortran you can still use `real(16)` in Fortran (or `real128`\nfrom `iso_fortran_env`) for quad-precision - at least until we have to switch\nto `flang-new` - but I have not tested if it is actually implemented.)",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722372599.097199",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LGF6g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18693] rmultinom()  using LDOUBLE is platform dependent",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18693"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #7 from Simon Urbanek ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:simon.urbanek@r-project.org",
                                "text": "simon.urbanek@r-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nI think that is rather a separate topic - R has even arbitrary precision\npackages. Also the link just confirms what I said above - it is not something\nunder our control, you can't use quadmath if it is not supported by the\ncomputer and run-time - that has nothing to do with the software itself. I\ndon't have anything against having R use "
                            },
                            {
                                "type": "text",
                                "text": "__float128",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but given that it is not\nsupported by Apple clang on arm64 it doesn't address the practical issue for\nMacs as it wouldn't be used even if we added it.\n\nHonestly, I 'm not even sure this is the right place for this discussion as\ntechnically the issue is about algorithms in "
                            },
                            {
                                "type": "text",
                                "text": "rmultinorm()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", not about\nquad-math support by Apple on arm64 for which the simple answer is\n\"unsupported\".\n\n(FWIW with GNU Fortran you can still use "
                            },
                            {
                                "type": "text",
                                "text": "real(16)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in Fortran (or "
                            },
                            {
                                "type": "text",
                                "text": "real128",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nfrom "
                            },
                            {
                                "type": "text",
                                "text": "iso_fortran_env",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") for quad-precision - at least until we have to switch\nto "
                            },
                            {
                                "type": "text",
                                "text": "flang-new",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " - but I have not tested if it is actually implemented.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18770] padj does the opposite of what it says for mtext when `side=c(1,3)`*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770>\n\nSimon Urbanek (<mailto:simon.urbanek@r-project.org|simon.urbanek@r-project.org>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |simon.urbanek@r-project.org\n\n--- Comment #2 from Simon Urbanek (<mailto:simon.urbanek@r-project.org|simon.urbanek@r-project.org>) ---\nI think the description is correct: when using `padj=0` (let's talk about x\naxis for simplicity) then the **bottom** of the string is aligned with the\nbaseline (as described in the help page), not the top. Similarly with `padj=1`\nthe **top** of the string is aligned. Perhaps easier to see if drawn like this:\n\n```\nplot(1, axes=FALSE, xlab='', ylab='')\nmtext(\"---------------\", padj=0.5)\nmtext(\"padj=0\", padj=0)\nmtext(\"padj=1\", padj=1)\n```",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722373731.768509",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5uJv2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18770] padj does the opposite of what it says for mtext when ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "side=c(1,3)",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSimon Urbanek ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:simon.urbanek@r-project.org",
                                "text": "simon.urbanek@r-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |simon.urbanek@r-project.org\n\n--- Comment #2 from Simon Urbanek ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:simon.urbanek@r-project.org",
                                "text": "simon.urbanek@r-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nI think the description is correct: when using "
                            },
                            {
                                "type": "text",
                                "text": "padj=0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (let's talk about x\naxis for simplicity) then the **bottom** of the string is aligned with the\nbaseline (as described in the help page), not the top. Similarly with "
                            },
                            {
                                "type": "text",
                                "text": "padj=1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nthe **top** of the string is aligned. Perhaps easier to see if drawn like this:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "plot(1, axes=FALSE, xlab='', ylab='')\nmtext(\"---------------\", padj=0.5)\nmtext(\"padj=0\", padj=0)\nmtext(\"padj=1\", padj=1)\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18770] padj does the opposite of what it says for mtext when `side=c(1,3)`*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770>\n\n--- Comment #3 from Aidan H Lakshman (<mailto:AHL27@pitt.edu|AHL27@pitt.edu>) ---\nThanks for that visualization, that definitely does help. I'm not sure I agree\nwith the interpretation, since it seems relatively confusing\/unintuitive to\nusers, but my personal preferences don't always align with the way things are.\n\nRegardless, though, your described behavior also seems inconsistent:\n\n```\nplot(1, axes=FALSE, xlab='', ylab='')\nfor(i in seq_len(4)){\n  for(j in c(0,0.5,1)){\n    if(j==0.5){\n      mtext('------------', side=i, padj=j)\n    } else {\n      mtext(paste0(\"padj=\",j), side=i, padj=j)\n    }\n  }\n}\n\n```\n\nIn this case, along the x-axis, your description is correct--the bottom of the\nbox enclosing the text is aligned with the line at `padj=0`, and the top of the\nbox enclosing the text is aligned with the line at `padj=1`. \n\nHowever, it also says that for strings parallel to the axis, `padj=c(0,1)`\nspecifies left\/right alignment (respectively). If you plot this on the y-axis,\nthe text is now aligned such that the **right** side of the box enclosing the\ntext is flush with the axis for `padj=0`, and the **left** is flush with the\naxis for `padj=1`, which is again the opposite of what is described in the\ndocumentation.\n\nIs the documentation intended to indicate that the `padj` alignment is \"left\n(relative to the window) or top (relative to the line)\"? Or is it intended to\nalways indicate alignment with respect to the reading direction, relative to\nthe line? If the latter is true, shouldn't the documentation just say \"...adj =\n0 means bottom alignment, and padj = 1 means top alignment (relative to the\nline).\"?\n\nI appreciate the clarification!",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722376007.245059",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iOB=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18770] padj does the opposite of what it says for mtext when ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "side=c(1,3)",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #3 from Aidan H Lakshman ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:AHL27@pitt.edu",
                                "text": "AHL27@pitt.edu"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThanks for that visualization, that definitely does help. I'm not sure I agree\nwith the interpretation, since it seems relatively confusing\/unintuitive to\nusers, but my personal preferences don't always align with the way things are.\n\nRegardless, though, your described behavior also seems inconsistent:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "plot(1, axes=FALSE, xlab='', ylab='')\nfor(i in seq_len(4)){\n  for(j in c(0,0.5,1)){\n    if(j==0.5){\n      mtext('------------', side=i, padj=j)\n    } else {\n      mtext(paste0(\"padj=\",j), side=i, padj=j)\n    }\n  }\n}\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIn this case, along the x-axis, your description is correct--the bottom of the\nbox enclosing the text is aligned with the line at "
                            },
                            {
                                "type": "text",
                                "text": "padj=0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and the top of the\nbox enclosing the text is aligned with the line at "
                            },
                            {
                                "type": "text",
                                "text": "padj=1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". \n\nHowever, it also says that for strings parallel to the axis, "
                            },
                            {
                                "type": "text",
                                "text": "padj=c(0,1)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nspecifies left\/right alignment (respectively). If you plot this on the y-axis,\nthe text is now aligned such that the **right** side of the box enclosing the\ntext is flush with the axis for "
                            },
                            {
                                "type": "text",
                                "text": "padj=0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and the **left** is flush with the\naxis for "
                            },
                            {
                                "type": "text",
                                "text": "padj=1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", which is again the opposite of what is described in the\ndocumentation.\n\nIs the documentation intended to indicate that the "
                            },
                            {
                                "type": "text",
                                "text": "padj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " alignment is \"left\n(relative to the window) or top (relative to the line)\"? Or is it intended to\nalways indicate alignment with respect to the reading direction, relative to\nthe line? If the latter is true, shouldn't the documentation just say \"...adj =\n0 means bottom alignment, and padj = 1 means top alignment (relative to the\nline).\"?\n\nI appreciate the clarification!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18770] padj does the opposite of what it says for mtext when `side=c(1,3)`*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770>\n\n--- Comment #4 from Simon Urbanek (<mailto:simon.urbanek@r-project.org|simon.urbanek@r-project.org>) ---\nYour code confirms my point, but I agree with your last part -- the least\nconfusing definition would be to explicitly refer to the text direction as that\nis unambiguous (AFAICT that is what `?par` uses when describing `adj`) so drop\nthe \"or\" ambiguity (I think you just flagged the wrong part as incorrect in the\noriginal post ;)). `padj=0` means always bottom aligned and `padj=1` means top\naligned relative to the text plane - that holds true even for perpendicular\nlabels.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722379099.252979",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LTdv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18770] padj does the opposite of what it says for mtext when ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "side=c(1,3)",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #4 from Simon Urbanek ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:simon.urbanek@r-project.org",
                                "text": "simon.urbanek@r-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nYour code confirms my point, but I agree with your last part -- the least\nconfusing definition would be to explicitly refer to the text direction as that\nis unambiguous (AFAICT that is what "
                            },
                            {
                                "type": "text",
                                "text": "?par",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " uses when describing "
                            },
                            {
                                "type": "text",
                                "text": "adj",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") so drop\nthe \"or\" ambiguity (I think you just flagged the wrong part as incorrect in the\noriginal post ;)). "
                            },
                            {
                                "type": "text",
                                "text": "padj=0",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " means always bottom aligned and "
                            },
                            {
                                "type": "text",
                                "text": "padj=1",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " means top\naligned relative to the text plane - that holds true even for perpendicular\nlabels."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18770] padj does the opposite of what it says for mtext when `side=c(1,3)`*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770>\n\n--- Comment #5 from Aidan H Lakshman (<mailto:AHL27@pitt.edu|AHL27@pitt.edu>) ---\nCreated attachment 3382\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3382&amp;action=edit>\nExample mtext patch\n\n&gt; (I think you just flagged the wrong part as incorrect in the original post ;)).\n\nhaha, I'm glad it at least ended up being productive!\n\nThis is a pretty small change, so I'm not sure it needs a whole patch...but for\ncompleteness sake I put together a small patch here. It removes the\n\"left\/right\" text and adds a new example so that people like me that get stuck\ncan see what it's doing :)",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1722389087.989449",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+qU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18770] padj does the opposite of what it says for mtext when ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "side=c(1,3)",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18770"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #5 from Aidan H Lakshman ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:AHL27@pitt.edu",
                                "text": "AHL27@pitt.edu"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nCreated attachment 3382\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3382&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3382&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nExample mtext patch\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I think you just flagged the wrong part as incorrect in the original post ;))."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nhaha, I'm glad it at least ended up being productive!\n\nThis is a pretty small change, so I'm not sure it needs a whole patch...but for\ncompleteness sake I put together a small patch here. It removes the\n\"left\/right\" text and adds a new example so that people like me that get stuck\ncan see what it's doing :)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18826] New: Proposal to remove CURL_CA_BUNDLE in Windows*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18826>\n\n            Bug ID: 18826\n           Summary: Proposal to remove CURL_CA_BUNDLE in Windows\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Windows GUI \/ Window specific\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:jeroenooms@gmail.com|jeroenooms@gmail.com>\n\nFor historical reasons, R on Windows includes a CA bundle and sets the\nCURL_CA_BUNDLE envvar by default. I think we should remove this because it is\nno longer needed and creates a security liability once the bundle gets\noutdated.\n\nDetails:\n\nLibcurl from rtools is compiled to use the Windows Schannel TLS backend by\ndefault. This relies on the Windows certificate store and does not need a CA\nbundle. So by default, R on Windows does not use the CA bundle file that we\nship with the R installation.\n\nIt is still possible to initiate libcurl with the OpenSSL TLS backend by\nsetting the envvar CURL_SSL_BACKEND=openssl in Rprofile before starting R. In\nthis case libcurl does need a CA bundle by default, but recent versions of\nlibcurl have a new option `CURLSSLOPT_NATIVE_CA` in which case OpenSSL also\nimports certificates from the Windows certificate store. This option is safer\nbecause the Windows certificate store gets automatically updated via Windows\nupdates.\n\nBecause the OpenSSL TLS backend is explicitly opt-in, I think it would make\nsense to let the user provide their own CURL_CA_BUNDLE file, and if none is\ngiven, set CURLSSLOPT_NATIVE_CA by default in R. This way we don't have to ship\na bundle file with R that will be outdated for older R versions.\n\nThis should be a small change in modules\/internet\/libcurl.c but I can send a\npatch if that would help.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1732028340.852029",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MLu5G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18826] New: Proposal to remove CURL_CA_BUNDLE in Windows",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18826"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18826\n           Summary: Proposal to remove CURL_CA_BUNDLE in Windows\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Windows GUI \/ Window specific\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:jeroenooms@gmail.com",
                                "text": "jeroenooms@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nFor historical reasons, R on Windows includes a CA bundle and sets the\nCURL_CA_BUNDLE envvar by default. I think we should remove this because it is\nno longer needed and creates a security liability once the bundle gets\noutdated.\n\nDetails:\n\nLibcurl from rtools is compiled to use the Windows Schannel TLS backend by\ndefault. This relies on the Windows certificate store and does not need a CA\nbundle. So by default, R on Windows does not use the CA bundle file that we\nship with the R installation.\n\nIt is still possible to initiate libcurl with the OpenSSL TLS backend by\nsetting the envvar CURL_SSL_BACKEND=openssl in Rprofile before starting R. In\nthis case libcurl does need a CA bundle by default, but recent versions of\nlibcurl have a new option "
                            },
                            {
                                "type": "text",
                                "text": "CURLSSLOPT_NATIVE_CA",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in which case OpenSSL also\nimports certificates from the Windows certificate store. This option is safer\nbecause the Windows certificate store gets automatically updated via Windows\nupdates.\n\nBecause the OpenSSL TLS backend is explicitly opt-in, I think it would make\nsense to let the user provide their own CURL_CA_BUNDLE file, and if none is\ngiven, set CURLSSLOPT_NATIVE_CA by default in R. This way we don't have to ship\na bundle file with R that will be outdated for older R versions.\n\nThis should be a small change in modules\/internet\/libcurl.c but I can send a\npatch if that would help."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 17350] Print method for POSIXt incorrectly displays fractions of a second*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=17350>\n\n--- Comment #8 from Dirk Eddelbuettel (<mailto:edd@debian.org|edd@debian.org>) ---\nCreated attachment 3425\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3425&amp;action=edit>\nSimplification for format.POSIXlt to address issue 17350",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1732058488.917199",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "opTkI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 17350] Print method for POSIXt incorrectly displays fractions of a second",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=17350"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #8 from Dirk Eddelbuettel ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:edd@debian.org",
                                "text": "edd@debian.org"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nCreated attachment 3425\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3425&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3425&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nSimplification for format.POSIXlt to address issue 17350"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 17350] Print method for POSIXt incorrectly displays fractions of a second*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=17350>\n\n--- Comment #9 from Dirk Eddelbuettel (<mailto:edd@debian.org|edd@debian.org>) ---\nWith big thanks to Heather for unearthing this issue, there is some progress to\nreport based on work during the [R Dev Day @ LatinR\n2024](<https:\/\/latinr.org\/en\/cronograma\/r-dev-day\/rdevday-en.html>) that took\nplace yesterday and today. \n\nBased on the analysis by Sebastian and follow-up comment by Martin, we suggest\nto not compute a 'optimal' number of digits to display. Given the combination\nof a) the limited precision (due to standard floating point representation) of\nthe subsecond values combined with the b) truncation in the C part of the code\n(which, as aside, is likely correct for datetime objects as rounding could\n\"move timestamps into the future\" by rounding up), a simpler default of\nprinting the number of digits requested works better.\n\nHeather and I worked through and looked at a number of example values as well\nas example format strings as well as values for digits to display.  Based on\nthis propose three small changes:\n\n- when considering subsecond display, simply respect the chosen number of\ndigits so the `np` computation is removed\n- the condition of when to consider a format differentiates between `%0S` and\n`%0Sn`, i.e. when digits is selected via the format string it is passed through\n- a minimal change is made to the documentation to no longer claim 'up to' the\ngiven digits are displayed as we now display the number of digits.\n\nThe suggested diff was also tested in the r-devel\/r-svn CI setup at GitHub and\npassed 'make check-all' on eight different setup across the three OSs, see\n[r-dev-day issue 83](<https:\/\/github.com\/r-devel\/r-dev-day\/issues\/83>) for\ndiscussion (and more took place one-on-one via Zoom) and [pr 187 in\nr-devel\/r-svn](<https:\/\/github.com\/r-devel\/r-svn\/pull\/187>) for the changes\nsubmitted to CI, they correspond to the diff attached here.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1732058758.798739",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xir",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 17350] Print method for POSIXt incorrectly displays fractions of a second",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=17350"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #9 from Dirk Eddelbuettel ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:edd@debian.org",
                                "text": "edd@debian.org"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nWith big thanks to Heather for unearthing this issue, there is some progress to\nreport based on work during the [R Dev Day @ LatinR\n2024]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/latinr.org\/en\/cronograma\/r-dev-day\/rdevday-en.html"
                            },
                            {
                                "type": "text",
                                "text": ") that took\nplace yesterday and today. \n\nBased on the analysis by Sebastian and follow-up comment by Martin, we suggest\nto not compute a 'optimal' number of digits to display. Given the combination\nof a) the limited precision (due to standard floating point representation) of\nthe subsecond values combined with the b) truncation in the C part of the code\n(which, as aside, is likely correct for datetime objects as rounding could\n\"move timestamps into the future\" by rounding up), a simpler default of\nprinting the number of digits requested works better.\n\nHeather and I worked through and looked at a number of example values as well\nas example format strings as well as values for digits to display.  Based on\nthis propose three small changes:\n\n- when considering subsecond display, simply respect the chosen number of\ndigits so the "
                            },
                            {
                                "type": "text",
                                "text": "np",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " computation is removed\n- the condition of when to consider a format differentiates between "
                            },
                            {
                                "type": "text",
                                "text": "%0S",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and\n"
                            },
                            {
                                "type": "text",
                                "text": "%0Sn",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", i.e. when digits is selected via the format string it is passed through\n- a minimal change is made to the documentation to no longer claim 'up to' the\ngiven digits are displayed as we now display the number of digits.\n\nThe suggested diff was also tested in the r-devel\/r-svn CI setup at GitHub and\npassed 'make check-all' on eight different setup across the three OSs, see\n[r-dev-day issue 83]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-dev-day\/issues\/83"
                            },
                            {
                                "type": "text",
                                "text": ") for\ndiscussion (and more took place one-on-one via Zoom) and [pr 187 in\nr-devel\/r-svn]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/pull\/187"
                            },
                            {
                                "type": "text",
                                "text": ") for the changes\nsubmitted to CI, they correspond to the diff attached here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18818] WRE rules about Language entry in DESCRIPTION are not enforced*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18818>\n\nKurt Hornik (<mailto:Kurt.Hornik@wu.ac.at|Kurt.Hornik@wu.ac.at>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n         Resolution|---                         |FIXED\n             Status|UNCONFIRMED                 |CLOSED\n\n--- Comment #4 from Kurt Hornik (<mailto:Kurt.Hornik@wu.ac.at|Kurt.Hornik@wu.ac.at>) ---\nThanks again.\nI just committed c87349 to the trunk which adds a check for the *formal*\nvalidity of langtags in the DESCRIPTION Language field.\nThis catches most problems apart from\n  eng en-USx English\nwhich are formally valid but not when actually matched against the IANA\nregistry.\nShipping current versions of the registry seems to much effort for base R, so\nI'll leave the full validation for NLP::parse_IETF_language_tag(), which I'll\nupdate to get a 'strict=FALSE' variant which makes validation more convenient\n[and which could of course optionally be used if we think we really need the\nfull check].",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1732089106.782079",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wKiIW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18818] WRE rules about Language entry in DESCRIPTION are not enforced",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18818"
                            },
                            {
                                "type": "text",
                                "text": "\n\nKurt Hornik ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:Kurt.Hornik@wu.ac.at",
                                "text": "Kurt.Hornik@wu.ac.at",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n         Resolution|---                         |FIXED\n             Status|UNCONFIRMED                 |CLOSED\n\n--- Comment #4 from Kurt Hornik ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:Kurt.Hornik@wu.ac.at",
                                "text": "Kurt.Hornik@wu.ac.at",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThanks again.\nI just committed c87349 to the trunk which adds a check for the "
                            },
                            {
                                "type": "text",
                                "text": "formal",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nvalidity of langtags in the DESCRIPTION Language field.\nThis catches most problems apart from\n  eng en-USx English\nwhich are formally valid but not when actually matched against the IANA\nregistry.\nShipping current versions of the registry seems to much effort for base R, so\nI'll leave the full validation for NLP::parse_IETF_language_tag(), which I'll\nupdate to get a 'strict=FALSE' variant which makes validation more convenient\n[and which could of course optionally be used if we think we really need the\nfull check]."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18192] nlme crashes when spatial correlation structure is included*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18192>\n\nElin Waring (<mailto:elin.waring@gmail.com|elin.waring@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n   Attachment #3278|0                           |1\n        is obsolete|                            |\n\n--- Comment #8 from Elin Waring (<mailto:elin.waring@gmail.com|elin.waring@gmail.com>) ---\nCreated attachment 3337\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3337&amp;action=edit>\nUpdated diff for 18192\n\nRemoved some stray debugging code.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713717102.705149",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8aKn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18192] nlme crashes when spatial correlation structure is included",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18192"
                            },
                            {
                                "type": "text",
                                "text": "\n\nElin Waring ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:elin.waring@gmail.com",
                                "text": "elin.waring@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n   Attachment #3278|0                           |1\n        is obsolete|                            |\n\n--- Comment #8 from Elin Waring ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:elin.waring@gmail.com",
                                "text": "elin.waring@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nCreated attachment 3337\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3337&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3337&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nUpdated diff for 18192\n\nRemoved some stray debugging code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18285] patch to handle rank-deficient fixed model matrix in lme*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18285>\n\nElin Waring (<mailto:elin.waring@gmail.com|elin.waring@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |elin.waring@gmail.com\n\n--- Comment #2 from Elin Waring (<mailto:elin.waring@gmail.com|elin.waring@gmail.com>) ---\nThis issue still exists and the patch does what it says.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713718829.419329",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8pH5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18285] patch to handle rank-deficient fixed model matrix in lme",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18285"
                            },
                            {
                                "type": "text",
                                "text": "\n\nElin Waring ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:elin.waring@gmail.com",
                                "text": "elin.waring@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |elin.waring@gmail.com\n\n--- Comment #2 from Elin Waring ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:elin.waring@gmail.com",
                                "text": "elin.waring@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThis issue still exists and the patch does what it says."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 7895] Error with user defined split function in rpart*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=7895>\n\nSebastian Meyer (<mailto:seb.meyer@fau.de|seb.meyer@fau.de>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|NEW                         |CLOSED\n         Resolution|---                         |CONTRIBUTED PACKAGE\n                 CC|                            |seb.meyer@fau.de",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713725999.422019",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QNvT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 7895] Error with user defined split function in rpart",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=7895"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSebastian Meyer ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:seb.meyer@fau.de",
                                "text": "seb.meyer@fau.de"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|NEW                         |CLOSED\n         Resolution|---                         |CONTRIBUTED PACKAGE\n                 CC|                            |seb.meyer@fau.de"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18433] nlme::simulate.lme 'donttest' example hangs, blocking R CMD check --as-cran*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18433>\n\nSebastian Meyer (<mailto:seb.meyer@fau.de|seb.meyer@fau.de>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |seb.meyer@fau.de\n\n--- Comment #7 from Sebastian Meyer (<mailto:seb.meyer@fau.de|seb.meyer@fau.de>) ---\nCreated attachment 3338\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3338&amp;action=edit>\ncatch infinite lglk[i]\n\nI could not reproduce the problem using R's reference BLAS, but indeed with\n*OpenBLAS*. I have used the following example:\n\n```\nlibrary(\"nlme\")\noptions(warn = 1)\northSim &lt;- simulate.lme(\n    list(fixed = distance ~ age, data = Orthodont, random = ~ 1 | Subject),\n    nsim = 150, seed = 38, m2 = list(random = ~ age | Subject),\n    method = \"ML\", useGen = FALSE\n)\n```\n\nwhich produces endless repetitions of the following warning:\n\n```\nIn unlist(.C(mixed_combined, as.double(conLin$Xy),\nas.integer(unlist(conLin$dims)),  ... :\n  Singular precision matrix in level -1, block 1\n```\n\nAs Ben wrote, the issue is in `internal_loglik()` (from src\/nlmefit.c). A\n`lglk[i]` term becomes infinite, presumably from an infinite result of\n`QRlogAbsDet()`. The `accum` return value from `internal_loglik()` then becomes\nNAN, which is likely causing problems further up.\n\nI'm attaching a (naive?) patch that catches a non-finite `lglk[i]` and then\nreturns `-DBL_MAX`. This fixes the example for me: The infinity warning appears\nonly once, simulations succeed and their results are very close to the ones\nwith the reference BLAS:\n```\n&gt; all.equal(reference$orthSim, openblas$orthSim)\n[1] \"Component \"alt\": Component \"ML\": Mean relative difference: 4.739012e-06\"\n```\n\nAs this area of the nlme sources is really beyond my comfort zone, I'll leave\nthese findings here for others to review\/revise.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713731662.017329",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LGSi\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18433] nlme::simulate.lme 'donttest' example hangs, blocking R CMD check --as-cran",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18433"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSebastian Meyer ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:seb.meyer@fau.de",
                                "text": "seb.meyer@fau.de"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |seb.meyer@fau.de\n\n--- Comment #7 from Sebastian Meyer ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:seb.meyer@fau.de",
                                "text": "seb.meyer@fau.de"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nCreated attachment 3338\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3338&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3338&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\ncatch infinite lglk[i]\n\nI could not reproduce the problem using R's reference BLAS, but indeed with\n"
                            },
                            {
                                "type": "text",
                                "text": "OpenBLAS",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I have used the following example:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "library(\"nlme\")\noptions(warn = 1)\northSim <- simulate.lme(\n    list(fixed = distance ~ age, data = Orthodont, random = ~ 1 | Subject),\n    nsim = 150, seed = 38, m2 = list(random = ~ age | Subject),\n    method = \"ML\", useGen = FALSE\n)\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nwhich produces endless repetitions of the following warning:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In unlist(.C(mixed_combined, as.double(conLin$Xy),\nas.integer(unlist(conLin$dims)),  ... :\n  Singular precision matrix in level -1, block 1\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nAs Ben wrote, the issue is in "
                            },
                            {
                                "type": "text",
                                "text": "internal_loglik()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (from src\/nlmefit.c). A\n"
                            },
                            {
                                "type": "text",
                                "text": "lglk[i]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " term becomes infinite, presumably from an infinite result of\n"
                            },
                            {
                                "type": "text",
                                "text": "QRlogAbsDet()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The "
                            },
                            {
                                "type": "text",
                                "text": "accum",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " return value from "
                            },
                            {
                                "type": "text",
                                "text": "internal_loglik()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " then becomes\nNAN, which is likely causing problems further up.\n\nI'm attaching a (naive?) patch that catches a non-finite "
                            },
                            {
                                "type": "text",
                                "text": "lglk[i]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and then\nreturns "
                            },
                            {
                                "type": "text",
                                "text": "-DBL_MAX",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". This fixes the example for me: The infinity warning appears\nonly once, simulations succeed and their results are very close to the ones\nwith the reference BLAS:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> all.equal(reference$orthSim, openblas$orthSim)\n[1] \"Component \"alt\": Component \"ML\": Mean relative difference: 4.739012e-06\"\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nAs this area of the nlme sources is really beyond my comfort zone, I'll leave\nthese findings here for others to review\/revise."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 17217] make strptime(\"1\",\"%m\") work*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=17217>\n\nMichael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #1 from Michael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) ---\nNoting that this does \"just work\" in Python, with a different \"default year\" of\n1900:\n\n```\n# Python 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux\nfrom datetime import datetime\ndatetime.strptime('1', '%m')\n# datetime.datetime(1900, 1, 1, 0, 0)\n```",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713764427.235959",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3J+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 17217] make strptime(\"1\",\"%m\") work",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=17217"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMichael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #1 from Michael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nNoting that this does \"just work\" in Python, with a different \"default year\" of\n1900:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "# Python 3.10.12 (main, Nov 20 2023, 15:14:05) [GCC 11.4.0] on linux\nfrom datetime import datetime\ndatetime.strptime('1', '%m')\n# datetime.datetime(1900, 1, 1, 0, 0)\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 17409] [[.POSIXlt non-backwards compatible change?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=17409>\n\nMichael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #4 from Michael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) ---\nCreated attachment 3339\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3339&amp;action=edit>\nA friendly warning in [[.POSIXlt for mis-using the class elements\n\nMy understanding is the new behavior is about matching the normal expectations\nabout extractions from named vectors, while `[[\"mday\"]]`-type usage is relying\non the internals of the POSIXlt class &amp; thus susceptible to change.\n\nNow this works in a way the lion's share of R users would understand:\n\n```\nx=setNames(as.POSIXlt(Sys.Date() + 0:9), letters[1:10])\nx[[\"c\"]]\n\n# but ALSO\nnames(x)[1] = 'mday'\nx[[\"mday\"]]\n```\n\nIt's quite far removed from this original breakage, but perhaps a friendly\nwarning here could still be useful. See attached patch; otherwise this old\nissue can be closed.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713765752.261239",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dvUl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 17409] [[.POSIXlt non-backwards compatible change?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=17409"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMichael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #4 from Michael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nCreated attachment 3339\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3339&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3339&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nA friendly warning in [[.POSIXlt for mis-using the class elements\n\nMy understanding is the new behavior is about matching the normal expectations\nabout extractions from named vectors, while "
                            },
                            {
                                "type": "text",
                                "text": "[[\"mday\"]]",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "-type usage is relying\non the internals of the POSIXlt class & thus susceptible to change.\n\nNow this works in a way the lion's share of R users would understand:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "x=setNames(as.POSIXlt(Sys.Date() + 0:9), letters[1:10])\nx[[\"c\"]]\n\n# but ALSO\nnames(x)[1] = 'mday'\nx[[\"mday\"]]\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIt's quite far removed from this original breakage, but perhaps a friendly\nwarning here could still be useful. See attached patch; otherwise this old\nissue can be closed."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 8528] pgamma - inadequate algorithm design and poor coding*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=8528>\n\nMichael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #8 from Michael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) ---\nFriendly ping to Martin -- it would be nice to have an update here, even if\nthat consists of \"no update\", to log that the bug is not simply forgotten :)",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713766225.606119",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kRrds",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 8528] pgamma - inadequate algorithm design and poor coding",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=8528"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMichael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #8 from Michael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nFriendly ping to Martin -- it would be nice to have an update here, even if\nthat consists of \"no update\", to log that the bug is not simply forgotten :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 16585] citation() package version printing*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=16585>\n\nMichael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #6 from Michael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) ---\nI think this can be closed.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713766287.128919",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "irynC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 16585] citation() package version printing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=16585"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMichael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #6 from Michael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nI think this can be closed."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 17289] Inconsistent NA handling in scan()*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=17289>\n\nMichael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #1 from Michael Chirico (<mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>) ---\nThere's clearly a difference in how `INTSXP` is handled vs. other input types\n-- `INTSXP` looks for `NA_INTEGER`, other types look for `isBlankString()`:\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/125ad32d2f936092815062366733b30b1a87d39f\/src\/main\/scan.c#L512-L529>\n\nIntended behavior for `na.strings=character()` [1] is not specifically\ndocumented, but it seems to be that these two should behave identically under\n`na.strings=character()` [2]:\n\n```\nscan(text = '1 NA', what=double(), na.strings=character())\n# [1] 1 NA\nscan(text = '1 na', what=double(), na.strings=character())\n# Error in scan(text = \"1 na\", what = double(), na.strings = character()) : \n#   scan() expected 'a real', got 'na'\n```\n\n[1] The first line of `scan()` is to cast\n`na.strings=as.character(na.strings)`, so (1) `NULL` is not the most\nrepresentative version of this bug and (2) this error is impossible to trigger\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/125ad32d2f936092815062366733b30b1a87d39f\/src\/main\/scan.c#L899-L900>\n\n[2] NB also that \"NA\" is not a special value like `NaN` that could reasonable\nbe parsed by `scan()` as double even with no `na.strings` provided, e.g.\n`as.double('NA')` gives a coercion warning, while `as.double(\"NaN\")` doesn't,\nand `scan(text = '1 NaN', what=double(), na.strings=character())` looks correct\n&amp; intentional.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1713767960.235159",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dxU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 17289] Inconsistent NA handling in scan()",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=17289"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMichael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |michaelchirico4@gmail.com\n\n--- Comment #1 from Michael Chirico ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThere's clearly a difference in how "
                            },
                            {
                                "type": "text",
                                "text": "INTSXP",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is handled vs. other input types\n-- "
                            },
                            {
                                "type": "text",
                                "text": "INTSXP",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " looks for "
                            },
                            {
                                "type": "text",
                                "text": "NA_INTEGER",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", other types look for "
                            },
                            {
                                "type": "text",
                                "text": "isBlankString()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/125ad32d2f936092815062366733b30b1a87d39f\/src\/main\/scan.c#L512-L529"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIntended behavior for "
                            },
                            {
                                "type": "text",
                                "text": "na.strings=character()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " [1] is not specifically\ndocumented, but it seems to be that these two should behave identically under\n"
                            },
                            {
                                "type": "text",
                                "text": "na.strings=character()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " [2]:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "scan(text = '1 NA', what=double(), na.strings=character())\n# [1] 1 NA\nscan(text = '1 na', what=double(), na.strings=character())\n# Error in scan(text = \"1 na\", what = double(), na.strings = character()) : \n#   scan() expected 'a real', got 'na'\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n[1] The first line of "
                            },
                            {
                                "type": "text",
                                "text": "scan()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is to cast\n"
                            },
                            {
                                "type": "text",
                                "text": "na.strings=as.character(na.strings)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", so (1) "
                            },
                            {
                                "type": "text",
                                "text": "NULL",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is not the most\nrepresentative version of this bug and (2) this error is impossible to trigger\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/125ad32d2f936092815062366733b30b1a87d39f\/src\/main\/scan.c#L899-L900"
                            },
                            {
                                "type": "text",
                                "text": "\n\n[2] NB also that \"NA\" is not a special value like "
                            },
                            {
                                "type": "text",
                                "text": "NaN",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that could reasonable\nbe parsed by "
                            },
                            {
                                "type": "text",
                                "text": "scan()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as double even with no "
                            },
                            {
                                "type": "text",
                                "text": "na.strings",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " provided, e.g.\n"
                            },
                            {
                                "type": "text",
                                "text": "as.double('NA')",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " gives a coercion warning, while "
                            },
                            {
                                "type": "text",
                                "text": "as.double(\"NaN\")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " doesn't,\nand "
                            },
                            {
                                "type": "text",
                                "text": "scan(text = '1 NaN', what=double(), na.strings=character())",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " looks correct\n& intentional."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
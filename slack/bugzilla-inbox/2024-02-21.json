[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18677] New: Documentation of base::gamma &amp; base::is.numeric Could be Improved.*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18677>\n\n            Bug ID: 18677\n           Summary: Documentation of base::gamma &amp; base::is.numeric Could\n                    be Improved.\n           Product: R\n           Version: R 4.3.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Documentation\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:JHarmse@roku.com|JHarmse@roku.com>\n\nThe integral given for Gamma(x) diverges for x&lt;0. (I don't have Abramowitz &amp;\nStegun handy, so I don't know whether this a misquote or the propagation of a\nmistake.) It would be better to restrict the integral to x&gt;0 and do some\nhand-waving for x&lt;0. (You could instead mention holomorphic continuation, but\nthat seems strange when base::gamma accepts only real inputs. Other\npossibilities are to rely on the functional equation or to use the formula in\nthe TeXBook.)\n\nThe description of digamma is confusing in that ln Gamma requires some\nsophistication. (I would argue that lnGamma should be defined as a holomorphic\nfunction with a branch cut on negative reals, so there is no derivative at a\nnegative real number.) Fortunately, the sign of Gamma is constant on the\nrelevant intervals of the real line, so you can just define digamma to be the\nderivative of lgamma. Alternately, you don't need a logarithm to define the\nlogarithmic derivative.\n\nIt's surprising that base::is.numeric(1i) is FALSE. This is technically covered\nin the documentation, but it should be explicit. 'See Also' should include\ncomplex.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1708535810.478239",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qnrz9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18677] New: Documentation of base::gamma & base::is.numeric Could be Improved.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18677"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18677\n           Summary: Documentation of base::gamma & base::is.numeric Could\n                    be Improved.\n           Product: R\n           Version: R 4.3.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Documentation\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:JHarmse@roku.com",
                                "text": "JHarmse@roku.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe integral given for Gamma(x) diverges for x<0. (I don't have Abramowitz &\nStegun handy, so I don't know whether this a misquote or the propagation of a\nmistake.) It would be better to restrict the integral to x>0 and do some\nhand-waving for x<0. (You could instead mention holomorphic continuation, but\nthat seems strange when base::gamma accepts only real inputs. Other\npossibilities are to rely on the functional equation or to use the formula in\nthe TeXBook.)\n\nThe description of digamma is confusing in that ln Gamma requires some\nsophistication. (I would argue that lnGamma should be defined as a holomorphic\nfunction with a branch cut on negative reals, so there is no derivative at a\nnegative real number.) Fortunately, the sign of Gamma is constant on the\nrelevant intervals of the real line, so you can just define digamma to be the\nderivative of lgamma. Alternately, you don't need a logarithm to define the\nlogarithmic derivative.\n\nIt's surprising that base::is.numeric(1i) is FALSE. This is technically covered\nin the documentation, but it should be explicit. 'See Also' should include\ncomplex."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18587] Allow packages to supply alternate communication backends for the `parallel` package*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18587>\n\n--- Comment #10 from Charlie Gao (<mailto:charlie.gao@shikokuchuo.net|charlie.gao@shikokuchuo.net>) ---\nHi Luke, I hope you've been keeping well! I'd like to come back to this and\nhopefully iron out what still needs to be done prior to the 4.4 release.\n\nFor registering a default cluster type, if my suggestion above is too narrow,\nwe could instead have a custom type in the switch statement, something like:\n\n```\nCUSTOM = attr(type, \"function\"),\n```\n\nIt would then be up to the registration function (whether in parallel or a\nthird party package) to set this correctly.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1708547037.661949",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OXx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18587] Allow packages to supply alternate communication backends for the ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "parallel",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " package",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18587"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #10 from Charlie Gao ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:charlie.gao@shikokuchuo.net",
                                "text": "charlie.gao@shikokuchuo.net"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nHi Luke, I hope you've been keeping well! I'd like to come back to this and\nhopefully iron out what still needs to be done prior to the 4.4 release.\n\nFor registering a default cluster type, if my suggestion above is too narrow,\nwe could instead have a custom type in the switch statement, something like:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "CUSTOM = attr(type, \"function\"),\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIt would then be up to the registration function (whether in parallel or a\nthird party package) to set this correctly."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18587] Allow packages to supply alternate communication backends for the `parallel` package*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18587>\n\n--- Comment #11 from Luke Tierney (<mailto:luke@stat.uiowa.edu|luke@stat.uiowa.edu>) ---\n(In reply to Charlie Gao from comment #10)\nI wish I could promise to get to this soon, but unfortunately I have an\nenormous stack of things to try and get done for R 4.4.0 ...",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1708547690.837179",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m7pRq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18587] Allow packages to supply alternate communication backends for the ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "parallel",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " package",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18587"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #11 from Luke Tierney ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:luke@stat.uiowa.edu",
                                "text": "luke@stat.uiowa.edu",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\n(In reply to Charlie Gao from comment #10)\nI wish I could promise to get to this soon, but unfortunately I have an\nenormous stack of things to try and get done for R 4.4.0 ..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18676] Comparisons of language objects only look at the first deparsed line*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18676>\n\nDuncan Murdoch (<mailto:murdoch.duncan@gmail.com|murdoch.duncan@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n   Attachment #3313|0                           |1\n        is obsolete|                            |\n\n--- Comment #1 from Duncan Murdoch (<mailto:murdoch.duncan@gmail.com|murdoch.duncan@gmail.com>) ---\nCreated attachment 3314\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3314&amp;action=edit>\nRevised patch fixes issue in compiler package\n\nThis now includes a patch to the compiler package, which had the test\n\n   body(f)[1] != \"{\"\n\nthat depended on the old behaviour.  This patch changes that to\n\n   body(f)[[1]] != \"{\"\n\nwhich is probably what was intended.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1708555314.217509",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cyWvE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18676] Comparisons of language objects only look at the first deparsed line",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18676"
                            },
                            {
                                "type": "text",
                                "text": "\n\nDuncan Murdoch ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:murdoch.duncan@gmail.com",
                                "text": "murdoch.duncan@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n   Attachment #3313|0                           |1\n        is obsolete|                            |\n\n--- Comment #1 from Duncan Murdoch ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:murdoch.duncan@gmail.com",
                                "text": "murdoch.duncan@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nCreated attachment 3314\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3314&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3314&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nRevised patch fixes issue in compiler package\n\nThis now includes a patch to the compiler package, which had the test\n\n   body(f)[1] != \"{\"\n\nthat depended on the old behaviour.  This patch changes that to\n\n   body(f)[[1]] != \"{\"\n\nwhich is probably what was intended."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18678] New: as.roman uses the wrong upper limit*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18678>\n\n            Bug ID: 18678\n           Summary: as.roman uses the wrong upper limit\n           Product: R\n           Version: R 4.3.x\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Accuracy\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:bugreport@jcarroll.com.au|bugreport@jcarroll.com.au>\n\nCreated attachment 3315\n  --&gt; <https:\/\/bugs.r-project.org\/attachment.cgi?id=3315&amp;action=edit>\nPatch of as.roman functionality mainly changing 3899 to 3999\n\nReported on r-devel:\n<https:\/\/stat.ethz.ch\/pipermail\/r-devel\/2024-February\/083202.html>\n\nI was recently participating in a coding challenge which involved converting\nintegers to Roman numerals. I knew R offers this functionality already via\nas.roman() and hoped to leverage that for a quick solution, but was surprised\nthat one of the challenge's tests failed; conversion of the number 3999, which\nshould result in \"MMMCMXCIX\". In R, that produces NA, and has done so since\n2006 when as.roman() was implemented.\n\nWikipedia [1] claims the largest uniquely representable Roman numeral is 3999.\n\nOther languages appear to use 3999 as the largest input value, e.g. the\npython-cookbook [2].\n\nCommon lisp's \"~@r\" format errors with values larger than 3999\n\n```\n(print (format nil \"~@r\" 4000))\n*** - The ~@R format directive requires an integer in the range 1 -\n3999, not 4000\n```\n\nThis appears to be a long-standing oversight. The attached patch rectifies this\nsuch that the largest valid input is 3999. I have also updated the relevant\ntranslated messages in .po files and documentation.\n\n[1]: <https:\/\/en.wikipedia.org\/wiki\/Roman_numerals>\n[2]:\n<https:\/\/www.oreilly.com\/library\/view\/python-cookbook\/0596001673\/ch03s24.html>",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1708563106.668509",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XoYfh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18678] New: as.roman uses the wrong upper limit",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18678"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18678\n           Summary: as.roman uses the wrong upper limit\n           Product: R\n           Version: R 4.3.x\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Accuracy\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:bugreport@jcarroll.com.au",
                                "text": "bugreport@jcarroll.com.au",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n\nCreated attachment 3315\n  --> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3315&amp;action=edit",
                                "text": "https:\/\/bugs.r-project.org\/attachment.cgi?id=3315&action=edit"
                            },
                            {
                                "type": "text",
                                "text": "\nPatch of as.roman functionality mainly changing 3899 to 3999\n\nReported on r-devel:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stat.ethz.ch\/pipermail\/r-devel\/2024-February\/083202.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI was recently participating in a coding challenge which involved converting\nintegers to Roman numerals. I knew R offers this functionality already via\nas.roman() and hoped to leverage that for a quick solution, but was surprised\nthat one of the challenge's tests failed; conversion of the number 3999, which\nshould result in \"MMMCMXCIX\". In R, that produces NA, and has done so since\n2006 when as.roman() was implemented.\n\nWikipedia [1] claims the largest uniquely representable Roman numeral is 3999.\n\nOther languages appear to use 3999 as the largest input value, e.g. the\npython-cookbook [2].\n\nCommon lisp's \"~@r\" format errors with values larger than 3999\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(print (format nil \"~@r\" 4000))\n*** - The ~@R format directive requires an integer in the range 1 -\n3999, not 4000\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThis appears to be a long-standing oversight. The attached patch rectifies this\nsuch that the largest valid input is 3999. I have also updated the relevant\ntranslated messages in .po files and documentation.\n\n[1]: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Roman_numerals"
                            },
                            {
                                "type": "text",
                                "text": "\n[2]:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.oreilly.com\/library\/view\/python-cookbook\/0596001673\/ch03s24.html"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18591] strwidth returns wrong value on first call from terminal*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18591>\n\nSimon Urbanek (<mailto:simon.urbanek@r-project.org|simon.urbanek@r-project.org>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n         Resolution|---                         |FIXED\n                 CC|                            |simon.urbanek@r-project.org\n             Status|CONFIRMED                   |CLOSED\n\n--- Comment #4 from Simon Urbanek (<mailto:simon.urbanek@r-project.org|simon.urbanek@r-project.org>) ---\nThanks for the analysis! This is actually easy to fix since we don't need the\ncontext for the font metrics -- now fixed by r86916.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1721786358.620519",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ANDX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18591] strwidth returns wrong value on first call from terminal",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18591"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSimon Urbanek ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:simon.urbanek@r-project.org",
                                "text": "simon.urbanek@r-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n         Resolution|---                         |FIXED\n                 CC|                            |simon.urbanek@r-project.org\n             Status|CONFIRMED                   |CLOSED\n\n--- Comment #4 from Simon Urbanek ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:simon.urbanek@r-project.org",
                                "text": "simon.urbanek@r-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThanks for the analysis! This is actually easy to fix since we don't need the\ncontext for the font metrics -- now fixed by r86916."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18768] New: readLines incorrectly infers 'bzip2' based on false positive magic number match in rare cases*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18768>\n\n            Bug ID: 18768\n           Summary: readLines incorrectly infers 'bzip2' based on false\n                    positive magic number match in rare cases\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: Other\n                OS: Linux\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: I\/O\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>\n\n```\ncat(\"BZhabc\", file=tmp&lt;-tempfile())\nfile.exists(tmp)\n# [1] TRUE\nreadLines(tmp)\n# character(0)\nreadChar(tmp, file.size(tmp))\n# [1] \"BZhabc\"\n```\n\nThe problem is that 'BZh' is the magic number for Bzip2:\n\n<https:\/\/en.wikipedia.org\/wiki\/Bzip2#File_format>\n\n`do_gzfile()` winds up getting run, which determines \"is_bzip2\" based _solely_\non the first 3 bytes, hence the false positive:\n\n<https:\/\/github.com\/wch\/r-source\/blob\/709158ab78d11f3dbe855b6f3b71bf3892a1b3be\/src\/main\/connections.c#L2424>\n\nPer the Wikipedia description, it would be safer to instead base the\ndetermination on the first _ten_ bytes:\n\n - [0-2] == \"BZh\"\n - '1' &lt;= [3] &lt;= '9'\n - [4-9] == 31 41 59 26 53 58\n\nUnfortunately, all of these are printable characters:\n\n```\nrawToChar(as.raw(c(0x31, 0x41, 0x59, 0x26, 0x53, 0x59)))\n# [1] \"1AY&amp;SY\"\n```\n\nSo it seems to me a false positive can never be _fully_ avoided, but basing the\ndetermination on more than the first 3 bytes looks to me a real improvement.\n\n - I don't see this behavior discussed anywhere, in particular in `?readLines`\nor `?gzfile`\n - I see the magic number of bzip2 discussed in `?memCompress`, but the part\nabout the remainder of the file marker (bytes 4-10) is omitted\n - In case Wikipedia's reference isn't ironclad enough, here appears to be the\nrelevant regions of bzip2's own\n[compression](<https:\/\/gitlab.com\/bzip2\/bzip2\/-\/blob\/66c46b8c9436613fd81bc5d03f63a61933a4dcc3\/compress.c#L621-633>)\nand\n[decompression](<https:\/\/gitlab.com\/bzip2\/bzip2\/-\/blob\/66c46b8c9436613fd81bc5d03f63a61933a4dcc3\/decompress.c#L197-235>)\n - The same issue was reported in `data.table::fread()`\n<https:\/\/github.com\/Rdatatable\/data.table\/issues\/6304>, showing this is not just\na theoretical issue",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1721795904.733079",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8XsD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18768] New: readLines incorrectly infers 'bzip2' based on false positive magic number match in rare cases",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18768"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18768\n           Summary: readLines incorrectly infers 'bzip2' based on false\n                    positive magic number match in rare cases\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: Other\n                OS: Linux\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: I\/O\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "cat(\"BZhabc\", file=tmp<-tempfile())\nfile.exists(tmp)\n# [1] TRUE\nreadLines(tmp)\n# character(0)\nreadChar(tmp, file.size(tmp))\n# [1] \"BZhabc\"\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThe problem is that 'BZh' is the magic number for Bzip2:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Bzip2#File_format"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "do_gzfile()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " winds up getting run, which determines \"is_bzip2\" based "
                            },
                            {
                                "type": "text",
                                "text": "solely",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\non the first 3 bytes, hence the false positive:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wch\/r-source\/blob\/709158ab78d11f3dbe855b6f3b71bf3892a1b3be\/src\/main\/connections.c#L2424"
                            },
                            {
                                "type": "text",
                                "text": "\n\nPer the Wikipedia description, it would be safer to instead base the\ndetermination on the first "
                            },
                            {
                                "type": "text",
                                "text": "ten",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " bytes:\n\n - [0-2] == \"BZh\"\n - '1' <= [3] <= '9'\n - [4-9] == 31 41 59 26 53 58\n\nUnfortunately, all of these are printable characters:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "rawToChar(as.raw(c(0x31, 0x41, 0x59, 0x26, 0x53, 0x59)))\n# [1] \"1AY&SY\"\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nSo it seems to me a false positive can never be "
                            },
                            {
                                "type": "text",
                                "text": "fully",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " avoided, but basing the\ndetermination on more than the first 3 bytes looks to me a real improvement.\n\n - I don't see this behavior discussed anywhere, in particular in "
                            },
                            {
                                "type": "text",
                                "text": "?readLines",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nor "
                            },
                            {
                                "type": "text",
                                "text": "?gzfile",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n - I see the magic number of bzip2 discussed in "
                            },
                            {
                                "type": "text",
                                "text": "?memCompress",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but the part\nabout the remainder of the file marker (bytes 4-10) is omitted\n - In case Wikipedia's reference isn't ironclad enough, here appears to be the\nrelevant regions of bzip2's own\n[compression]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gitlab.com\/bzip2\/bzip2\/-\/blob\/66c46b8c9436613fd81bc5d03f63a61933a4dcc3\/compress.c#L621-633"
                            },
                            {
                                "type": "text",
                                "text": ")\nand\n[decompression]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gitlab.com\/bzip2\/bzip2\/-\/blob\/66c46b8c9436613fd81bc5d03f63a61933a4dcc3\/decompress.c#L197-235"
                            },
                            {
                                "type": "text",
                                "text": ")\n - The same issue was reported in "
                            },
                            {
                                "type": "text",
                                "text": "data.table::fread()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/Rdatatable\/data.table\/issues\/6304"
                            },
                            {
                                "type": "text",
                                "text": ", showing this is not just\na theoretical issue"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
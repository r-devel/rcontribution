[
    {
        "subtype": "bot_message",
        "text": "*[Bug 16865] glob2rx() does not recognise escaped wildcards*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=16865>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|UNCONFIRMED                 |CLOSED\n                 CC|                            |maechler@stat.math.ethz.ch\n         Resolution|---                         |FIXED\n            Summary|base::glob2rx does not      |glob2rx() does not\n                   |recognise escaped wildcards |recognise escaped wildcards\n\n--- Comment #2 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nThank you (note it is *not* base, but utils).\nIndeed, \n- I had created `glob2rx()` originally for S, also as a reminder and didactical\nexample on the difference(s) between \"globbing\" and regular expressions.  \n- `Sys.glob()` has become available in the mean time for the case of file\npaths.\n- There are limitations as documented; after all, the code was meant to be\nrelatively simple.\n- I have adopted  Michael's proposal, too.\n\nCommitted to R-devel svn rev 86488",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1714393195.310449",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k5S+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 16865] glob2rx() does not recognise escaped wildcards",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=16865"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|UNCONFIRMED                 |CLOSED\n                 CC|                            |maechler@stat.math.ethz.ch\n         Resolution|---                         |FIXED\n            Summary|base::glob2rx does not      |glob2rx() does not\n                   |recognise escaped wildcards |recognise escaped wildcards\n\n--- Comment #2 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThank you (note it is "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " base, but utils).\nIndeed, \n- I had created "
                            },
                            {
                                "type": "text",
                                "text": "glob2rx()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " originally for S, also as a reminder and didactical\nexample on the difference(s) between \"globbing\" and regular expressions.  \n- "
                            },
                            {
                                "type": "text",
                                "text": "Sys.glob()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " has become available in the mean time for the case of file\npaths.\n- There are limitations as documented; after all, the code was meant to be\nrelatively simple.\n- I have adopted  Michael's proposal, too.\n\nCommitted to R-devel svn rev 86488"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 17409] [[.POSIXlt non-backwards compatible change?*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=17409>\n\n--- Comment #7 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\n(In reply to Michael Chirico from comment #6)\n\n&gt; OK, switched to a warning and added tests.\n\nThanks a lot, Michael.... now that I've looked at it (and alternatives),\nI'm tending to think your first patch with error would make more sense *and* be\nmore back compatible...   hence, the contradiction I mentioned in naming your\nfirst patch was really just in how you labeled it.\n\nIn the \"end\", (keeping things simple, back compatible to R 4.4.0, ..),\nI'm tending to use your first patch (almost) and some of your tests\n(but in `datetime3.R` which has no *.Rout.save).\n\nThat will not be today though, and we can hope for other comments suggestions\n(and there's really no need for another patch!).",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1714405457.475079",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6GVp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 17409] [[.POSIXlt non-backwards compatible change?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=17409"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #7 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\n(In reply to Michael Chirico from comment #6)\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OK, switched to a warning and added tests."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThanks a lot, Michael.... now that I've looked at it (and alternatives),\nI'm tending to think your first patch with error would make more sense "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be\nmore back compatible...   hence, the contradiction I mentioned in naming your\nfirst patch was really just in how you labeled it.\n\nIn the \"end\", (keeping things simple, back compatible to R 4.4.0, ..),\nI'm tending to use your first patch (almost) and some of your tests\n(but in "
                            },
                            {
                                "type": "text",
                                "text": "datetime3.R",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " which has no *.Rout.save).\n\nThat will not be today though, and we can hope for other comments suggestions\n(and there's really no need for another patch!)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18713] New: startup.c uses wrong types on macOS to determine memory limits, which triggers a bug leading to wrong args passed to a linker*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18713>\n\n            Bug ID: 18713\n           Summary: startup.c uses wrong types on macOS to determine\n                    memory limits, which triggers a bug leading to wrong\n                    args passed to a linker\n           Product: R\n           Version: R 4.4.x\n          Hardware: All\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Mac GUI \/ Mac specific\n          Assignee: <mailto:simon.urbanek@r-project.org|simon.urbanek@r-project.org>\n          Reporter: <mailto:vital.had@gmail.com|vital.had@gmail.com>\n                CC: <mailto:R-core@R-project.org|R-core@R-project.org>\n\n`R` uses wrong types here:\n```\n#if defined(__APPLE__) &amp;&amp; defined(_SC_PHYS_PAGES) &amp;&amp; defined(_SC_PAGE_SIZE)\n    \/* For now only on macOS place a default limit on the vector heap\n       size to avoid having R killed due to memory overcommit.\n       Setting the limit at the maximum of 16Gb and available physical\n       memory seems reasonable, but there may be better options. LT *\/\n    else {\n        R_size_t pages = sysconf(_SC_PHYS_PAGES);\n        R_size_t page_size = sysconf(_SC_PAGE_SIZE);\n        R_size_t sysmem = pages * page_size;\n        R_size_t MinMaxVSize = 17179869184; \/* 16 Gb *\/\n        Rp-&gt;max_vsize = sysmem &gt; MinMaxVSize ? sysmem : MinMaxVSize;\n    }\n#endif\n```\n\nOn 32-bit this results in overflow and values get set to 0. This the following\nis triggered:\n```\n    if (!R_SetMaxVSize(vsize)) {\n        \/* vsfac is still 1 *\/\n        snprintf(msg, 1024,\n                 \"WARNING: too small maximum for v(ector heap)size '%lu'\nignored,\"\n                 \" the current usage %gM is already larger\\n\",\n                 (unsigned long) vsize, R_VSize \/ Mega);\n        R_ShowMessage(msg);\n    }\n```\n\nSo on R startup, for example, I get:\n```\n36-170% \/opt\/local\/bin\/R\nWARNING: too small maximum for v(ector heap)size '0' ignored, the current usage\n64M is already larger\n\nWARNING: too small maximum for v(ector heap)size '0' ignored, the current usage\n64M is already larger\n\n\nR version 4.4.0 (2024-04-24) -- \"Puppy Cup\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: powerpc-apple-darwin10.0.0d2 (32-bit)\n```\n\nIn turn, this triggers some bug in Rcpp, resulting in this warning string being\ninterpreted as a list of objects to pass to the linker when `Rcpp:::LdFlags()`\nis called (yes, it is deprecated ages ago and Rcpp upstream says it should not\nbe used, but a number of packages still use that, and now all of them are\nbroken).\n\nSee also: <https:\/\/github.com\/RcppCore\/Rcpp\/issues\/1302>\n<https:\/\/trac.macports.org\/ticket\/69849>\n\nCorrect type to use will be double, like here:\n<https:\/\/opensource.apple.com\/source\/gcc\/gcc-5646\/libiberty\/physmem.c.auto.html>\n\nAlso, it looks like the code is actually using Linux calls, which may or may\nnot work on macOS and BSD (it does seem to work on my system, but there are\nreports online that `_SC_PHYS_PAGES` may not be defined on macOS in some\ncases).\nSee:\n<https:\/\/github.com\/wshanks\/qiskit-aer\/commit\/11f6afa311ba609eeb3bca37ed01b797076739f9>",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1714413712.260429",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VLPf\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18713] New: startup.c uses wrong types on macOS to determine memory limits, which triggers a bug leading to wrong args passed to a linker",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18713"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18713\n           Summary: startup.c uses wrong types on macOS to determine\n                    memory limits, which triggers a bug leading to wrong\n                    args passed to a linker\n           Product: R\n           Version: R 4.4.x\n          Hardware: All\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Mac GUI \/ Mac specific\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:simon.urbanek@r-project.org",
                                "text": "simon.urbanek@r-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:vital.had@gmail.com",
                                "text": "vital.had@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n                CC: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "R",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " uses wrong types here:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "#if defined(__APPLE__) && defined(_SC_PHYS_PAGES) && defined(_SC_PAGE_SIZE)\n    \/* For now only on macOS place a default limit on the vector heap\n       size to avoid having R killed due to memory overcommit.\n       Setting the limit at the maximum of 16Gb and available physical\n       memory seems reasonable, but there may be better options. LT *\/\n    else {\n        R_size_t pages = sysconf(_SC_PHYS_PAGES);\n        R_size_t page_size = sysconf(_SC_PAGE_SIZE);\n        R_size_t sysmem = pages * page_size;\n        R_size_t MinMaxVSize = 17179869184; \/* 16 Gb *\/\n        Rp->max_vsize = sysmem > MinMaxVSize ? sysmem : MinMaxVSize;\n    }\n#endif\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nOn 32-bit this results in overflow and values get set to 0. This the following\nis triggered:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    if (!R_SetMaxVSize(vsize)) {\n        \/* vsfac is still 1 *\/\n        snprintf(msg, 1024,\n                 \"WARNING: too small maximum for v(ector heap)size '%lu'\nignored,\"\n                 \" the current usage %gM is already larger\\n\",\n                 (unsigned long) vsize, R_VSize \/ Mega);\n        R_ShowMessage(msg);\n    }\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nSo on R startup, for example, I get:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "36-170% \/opt\/local\/bin\/R\nWARNING: too small maximum for v(ector heap)size '0' ignored, the current usage\n64M is already larger\n\nWARNING: too small maximum for v(ector heap)size '0' ignored, the current usage\n64M is already larger\n\n\nR version 4.4.0 (2024-04-24) -- \"Puppy Cup\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: powerpc-apple-darwin10.0.0d2 (32-bit)\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIn turn, this triggers some bug in Rcpp, resulting in this warning string being\ninterpreted as a list of objects to pass to the linker when "
                            },
                            {
                                "type": "text",
                                "text": "Rcpp:::LdFlags()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nis called (yes, it is deprecated ages ago and Rcpp upstream says it should not\nbe used, but a number of packages still use that, and now all of them are\nbroken).\n\nSee also: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/RcppCore\/Rcpp\/issues\/1302"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/trac.macports.org\/ticket\/69849"
                            },
                            {
                                "type": "text",
                                "text": "\n\nCorrect type to use will be double, like here:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/opensource.apple.com\/source\/gcc\/gcc-5646\/libiberty\/physmem.c.auto.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAlso, it looks like the code is actually using Linux calls, which may or may\nnot work on macOS and BSD (it does seem to work on my system, but there are\nreports online that "
                            },
                            {
                                "type": "text",
                                "text": "_SC_PHYS_PAGES",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " may not be defined on macOS in some\ncases).\nSee:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/wshanks\/qiskit-aer\/commit\/11f6afa311ba609eeb3bca37ed01b797076739f9"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18713] startup.c uses wrong types on macOS to determine memory limits, which triggers a bug leading to wrong args passed to a linker*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18713>\n\n--- Comment #1 from Sergey Fedorov (<mailto:vital.had@gmail.com|vital.had@gmail.com>) ---\nLinks got glues together.\n\nReport to Rcpp: <https:\/\/github.com\/RcppCore\/Rcpp\/issues\/1302>\n\nTicket on Macports: <https:\/\/trac.macports.org\/ticket\/69849>\n\nExample of the failure when installing `minqa` package (same issue with every\nother using that call):\n\n```\n\/opt\/local\/bin\/g++-mp-13 -std=gnu++17 -dynamiclib\n-Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module\n-multiply_defined suppress\n-L\/opt\/local\/Library\/Frameworks\/R.framework\/Resources\/lib\n-Wl,-headerpad_max_install_names -L\/opt\/local\/lib -lMacportsLegacySupport\n-Wl,-rpath,\/opt\/local\/lib\/libgcc -arch ppc -o minqa.so altmov.o bigden.o\nbiglag.o bobyqa.o bobyqb.o lagmax.o minqa.o newuoa.o newuob.o prelim.o rescue.o\ntrsapp.o trsbox.o trstep.o uobyqa.o uobyqb.o update.o updatebobyqa.o WARNING:\ntoo small maximum for v(ector heap)size '0' ignored, the current usage 64M is\nalready larger WARNING: too small maximum for v(ector heap)size '0' ignored,\nthe current usage 64M is already larger -lMacportsLegacySupport -lgfortran\n-lef_ppc -F\/opt\/local\/Library\/Frameworks\/R.framework\/.. -framework R\n-Wl,-framework -Wl,CoreFoundation\nld: file not found: WARNING:\ncollect2: error: ld returned 1 exit status\n```\n\nConfirmed to affect both `ppc` and `i386`, with gcc and clang, respectively.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1714413924.229859",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CZ=o5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18713] startup.c uses wrong types on macOS to determine memory limits, which triggers a bug leading to wrong args passed to a linker",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18713"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #1 from Sergey Fedorov ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:vital.had@gmail.com",
                                "text": "vital.had@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nLinks got glues together.\n\nReport to Rcpp: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/RcppCore\/Rcpp\/issues\/1302"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTicket on Macports: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/trac.macports.org\/ticket\/69849"
                            },
                            {
                                "type": "text",
                                "text": "\n\nExample of the failure when installing "
                            },
                            {
                                "type": "text",
                                "text": "minqa",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " package (same issue with every\nother using that call):\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\/opt\/local\/bin\/g++-mp-13 -std=gnu++17 -dynamiclib\n-Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module\n-multiply_defined suppress\n-L\/opt\/local\/Library\/Frameworks\/R.framework\/Resources\/lib\n-Wl,-headerpad_max_install_names -L\/opt\/local\/lib -lMacportsLegacySupport\n-Wl,-rpath,\/opt\/local\/lib\/libgcc -arch ppc -o minqa.so altmov.o bigden.o\nbiglag.o bobyqa.o bobyqb.o lagmax.o minqa.o newuoa.o newuob.o prelim.o rescue.o\ntrsapp.o trsbox.o trstep.o uobyqa.o uobyqb.o update.o updatebobyqa.o WARNING:\ntoo small maximum for v(ector heap)size '0' ignored, the current usage 64M is\nalready larger WARNING: too small maximum for v(ector heap)size '0' ignored,\nthe current usage 64M is already larger -lMacportsLegacySupport -lgfortran\n-lef_ppc -F\/opt\/local\/Library\/Frameworks\/R.framework\/.. -framework R\n-Wl,-framework -Wl,CoreFoundation\nld: file not found: WARNING:\ncollect2: error: ld returned 1 exit status\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nConfirmed to affect both "
                            },
                            {
                                "type": "text",
                                "text": "ppc",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "i386",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", with gcc and clang, respectively."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
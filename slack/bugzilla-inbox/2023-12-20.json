[
    {
        "subtype": "bot_message",
        "text": "*[Bug 15853] chol problem with positive semi definite matrix and pivoting*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=15853>\n\n--- Comment #5 from Simon Wood (<mailto:simon.wood@bath.edu|simon.wood@bath.edu>) ---\nThe point here is that there is a contradiction between the actual behaviour\nand what the helpfile says. \n\nI'm not sure the issue is really about crossprod(X) somehow not being positive\nsemi-definite - by the same logic there would never be any possibility of\ncomputing non-trivially with positive semi definite matrices in finite\nprecision would there? - there would only be positive definite or indefinite. \n\nHere's the same issue with only numerically positive eigenvalues. 'chol'\ncorrectly detects X'X is +semi-def rank 4, but the factor does not then behave\nas documented.\n\nset.seed(0)\nn &lt;- 20;p &lt;- 6\nX &lt;- matrix(runif(n*p),n,p)\nX[,5] &lt;- X[,4];X[,1] &lt;- X[,3]+X[,4] ## make rank def\nea &lt;- eigen(crossprod(X),symmetric=TRUE)\nea$values[ea$values&lt;4e-15] &lt;- 4e-15\nA &lt;- ea$vectors %*% (ea$values*t(ea$vectors)) ## numerically semi-def\neigen(A,symmetric=TRUE)$values ## all numerically non -ve now \nR &lt;- chol(A,pivot=TRUE)\nrank &lt;- attr(R,\"rank\") ## detects rank 4\ncrossprod(R)-crossprod(X[,attr(R,\"pivot\")]) ## should be zero according to\n?chol\n\nR[(rank+1):6,] &lt;- 0\ncrossprod(R)-crossprod(X[,attr(R,\"pivot\")]) ## is zero (as documented)",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1703072796.324009",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XaWtz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 15853] chol problem with positive semi definite matrix and pivoting",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=15853"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #5 from Simon Wood ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:simon.wood@bath.edu",
                                "text": "simon.wood@bath.edu"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThe point here is that there is a contradiction between the actual behaviour\nand what the helpfile says. \n\nI'm not sure the issue is really about crossprod(X) somehow not being positive\nsemi-definite - by the same logic there would never be any possibility of\ncomputing non-trivially with positive semi definite matrices in finite\nprecision would there? - there would only be positive definite or indefinite. \n\nHere's the same issue with only numerically positive eigenvalues. 'chol'\ncorrectly detects X'X is +semi-def rank 4, but the factor does not then behave\nas documented.\n\nset.seed(0)\nn <- 20;p <- 6\nX <- matrix(runif(n*p),n,p)\nX[,5] <- X[,4];X[,1] <- X[,3]+X[,4] ## make rank def\nea <- eigen(crossprod(X),symmetric=TRUE)\nea$values[ea$values<4e-15] <- 4e-15\nA <- ea$vectors %*% (ea$values*t(ea$vectors)) ## numerically semi-def\neigen(A,symmetric=TRUE)$values ## all numerically non -ve now \nR <- chol(A,pivot=TRUE)\nrank <- attr(R,\"rank\") ## detects rank 4\ncrossprod(R)-crossprod(X[,attr(R,\"pivot\")]) ## should be zero according to\n?chol\n\nR[(rank+1):6,] <- 0\ncrossprod(R)-crossprod(X[,attr(R,\"pivot\")]) ## is zero (as documented)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18638] removeSource fails to remove source references from formals and from pairlist*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18638>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n     Ever confirmed|0                           |1\n             Status|UNCONFIRMED                 |ASSIGNED\n                 CC|                            |maechler@stat.math.ethz.ch\n\n--- Comment #3 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nThank you, Andrew and Ivan.\n\nI can confirm that Andrew's proposal fixes both issues raised here,\nis nicely fitting with the code already in the function,\nand  I think that the relative small extra effort is worth it.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1703073221.253859",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NAN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18638] removeSource fails to remove source references from formals and from pairlist",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18638"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n     Ever confirmed|0                           |1\n             Status|UNCONFIRMED                 |ASSIGNED\n                 CC|                            |maechler@stat.math.ethz.ch\n\n--- Comment #3 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThank you, Andrew and Ivan.\n\nI can confirm that Andrew's proposal fixes both issues raised here,\nis nicely fitting with the code already in the function,\nand  I think that the relative small extra effort is worth it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18640] stirlerr concerns*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18640>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n     Ever confirmed|0                           |1\n             Status|UNCONFIRMED                 |ASSIGNED\n                 CC|                            |maechler@stat.math.ethz.ch\n\n--- Comment #1 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nThat's very good, thank you Matt!\n\nIndeed, I had added an R function  `stirlerr()`  to my CRAN package DPQ\n<https:\/\/cran.R-project.org\/package=DPQ> back in April 2021, starting to\nexperiment with better `stirlerr()` approximations (in pure R code), because I\nalso noted that current R's implementation was lacking.\n\nI had used Maple to derive the coefficients.\n\nInterestingly, I had planned to add this improvement to R 4.1.0,\nbut it seems I possibly thought I should first finish the vignette about it\n <https:\/\/CRAN.R-project.org\/package=DPQ\/vignettes\/log1pmx-etc.pdf>\nand really was side tracked somehow and ended up not doing it..\n\nAdditionally I also used my `Rmpfr` package\n<https:\/\/cran.R-project.org\/package=Rmpfr>  to implement  `stirlerrM()` - a\nhigh precision version of `stirlerr()` in package `DPQmpfr`\n<https:\/\/cran.R-project.org\/package=DPQmpfr>.\n\nNote that this would have been available by simply searching for `stirlerr` on\n<https:\/\/search.r-project.org>\n\n--- \n\nAnyway, I'm happy for your prompting to finally get this into R, hopefully for\nthe next x.y.0 release!",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1703074587.504119",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/78",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18640] stirlerr concerns",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18640"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n     Ever confirmed|0                           |1\n             Status|UNCONFIRMED                 |ASSIGNED\n                 CC|                            |maechler@stat.math.ethz.ch\n\n--- Comment #1 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThat's very good, thank you Matt!\n\nIndeed, I had added an R function  "
                            },
                            {
                                "type": "text",
                                "text": "stirlerr()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  to my CRAN package DPQ\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cran.R-project.org\/package=DPQ"
                            },
                            {
                                "type": "text",
                                "text": " back in April 2021, starting to\nexperiment with better "
                            },
                            {
                                "type": "text",
                                "text": "stirlerr()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " approximations (in pure R code), because I\nalso noted that current R's implementation was lacking.\n\nI had used Maple to derive the coefficients.\n\nInterestingly, I had planned to add this improvement to R 4.1.0,\nbut it seems I possibly thought I should first finish the vignette about it\n "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/CRAN.R-project.org\/package=DPQ\/vignettes\/log1pmx-etc.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\nand really was side tracked somehow and ended up not doing it..\n\nAdditionally I also used my "
                            },
                            {
                                "type": "text",
                                "text": "Rmpfr",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " package\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cran.R-project.org\/package=Rmpfr"
                            },
                            {
                                "type": "text",
                                "text": "  to implement  "
                            },
                            {
                                "type": "text",
                                "text": "stirlerrM()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " - a\nhigh precision version of "
                            },
                            {
                                "type": "text",
                                "text": "stirlerr()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in package "
                            },
                            {
                                "type": "text",
                                "text": "DPQmpfr",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cran.R-project.org\/package=DPQmpfr"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nNote that this would have been available by simply searching for "
                            },
                            {
                                "type": "text",
                                "text": "stirlerr",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " on\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/search.r-project.org"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- \n\nAnyway, I'm happy for your prompting to finally get this into R, hopefully for\nthe next x.y.0 release!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18640] stirlerr concerns*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18640>\n\n--- Comment #2 from M Welinder (<mailto:mwelinder@gmail.com|mwelinder@gmail.com>) ---\nInteresting!\n\nFWIW, this came up because I am experimenting with new code implementing\ndpois_raw that basically goes\n\n```\n        d = x - lambda;\n        d_l = d \/ lambda;\n        if (x &gt;= 1 &amp;&amp; x &lt;= 2*lambda &amp;&amp; lambda &gt;= 1) {\n                \/\/ If n&gt;=l (i.e., d&gt;=0) then t1-t4 are all negative\n                \/\/ and hence no cancellation occurs in the summing.\n                \/\/\n                \/\/ If d&lt;0, then t1 is positive and some cancellation\n                \/\/ occurs.  However, it looks like |t1| &lt; .2|t2| so\n                \/\/ the situation is not bad.\n                double t1 = -x * log1px3 (d_l);\n                double t2 = d_l * d_l * (0.5) * (d - lambda);\n                double t3 = log (2 * M_PI * x) * (-0.5);\n                double t4 = -stirlerr (x);\n\n                res = t1 + t2 + t3 + t4;\n        } else {\n              TBD\n        }\n```\nwhere log1px3(x) = log(1+x)-x+x^2\/2, but computed without cancellation.\n(Ie., x^3 terms and above from log(1+x).)\n\n\ndpois is causing an absurd amount of trouble for a function whose definition is\nso apparently trivial.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1703125708.033949",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PsX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18640] stirlerr concerns",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18640"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #2 from M Welinder ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:mwelinder@gmail.com",
                                "text": "mwelinder@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nInteresting!\n\nFWIW, this came up because I am experimenting with new code implementing\ndpois_raw that basically goes\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "        d = x - lambda;\n        d_l = d \/ lambda;\n        if (x >= 1 && x <= 2*lambda && lambda >= 1) {\n                \/\/ If n>=l (i.e., d>=0) then t1-t4 are all negative\n                \/\/ and hence no cancellation occurs in the summing.\n                \/\/\n                \/\/ If d<0, then t1 is positive and some cancellation\n                \/\/ occurs.  However, it looks like |t1| < .2|t2| so\n                \/\/ the situation is not bad.\n                double t1 = -x * log1px3 (d_l);\n                double t2 = d_l * d_l * (0.5) * (d - lambda);\n                double t3 = log (2 * M_PI * x) * (-0.5);\n                double t4 = -stirlerr (x);\n\n                res = t1 + t2 + t3 + t4;\n        } else {\n              TBD\n        }\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "where log1px3(x) = log(1+x)-x+x^2\/2, but computed without cancellation.\n(Ie., x^3 terms and above from log(1+x).)\n\n\n\ndpois is causing an absurd amount of trouble for a function whose definition is\nso apparently trivial."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
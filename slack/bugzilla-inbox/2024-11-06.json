[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18670] help(\"qr\") wrong about length(qraux) when LAPACK = TRUE*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18670>\n\n--- Comment #2 from Mikael Jagan (<mailto:jaganmn@mcmaster.ca|jaganmn@mcmaster.ca>) ---\nGentle bump, adding an example:\n\n```\n&gt; x &lt;- matrix(0, 2L, 4L); y &lt;- t(x)\n&gt; length(qr(x, LAPACK = FALSE)[[\"qraux\"]])\n[1] 4\n&gt; length(qr(y, LAPACK = FALSE)[[\"qraux\"]])\n[1] 2\n&gt; length(qr(x, LAPACK =  TRUE)[[\"qraux\"]])\n[1] 2\n&gt; length(qr(y, LAPACK =  TRUE)[[\"qraux\"]])\n[1] 2\n```",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1730902393.806839",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4xYC=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18670] help(\"qr\") wrong about length(qraux) when LAPACK = TRUE",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18670"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #2 from Mikael Jagan ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:jaganmn@mcmaster.ca",
                                "text": "jaganmn@mcmaster.ca"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nGentle bump, adding an example:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> x <- matrix(0, 2L, 4L); y <- t(x)\n> length(qr(x, LAPACK = FALSE)[[\"qraux\"]])\n[1] 4\n> length(qr(y, LAPACK = FALSE)[[\"qraux\"]])\n[1] 2\n> length(qr(x, LAPACK =  TRUE)[[\"qraux\"]])\n[1] 2\n> length(qr(y, LAPACK =  TRUE)[[\"qraux\"]])\n[1] 2\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18817] kappa(x, exact = TRUE, norm = \"2\") badly wrong for exactly singular 'x'*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18817>\n\nMartin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|ASSIGNED                    |CLOSED\n         Resolution|---                         |FIXED\n\n--- Comment #4 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\n(In reply to Martin Maechler from comment #1)\n&gt; I think we should use the following line instead :\n```\n   if(s[1]) s[1]\/s[length(s)] else Inf\n```\n&gt; \n&gt; and will commit this (after some minimal testing) unless ....\n\nI've committed that as svn rev 87289 to R-devel ... with the intent to backport\nto  R 4.4.2 patched.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1730925493.458259",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z7N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18817] kappa(x, exact = TRUE, norm = \"2\") badly wrong for exactly singular 'x'",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18817"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMartin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|ASSIGNED                    |CLOSED\n         Resolution|---                         |FIXED\n\n--- Comment #4 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\n(In reply to Martin Maechler from comment #1)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think we should use the following line instead :"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "   if(s[1]) s[1]\/s[length(s)] else Inf\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nand will commit this (after some minimal testing) unless ...."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI've committed that as svn rev 87289 to R-devel ... with the intent to backport\nto  R 4.4.2 patched."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18782] seq.Date() should not always coerce to double*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18782>\n\n--- Comment #9 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\n(In reply to Martin Maechler from comment #8)\n&gt; (In reply to Benjamin Schwendinger from comment #7)\n\nI'm pretty sure the most efficient *and* long-time working way to get\n\"known-internal-type\" versions of `\"Date\"` objects is to use  `storage.mode&lt;-`\n:\ne.g.,\n\n```\n&gt; dput(dateI &lt;- `storage.mode&lt;-`(as.Date(\"2001-1-1\"), \"integer\"))\nstructure(11323L, class = \"Date\")\n&gt; dput(dateD &lt;- `storage.mode&lt;-`(as.Date(\"2001-1-1\"), \"double\"))\nstructure(11323, class = \"Date\")\n&gt; \n```\n\n- using `mode&lt;-` instead works as well, but is less efficient if that matters.\n- and yes, it is more readable for most useRs to use\n```\ndateI &lt;- as.Date(\"2001-1-1\")\nstorage.mode(dateI) &lt;- \"integer\"\ndput(dateI)\n```\n\nLastly, also slightly more readable and still relatively efficient (*) is\n```\nDt &lt;- as.Date(\"1999-10-11\")\ndput(dateD &lt;- .Date(as.double (Dt)))\ndput(dateI &lt;- .Date(as.integer(Dt)))\n```\n\n*) For timing, I've used things like\n```\ni6 &lt;- 1:1e6\nsystem.time(for(i in i6) T &lt;- .Date(as.integer(Dt)))\n```\nand the `storage.mode&lt;-` way was 4-5 times faster than the\n`.Date(as.integer(.))` one.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1730927296.657379",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x6+In",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18782] seq.Date() should not always coerce to double",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18782"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #9 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\n(In reply to Martin Maechler from comment #8)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(In reply to Benjamin Schwendinger from comment #7)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI'm pretty sure the most efficient "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " long-time working way to get\n\"known-internal-type\" versions of "
                            },
                            {
                                "type": "text",
                                "text": "\"Date\"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " objects is to use  "
                            },
                            {
                                "type": "text",
                                "text": "storage.mode<-",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n:\ne.g.,\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> dput(dateI <- `storage.mode<-`(as.Date(\"2001-1-1\"), \"integer\"))\nstructure(11323L, class = \"Date\")\n> dput(dateD <- `storage.mode<-`(as.Date(\"2001-1-1\"), \"double\"))\nstructure(11323, class = \"Date\")\n> \n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n- using "
                            },
                            {
                                "type": "text",
                                "text": "mode<-",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead works as well, but is less efficient if that matters.\n- and yes, it is more readable for most useRs to use"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "dateI <- as.Date(\"2001-1-1\")\nstorage.mode(dateI) <- \"integer\"\ndput(dateI)\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nLastly, also slightly more readable and still relatively efficient (*) is"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dt <- as.Date(\"1999-10-11\")\ndput(dateD <- .Date(as.double (Dt)))\ndput(dateI <- .Date(as.integer(Dt)))\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n*) For timing, I've used things like"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i6 <- 1:1e6\nsystem.time(for(i in i6) T <- .Date(as.integer(Dt)))\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and the "
                            },
                            {
                                "type": "text",
                                "text": "storage.mode<-",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " way was 4-5 times faster than the\n"
                            },
                            {
                                "type": "text",
                                "text": ".Date(as.integer(.))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " one."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18818] New: WRE rules about Language entry in DESCRIPTION are not enforced*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18818>\n\n            Bug ID: 18818\n           Summary: WRE rules about Language entry in DESCRIPTION are not\n                    enforced\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: trivial\n          Priority: P5\n         Component: Translations\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:michaelchirico4@gmail.com|michaelchirico4@gmail.com>\n\nThis paragraph of WRE was highlighted today [1][2]\n\n&gt; A ‘Language’ field can be used to indicate if the package documentation is not in English: this should be a comma-separated list of standard (not private use or grandfathered) IETF language tags as currently defined by RFC 5646 (<https:\/\/www.rfc-editor.org\/rfc\/rfc5646>, see also <https:\/\/en.wikipedia.org\/wiki\/IETF_language_tag>), i.e., use language subtags which in essence are 2-letter ISO 639-1 (<https:\/\/en.wikipedia.org\/wiki\/ISO_639-1>) or 3-letter ISO 639-3 (<https:\/\/en.wikipedia.org\/wiki\/ISO_639-3>) language codes.\n\nIt sounds nice &amp; official but this can be mildly abused in practice by clearly\n\"wrong\" entries in `Language`, examples\n\n - `r (&gt;= 3.3.0)` [3]\n - `English` (not needed, and not ISO 639) [4]\n - `en` (not needed) [5]\n - `NL` (ISO 639 is lowercase AIUI) [6]\n - `pt_BR` (CMIIW, my reading is Language should not have the region specifier\n`BR`) [7]\n\n[1]\n<https:\/\/cran.r-project.org\/doc\/manuals\/r-release\/R-exts.html#The-DESCRIPTION-file>\n[2] <https:\/\/github.com\/Rdatatable\/data.table\/issues\/6606>\n[3]\n<https:\/\/github.com\/cran\/DNH4\/blob\/398334345eb9ae7a925f19516d8f637508bebff2\/DESCRIPTION#L18>\n[4]\n<https:\/\/github.com\/cran\/covid19brazil\/blob\/6587127f03e562f21ae0343684ee3b89849d2f90\/DESCRIPTION#L17>\n[5] 16x\n<https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+en%24%2F&amp;type=code>\n[6]\n<https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+NL%24%2F&amp;type=code>\n[7]\n<https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+pt_BR%2F&amp;type=code>\n\nIt seems like the above are low-hanging fruit that could be caught statically\nwith relative ease by a few rules in `.check_package_description()` in `R CMD\ncheck`.\n\nThe much more difficult aspect of actually detecting if the stated language is\npresent is of course out of scope.\n\nFiling here to gauge interest in a patch.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1730941396.625499",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Vn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18818] New: WRE rules about Language entry in DESCRIPTION are not enforced",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18818"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18818\n           Summary: WRE rules about Language entry in DESCRIPTION are not\n                    enforced\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: UNCONFIRMED\n          Severity: trivial\n          Priority: P5\n         Component: Translations\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:michaelchirico4@gmail.com",
                                "text": "michaelchirico4@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis paragraph of WRE was highlighted today [1][2]\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A ‘Language’ field can be used to indicate if the package documentation is not in English: this should be a comma-separated list of standard (not private use or grandfathered) IETF language tags as currently defined by RFC 5646 ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.rfc-editor.org\/rfc\/rfc5646"
                            },
                            {
                                "type": "text",
                                "text": ", see also "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/IETF_language_tag"
                            },
                            {
                                "type": "text",
                                "text": "), i.e., use language subtags which in essence are 2-letter ISO 639-1 ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/ISO_639-1"
                            },
                            {
                                "type": "text",
                                "text": ") or 3-letter ISO 639-3 ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/ISO_639-3"
                            },
                            {
                                "type": "text",
                                "text": ") language codes."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIt sounds nice & official but this can be mildly abused in practice by clearly\n\"wrong\" entries in "
                            },
                            {
                                "type": "text",
                                "text": "Language",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", examples\n\n - "
                            },
                            {
                                "type": "text",
                                "text": "r (>= 3.3.0)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " [3]\n - "
                            },
                            {
                                "type": "text",
                                "text": "English",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (not needed, and not ISO 639) [4]\n - "
                            },
                            {
                                "type": "text",
                                "text": "en",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (not needed) [5]\n - "
                            },
                            {
                                "type": "text",
                                "text": "NL",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (ISO 639 is lowercase AIUI) [6]\n - "
                            },
                            {
                                "type": "text",
                                "text": "pt_BR",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (CMIIW, my reading is Language should not have the region specifier\n"
                            },
                            {
                                "type": "text",
                                "text": "BR",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") [7]\n\n[1]\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cran.r-project.org\/doc\/manuals\/r-release\/R-exts.html#The-DESCRIPTION-file"
                            },
                            {
                                "type": "text",
                                "text": "\n[2] "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/Rdatatable\/data.table\/issues\/6606"
                            },
                            {
                                "type": "text",
                                "text": "\n[3]\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/cran\/DNH4\/blob\/398334345eb9ae7a925f19516d8f637508bebff2\/DESCRIPTION#L18"
                            },
                            {
                                "type": "text",
                                "text": "\n[4]\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/cran\/covid19brazil\/blob\/6587127f03e562f21ae0343684ee3b89849d2f90\/DESCRIPTION#L17"
                            },
                            {
                                "type": "text",
                                "text": "\n[5] 16x\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+en%24%2F&amp;type=code",
                                "text": "https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+en%24%2F&type=code"
                            },
                            {
                                "type": "text",
                                "text": "\n[6]\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+NL%24%2F&amp;type=code",
                                "text": "https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+NL%24%2F&type=code"
                            },
                            {
                                "type": "text",
                                "text": "\n[7]\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+pt_BR%2F&amp;type=code",
                                "text": "https:\/\/github.com\/search?q=org%3Acran+path%3ADESCRIPTION+%2F%5ELanguage%3A+pt_BR%2F&type=code"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt seems like the above are low-hanging fruit that could be caught statically\nwith relative ease by a few rules in "
                            },
                            {
                                "type": "text",
                                "text": ".check_package_description()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in `R CMD\ncheck`.\n\nThe much more difficult aspect of actually detecting if the stated language is\npresent is of course out of scope.\n\nFiling here to gauge interest in a patch."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01KXU8UNRX"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18805] R_atof(\"0x1.1\") ignores radix character for hexadecimal fractions without binary exponent*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18805>\n\nBrian Ripley (<mailto:ripley@stats.ox.ac.uk|ripley@stats.ox.ac.uk>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|UNCONFIRMED                 |CONFIRMED\n     Ever confirmed|0                           |1\n\n--- Comment #1 from Brian Ripley (<mailto:ripley@stats.ox.ac.uk|ripley@stats.ox.ac.uk>) ---\nPatch plus comments applied to trrunk",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1730954793.408159",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u\/Bm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18805] R_atof(\"0x1.1\") ignores radix character for hexadecimal fractions without binary exponent",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18805"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBrian Ripley ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:ripley@stats.ox.ac.uk",
                                "text": "ripley@stats.ox.ac.uk",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n             Status|UNCONFIRMED                 |CONFIRMED\n     Ever confirmed|0                           |1\n\n--- Comment #1 from Brian Ripley ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:ripley@stats.ox.ac.uk",
                                "text": "ripley@stats.ox.ac.uk",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nPatch plus comments applied to trrunk"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18819] New: Parser does not accept hexadecimal binary inputs without an exponent*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18819>\n\n            Bug ID: 18819\n           Summary: Parser does not accept hexadecimal binary inputs\n                    without an exponent\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: NEW\n          Severity: normal\n          Priority: P5\n         Component: I\/O\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:ripley@stats.ox.ac.uk|ripley@stats.ox.ac.uk>\n\nThe parser does not accept hexadecimal binary inputs without an exponent:\n\n&gt; 0x1.234p0\n[1] 1.137695\n&gt; 0x1.234\nError: unexpected input in \"0x1.234\"\n\n?NumercConstants says the exponent is optional (as does C99 on which this is\nbased).",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1730955633.573849",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=unQo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18819] New: Parser does not accept hexadecimal binary inputs without an exponent",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18819"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18819\n           Summary: Parser does not accept hexadecimal binary inputs\n                    without an exponent\n           Product: R\n           Version: R-devel (trunk)\n          Hardware: All\n                OS: All\n            Status: NEW\n          Severity: normal\n          Priority: P5\n         Component: I\/O\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:ripley@stats.ox.ac.uk",
                                "text": "ripley@stats.ox.ac.uk",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe parser does not accept hexadecimal binary inputs without an exponent:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "0x1.234p0"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[1] 1.137695"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "0x1.234"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Error: unexpected input in \"0x1.234\"\n\n?NumercConstants says the exponent is optional (as does C99 on which this is\nbased)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
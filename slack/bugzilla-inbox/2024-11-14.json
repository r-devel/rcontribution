[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18820] New: download.file() does not send the configured User-Agent with libcurl*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18820>\n\n            Bug ID: 18820\n           Summary: download.file() does not send the configured\n                    User-Agent with libcurl\n           Product: R\n           Version: R 4.4.x\n          Hardware: x86_64\/x64\/amd64 (64-bit)\n                OS: macOS\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: I\/O\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:csardi.gabor@gmail.com|csardi.gabor@gmail.com>\n\nThe ?options docs say:\n\n&gt;     ‘HTTPUserAgent’: string used as the ‘user agent’ in HTTP(S)\n&gt;          requests by ‘download.file’, ‘url’ and ‘curlGetHeaders’, or\n&gt;          ‘NULL’ when requests will be made without a user agent\n&gt;          header.  The default is ‘\"R (&lt;version&gt; &lt;platform&gt; &lt;arch&gt;\n&gt;          &lt;os&gt;)\"’ except when ‘libcurl’ is used when it is\n&gt;          ‘\"libcurl\/&lt;version&gt;\"’ for the ‘libcurl’ version in use.\n\nHowever, I am not able to override the default, R will still send\n\"libcurl\/&lt;version&gt;\":\n\n```\n&gt; options(\"HTTPUserAgent\" = sprintf(\"R (%s)\", getRversion()))\n&gt; getOption(\"HTTPUserAgent\")\n[1] \"R (4.4.1)\"\n\n&gt; download.file(\"<https:\/\/httpbin.org\/headers>\", tmp &lt;- tempfile()); readLines(tmp)\ntrying URL '<https:\/\/httpbin.org\/headers>'\nContent type 'application\/json' length 175 bytes\n==================================================\ndownloaded 175 bytes\n\n[1] \"{\"\n[2] \"  \\\"headers\\\": {\"\n[3] \"    \\\"Accept\\\": \\\"*\/*\\\", \"\n[4] \"    \\\"Host\\\": \\\"<http:\/\/httpbin.org|httpbin.org>\\\", \"\n[5] \"    \\\"User-Agent\\\": \\\"libcurl\/8.7.1\\\", \"\n[6] \"    \\\"X-Amzn-Trace-Id\\\": \\\"Root=1-67361330-401c5338703804a63d4b8b13\\\"\"\n[7] \"  }\"\n[8] \"}\"\n```\n\nSo either this is a bug, or the docs are misleading.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1731597316.466789",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dJz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18820] New: download.file() does not send the configured User-Agent with libcurl",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18820"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18820\n           Summary: download.file() does not send the configured\n                    User-Agent with libcurl\n           Product: R\n           Version: R 4.4.x\n          Hardware: x86_64\/x64\/amd64 (64-bit)\n                OS: macOS\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: I\/O\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:csardi.gabor@gmail.com",
                                "text": "csardi.gabor@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe ?options docs say:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    ‘HTTPUserAgent’: string used as the ‘user agent’ in HTTP(S)\n         requests by ‘download.file’, ‘url’ and ‘curlGetHeaders’, or\n         ‘NULL’ when requests will be made without a user agent\n         header.  The default is ‘\"R (<version> <platform> <arch>\n         <os>)\"’ except when ‘libcurl’ is used when it is\n         ‘\"libcurl\/<version>\"’ for the ‘libcurl’ version in use."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nHowever, I am not able to override the default, R will still send\n\"libcurl\/<version>\":\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> options(\"HTTPUserAgent\" = sprintf(\"R (%s)\", getRversion()))\n> getOption(\"HTTPUserAgent\")\n[1] \"R (4.4.1)\"\n\n> download.file(\""
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/httpbin.org\/headers"
                            },
                            {
                                "type": "text",
                                "text": "\", tmp <- tempfile()); readLines(tmp)\ntrying URL '"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/httpbin.org\/headers"
                            },
                            {
                                "type": "text",
                                "text": "'\nContent type 'application\/json' length 175 bytes\n==================================================\ndownloaded 175 bytes\n\n[1] \"{\"\n[2] \"  \\\"headers\\\": {\"\n[3] \"    \\\"Accept\\\": \\\"*\/*\\\", \"\n[4] \"    \\\"Host\\\": \\\""
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/httpbin.org",
                                "text": "httpbin.org"
                            },
                            {
                                "type": "text",
                                "text": "\\\", \"\n[5] \"    \\\"User-Agent\\\": \\\"libcurl\/8.7.1\\\", \"\n[6] \"    \\\"X-Amzn-Trace-Id\\\": \\\"Root=1-67361330-401c5338703804a63d4b8b13\\\"\"\n[7] \"  }\"\n[8] \"}\"\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nSo either this is a bug, or the docs are misleading."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 16721] image() with png() plot error for certain pixel widths*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=16721>\n\n--- Comment #19 from Paul Murrell (<mailto:paul@stat.auckland.ac.nz|paul@stat.auckland.ac.nz>) ---\nThanks for the update George.  That is starting to make a lot more sense.  As\nyou say, the differences now at least appear to be related to drawing\nrectangles (that are filled with no border), which is where we would expect\ndifferences to occur.  There are also a LOT of replications of or minor\nvariations on the same plot in the ggplot2 set, so the 39 differences are in\nreality fewer than that.  Furthermore, the differences all appear to be\nsingle-pixel-width and not visible to the naked eye, so not likely to have a\nvisual impact.\n\nIn fact, if you zoom in, say to 700%, on, for example,\n*-scale_colour_viridis_c-007.png, you can see the extra pixel width that is\nadded in the patch version on the left-most bar, and you can also see that some\nbars are a pixel wider than others, where in theory they should all be the same\nwidth.  So this looks like exactly the sort of change that we would expect to\nsee occurring.\n\nThe *-panel.smoothScatter-003.png case is interesting.  The dots are drawn with\npch='.', which the graphics engine attempts to draw as a single pixel (see\nGESymbol in engine.c), so we are right in the zone for this issue.  If you zoom\nin on the current vs patched versions, and switch between, you can see a couple\nof individual dots jumping one pixel up\/down or left\/right.\n\nOne issue with committing this change is that it could trigger any visual-diff\ncode that other people are running.  This should at least be indicated in a\nNEWS.Rd item for this fix (that there might be one-pixel changes in Cairo PNG\noutput when drawing filled rectangles with no border).  For example, I think\nthat Posit may have something like this for {ggplot2} (although it may not run\non Cairo devices).  We should alert them to the possibility - they may even\nwant to try the patch themselves to assess the impact.  George, do you happen\nto have a contact you could check with?",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1731625831.420169",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zViVs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 16721] image() with png() plot error for certain pixel widths",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=16721"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #19 from Paul Murrell ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:paul@stat.auckland.ac.nz",
                                "text": "paul@stat.auckland.ac.nz",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThanks for the update George.  That is starting to make a lot more sense.  As\nyou say, the differences now at least appear to be related to drawing\nrectangles (that are filled with no border), which is where we would expect\ndifferences to occur.  There are also a LOT of replications of or minor\nvariations on the same plot in the ggplot2 set, so the 39 differences are in\nreality fewer than that.  Furthermore, the differences all appear to be\nsingle-pixel-width and not visible to the naked eye, so not likely to have a\nvisual impact.\n\nIn fact, if you zoom in, say to 700%, on, for example,\n*-scale_colour_viridis_c-007.png, you can see the extra pixel width that is\nadded in the patch version on the left-most bar, and you can also see that some\nbars are a pixel wider than others, where in theory they should all be the same\nwidth.  So this looks like exactly the sort of change that we would expect to\nsee occurring.\n\nThe *-panel.smoothScatter-003.png case is interesting.  The dots are drawn with\npch='.', which the graphics engine attempts to draw as a single pixel (see\nGESymbol in engine.c), so we are right in the zone for this issue.  If you zoom\nin on the current vs patched versions, and switch between, you can see a couple\nof individual dots jumping one pixel up\/down or left\/right.\n\nOne issue with committing this change is that it could trigger any visual-diff\ncode that other people are running.  This should at least be indicated in a\nNEWS.Rd item for this fix (that there might be one-pixel changes in Cairo PNG\noutput when drawing filled rectangles with no border).  For example, I think\nthat Posit may have something like this for {ggplot2} (although it may not run\non Cairo devices).  We should alert them to the possibility - they may even\nwant to try the patch themselves to assess the impact.  George, do you happen\nto have a contact you could check with?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 14843] dev.print treats background inconsistently*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=14843>\n\nPaul Murrell (<mailto:paul@stat.auckland.ac.nz|paul@stat.auckland.ac.nz>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |paul@stat.auckland.ac.nz\n\n--- Comment #2 from Paul Murrell (<mailto:paul@stat.auckland.ac.nz|paul@stat.auckland.ac.nz>) ---\nI am not sure how much dev.print() is used (I have never used it), but ...\n\ndev.print() is really just a convenience wrapper for dev.copy(), so a good\nfirst check would be to do a similar test using dev.copy().  That would tell us\nwhether it is a general issue with dev.copy() or something specific to\ndev.print().\n\nOtherwise, there is a healthy matrix of options to test:\n\n* Device to copy from.\n* Device to copy to.\n* Opaque vs transparent bg on device copying from.\n* Opaque vs transparent bg on device copying to.\n* Graphics output vs grid output vs combination (and for combinations, graphics\nfirst vs grid first).\n\nNOTE that for some devices, e.g., png(), the actual device you get depends on\nplatform, so, e.g., it is quartz png on macOS and cairo png (if available) on\nLinux.  This means that the `type` argument needs to be specified for clarity\n(and some devices will only be available on certain platforms, e.g., quartz\nonly on macOS).\n\nNOTE also that only some devices record a \"display list\" by default (which is\nwhat gets copied between devices), though you can enable it on any device with\ndev.control(\"enable\").\n\nAn alternative to exhaustively testing that entire matrix would be to carefully\ndebug two dev.print() calls that produce different results.  There are two\nimportant steps to focus on:\n\n* The creation of the new device being copied to in a call to `device(...)` in\ndev.copy() in grDevices\/R\/device.R.  That could be tracked to the C code that\ninitialises the device, e.g., PSDeviceDriver() in grDevices\/src\/devPS.c to see\nwhat the background of the device is being initialised to.\n\n* The copying of the display list from the old device to the new device.  This\nshould start in a call to devcopy() in grDevices\/src\/devices.c followed by a\nlabyrinth of graphics engine and graphics system calls.  You should eventually\nend up in GEplayDisplayList() in main\/engine.c, which calls out to graphics\nsystems (graphics or grid) to \"restore\" their state before replaying the\ndisplay list.  This could also (re)set the device background.\n\nWhat should ultimately end up drawing a background on the device being copied\nto is a call to *_NewPage() (in C code) on that device, so another possibility\nis to just directly debug *_NewPage() calls and see what is happening with\ndifferent dev.print() calls.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1731631739.380189",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GdB5o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 14843] dev.print treats background inconsistently",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=14843"
                            },
                            {
                                "type": "text",
                                "text": "\n\nPaul Murrell ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:paul@stat.auckland.ac.nz",
                                "text": "paul@stat.auckland.ac.nz",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |paul@stat.auckland.ac.nz\n\n--- Comment #2 from Paul Murrell ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:paul@stat.auckland.ac.nz",
                                "text": "paul@stat.auckland.ac.nz",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nI am not sure how much dev.print() is used (I have never used it), but ...\n\ndev.print() is really just a convenience wrapper for dev.copy(), so a good\nfirst check would be to do a similar test using dev.copy().  That would tell us\nwhether it is a general issue with dev.copy() or something specific to\ndev.print().\n\nOtherwise, there is a healthy matrix of options to test:\n\n* Device to copy from.\n* Device to copy to.\n* Opaque vs transparent bg on device copying from.\n* Opaque vs transparent bg on device copying to.\n* Graphics output vs grid output vs combination (and for combinations, graphics\nfirst vs grid first).\n\nNOTE that for some devices, e.g., png(), the actual device you get depends on\nplatform, so, e.g., it is quartz png on macOS and cairo png (if available) on\nLinux.  This means that the "
                            },
                            {
                                "type": "text",
                                "text": "type",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " argument needs to be specified for clarity\n(and some devices will only be available on certain platforms, e.g., quartz\nonly on macOS).\n\nNOTE also that only some devices record a \"display list\" by default (which is\nwhat gets copied between devices), though you can enable it on any device with\ndev.control(\"enable\").\n\nAn alternative to exhaustively testing that entire matrix would be to carefully\ndebug two dev.print() calls that produce different results.  There are two\nimportant steps to focus on:\n\n* The creation of the new device being copied to in a call to "
                            },
                            {
                                "type": "text",
                                "text": "device(...)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in\ndev.copy() in grDevices\/R\/device.R.  That could be tracked to the C code that\ninitialises the device, e.g., PSDeviceDriver() in grDevices\/src\/devPS.c to see\nwhat the background of the device is being initialised to.\n\n* The copying of the display list from the old device to the new device.  This\nshould start in a call to devcopy() in grDevices\/src\/devices.c followed by a\nlabyrinth of graphics engine and graphics system calls.  You should eventually\nend up in GEplayDisplayList() in main\/engine.c, which calls out to graphics\nsystems (graphics or grid) to \"restore\" their state before replaying the\ndisplay list.  This could also (re)set the device background.\n\nWhat should ultimately end up drawing a background on the device being copied\nto is a call to *_NewPage() (in C code) on that device, so another possibility\nis to just directly debug *_NewPage() calls and see what is happening with\ndifferent dev.print() calls."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
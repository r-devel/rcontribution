[
    {
        "subtype": "bot_message",
        "text": "*[Bug 15027] max.print is ignored for matrix  *and* other array headers*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=15027>\n\n--- Comment #9 from Martin Maechler (<mailto:maechler@stat.math.ethz.ch|maechler@stat.math.ethz.ch>) ---\nNow, with the nice improvement for matrices in R-devel, additionally to the\n\"higher array\" cases,\n_of course_, we'd like to patch (pure R code) `print.data.frame()` such that it\nbehaves as nicely as the matrix case.\nCurrently (in R-devel !):\n\n```\n&gt; print(as.matrix(USJudgeRatings), max = 6)\n                CONT INTG DMNR DILG CFMG DECI\nAARONSON,L.H.    5.7  7.9  7.7  7.3  7.1  7.4\n [ reached getOption(\"max.print\") -- omitted 42 rows and 6 columns ]\n\n&gt; print(USJudgeRatings, max = 6)\n     CONT INTG DMNR DILG CFMG DECI\n [ reached getOption(\"max.print\") -- omitted 6 columns ]\n [ reached 'max' \/ getOption(\"max.print\") -- omitted 43 rows ]\n&gt; \n```\ni.e., the data frame method behaves \"as poorly\" as the default (-&gt; matrix in C)\nmethod did\nafter your first round of bug fixing (last Friday in Salzburg at R dev day).\n\nThere is *one* thing that `print.data.frame()` does slightly better: in it's\nsend note, it uses\n\n  `reached 'max' \/ getOption(\"max.print\")`  \ninstead of (the less careful)  \n\n  `reached getOption(\"max.print\")`",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1721213205.950919",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nRZQI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "*[Bug 15027] max.print is ignored for matrix  "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " other array headers*\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=15027"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #9 from Martin Maechler ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:maechler@stat.math.ethz.ch",
                                "text": "maechler@stat.math.ethz.ch",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nNow, with the nice improvement for matrices in R-devel, additionally to the\n\"higher array\" cases,\n"
                            },
                            {
                                "type": "text",
                                "text": "of course",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", we'd like to patch (pure R code) "
                            },
                            {
                                "type": "text",
                                "text": "print.data.frame()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " such that it\nbehaves as nicely as the matrix case.\nCurrently (in R-devel !):\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "> print(as.matrix(USJudgeRatings), max = 6)\n                CONT INTG DMNR DILG CFMG DECI\nAARONSON,L.H.    5.7  7.9  7.7  7.3  7.1  7.4\n [ reached getOption(\"max.print\") -- omitted 42 rows and 6 columns ]\n\n> print(USJudgeRatings, max = 6)\n     CONT INTG DMNR DILG CFMG DECI\n [ reached getOption(\"max.print\") -- omitted 6 columns ]\n [ reached 'max' \/ getOption(\"max.print\") -- omitted 43 rows ]\n> \n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i.e., the data frame method behaves \"as poorly\" as the default (-> matrix in C)\nmethod did\nafter your first round of bug fixing (last Friday in Salzburg at R dev day).\n\nThere is "
                            },
                            {
                                "type": "text",
                                "text": "one",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " thing that "
                            },
                            {
                                "type": "text",
                                "text": "print.data.frame()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " does slightly better: in it's\nsend note, it uses\n\n  "
                            },
                            {
                                "type": "text",
                                "text": "reached 'max' \/ getOption(\"max.print\")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  \ninstead of (the less careful)  \n\n  "
                            },
                            {
                                "type": "text",
                                "text": "reached getOption(\"max.print\")",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 15027] max.print is ignored for matrix  *and* other array headers*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=15027>\n\n--- Comment #10 from Frederik Ziebell (<mailto:f_ziebell@web.de|f_ziebell@web.de>) ---\nThank you for working on this. I don't know if it's off-topic, but from\nLionel's post it seems that even if `max.print` is respected, the output still\ndoesn't show any contents of the matrix, which is the actual goal of the user\nwhen printing a matrix. \n\nI would love to see matrices being printed in a similar fashion than a\n`dgCMatrix` is shown in Martin's wonderful Matrix package.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1721215192.439899",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DN=X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "*[Bug 15027] max.print is ignored for matrix  "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " other array headers*\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=15027"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #10 from Frederik Ziebell ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:f_ziebell@web.de",
                                "text": "f_ziebell@web.de"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nThank you for working on this. I don't know if it's off-topic, but from\nLionel's post it seems that even if "
                            },
                            {
                                "type": "text",
                                "text": "max.print",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is respected, the output still\ndoesn't show any contents of the matrix, which is the actual goal of the user\nwhen printing a matrix. \n\nI would love to see matrices being printed in a similar fashion than a\n"
                            },
                            {
                                "type": "text",
                                "text": "dgCMatrix",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is shown in Martin's wonderful Matrix package."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 15027] max.print is ignored for matrix  *and* other array headers*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=15027>\n\n--- Comment #11 from Lionel Henry (<mailto:lionel.hry@gmail.com|lionel.hry@gmail.com>) ---\nHi Frederik,\n\nThe contents are now shown, see test cases in the patch.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1721221040.865259",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pY=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "*[Bug 15027] max.print is ignored for matrix  "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " other array headers*\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=15027"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #11 from Lionel Henry ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:lionel.hry@gmail.com",
                                "text": "lionel.hry@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nHi Frederik,\n\nThe contents are now shown, see test cases in the patch."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18767] New: tools::toTitleCase() doesn't capitalize the first word in some situations*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18767>\n\n            Bug ID: 18767\n           Summary: tools::toTitleCase() doesn't capitalize the first word\n                    in some situations\n           Product: R\n           Version: R 4.4.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Misc\n          Assignee: <mailto:R-core@R-project.org|R-core@R-project.org>\n          Reporter: <mailto:hugo.gruson+Rbugzilla@normalesup.org|hugo.gruson+Rbugzilla@normalesup.org>\n\nWe (Hugo Gruson, Sarah Zeller, Shannon Pileggi and Reiko Okamoto) noticed some\nedge cases in `toTitleCase()` that produced unexpected (to us!) results. Martin\nMaechler at the R Dev Day PLUS recommended we open this bug report to gather\nopinions on what the correct behaviour should be.\n\n# Mismatch between code comment and actual behaviour\n\n'A' is not capitalized at the beginning of a sentence of after a colon.\n\nThis is at odds with the comments in the function source code:\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2662-L2663>\n\n```\n    ## These should be lower case except at the beginning (and after :)\n    lpat &lt;-\n\"^(a|an|and|are|as|at|be|but|by|en|for|if|in|is|nor|not|of|on|or|per|so|the|to|v[.]?|via|vs[.]?|from|into|than|that|with)$\"\n```\n\n## 'A' is not capitalized at the beginning of a sentence\n\n```\ntools::toTitleCase(\"a new bug\")\n#&gt; [1] \"a New Bug\"\n```\n\nThere is indeed an instruction to capitalize the first word of the sentence:\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2687>\n\n```\n        l[1L] &lt;- FALSE\n```\n\nBut then a later instruction explicitly excludes single-letter words from the\ntransformation:\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2696>\n\n```\n        keep &lt;- havecaps | l | (nchar(xx) == 1L) | alone\n```\n\nA potential solution is to handle the first word of the sentence later in the\nlogic, so it's not overwritten by following exclusions. We still want it to\nhappen before `alone` exclusions are applied, to ensure `alone` words are\n*always* left alone, even if they are in first position.\n\nThis leads to the following patch:\n\n```\nIndex: src\/library\/tools\/R\/utils.R\n===================================================================\n--- src\/library\/tools\/R\/utils.R (revision 86796)\n+++ src\/library\/tools\/R\/utils.R (working copy)\n@@ -2688,7 +2688,6 @@\n         alone &lt;- alone | grepl(\"^'.*'$\", xx)\n         havecaps &lt;- grepl(\"^[[:alpha:]].*[[:upper:]]+\", xx)\n         l &lt;- grepl(lpat, xx, ignore.case = TRUE)\n-        l[1L] &lt;- FALSE\n         ## do not remove capitalization immediately after \": \" or \"- \"\n         ind &lt;- grep(\"[-:]$\", xx); ind &lt;- ind[ind + 2L &lt;= length(l)]\n         ind &lt;- ind[(xx[ind + 1L] == \" \") &amp; grepl(\"^['[:alnum:]]\", xx[ind +\n2L])]\n@@ -2697,7 +2696,9 @@\n         ind &lt;- which(xx == '\"'); ind &lt;- ind[ind + 1L &lt;= length(l)]\n         l[ind + 1L] &lt;- FALSE\n         xx[l] &lt;- tolower(xx[l])\n-        keep &lt;- havecaps | l | (nchar(xx) == 1L) | alone\n+        keep &lt;- havecaps | l | (nchar(xx) == 1L)\n+        keep[1L] &lt;- FALSE\n+        keep &lt;- keep | alone\n         xx[!keep] &lt;- sapply(xx[!keep], do1)\n         paste(xx, collapse = \"\")\n```\n\nNote that this patch would capitalize all single-letter words at the beginning\nof a sentence, not just 'A'. We are not completely sure if this is the desired\nbehaviour or not.\n\n## 'A' is not capitalized after a colon\n\n``` \ntools::toTitleCase(\"Salzburg: a city of music\")\n#&gt; [1] \"Salzburg: a City of Music\"\n```\n\nThis happens for the same reason, where single-letter words get a special\ntreatment late in the logic. The only difference with the previous section is\n",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1721238693.060179",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t4yr8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18767] New: tools::toTitleCase() doesn't capitalize the first word in some situations",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18767"
                            },
                            {
                                "type": "text",
                                "text": "\n\n            Bug ID: 18767\n           Summary: tools::toTitleCase() doesn't capitalize the first word\n                    in some situations\n           Product: R\n           Version: R 4.4.x\n          Hardware: Other\n                OS: Other\n            Status: UNCONFIRMED\n          Severity: normal\n          Priority: P5\n         Component: Misc\n          Assignee: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:R-core@R-project.org",
                                "text": "R-core@R-project.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n          Reporter: "
                            },
                            {
                                "type": "link",
                                "url": "mailto:hugo.gruson+Rbugzilla@normalesup.org",
                                "text": "hugo.gruson+Rbugzilla@normalesup.org",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": "\n\nWe (Hugo Gruson, Sarah Zeller, Shannon Pileggi and Reiko Okamoto) noticed some\nedge cases in "
                            },
                            {
                                "type": "text",
                                "text": "toTitleCase()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that produced unexpected (to us!) results. Martin\nMaechler at the R Dev Day PLUS recommended we open this bug report to gather\nopinions on what the correct behaviour should be.\n\n# Mismatch between code comment and actual behaviour\n\n'A' is not capitalized at the beginning of a sentence of after a colon.\n\nThis is at odds with the comments in the function source code:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2662-L2663"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    ## These should be lower case except at the beginning (and after :)\n    lpat <-\n\"^(a|an|and|are|as|at|be|but|by|en|for|if|in|is|nor|not|of|on|or|per|so|the|to|v[.]?|via|vs[.]?|from|into|than|that|with)$\"\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n## 'A' is not capitalized at the beginning of a sentence\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "tools::toTitleCase(\"a new bug\")\n#> [1] \"a New Bug\"\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThere is indeed an instruction to capitalize the first word of the sentence:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2687"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "        l[1L] <- FALSE\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nBut then a later instruction explicitly excludes single-letter words from the\ntransformation:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2696"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "        keep <- havecaps | l | (nchar(xx) == 1L) | alone\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nA potential solution is to handle the first word of the sentence later in the\nlogic, so it's not overwritten by following exclusions. We still want it to\nhappen before "
                            },
                            {
                                "type": "text",
                                "text": "alone",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " exclusions are applied, to ensure "
                            },
                            {
                                "type": "text",
                                "text": "alone",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " words are\n"
                            },
                            {
                                "type": "text",
                                "text": "always",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " left alone, even if they are in first position.\n\nThis leads to the following patch:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Index: src\/library\/tools\/R\/utils.R\n===================================================================\n--- src\/library\/tools\/R\/utils.R (revision 86796)\n+++ src\/library\/tools\/R\/utils.R (working copy)\n@@ -2688,7 +2688,6 @@\n         alone <- alone | grepl(\"^'.*'$\", xx)\n         havecaps <- grepl(\"^[[:alpha:]].*[[:upper:]]+\", xx)\n         l <- grepl(lpat, xx, ignore.case = TRUE)\n-        l[1L] <- FALSE\n         ## do not remove capitalization immediately after \": \" or \"- \"\n         ind <- grep(\"[-:]$\", xx); ind <- ind[ind + 2L <= length(l)]\n         ind <- ind[(xx[ind + 1L] == \" \") & grepl(\"^['[:alnum:]]\", xx[ind +\n2L])]\n@@ -2697,7 +2696,9 @@\n         ind <- which(xx == '\"'); ind <- ind[ind + 1L <= length(l)]\n         l[ind + 1L] <- FALSE\n         xx[l] <- tolower(xx[l])\n-        keep <- havecaps | l | (nchar(xx) == 1L) | alone\n+        keep <- havecaps | l | (nchar(xx) == 1L)\n+        keep[1L] <- FALSE\n+        keep <- keep | alone\n         xx[!keep] <- sapply(xx[!keep], do1)\n         paste(xx, collapse = \"\")\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nNote that this patch would capitalize all single-letter words at the beginning\nof a sentence, not just 'A'. We are not completely sure if this is the desired\nbehaviour or not.\n\n## 'A' is not capitalized after a colon\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": " \ntools::toTitleCase(\"Salzburg: a city of music\")\n#> [1] \"Salzburg: a City of Music\"\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThis happens for the same reason, where single-letter words get a special\ntreatment late in the logic. The only difference with the previous section is"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "where the custom logic to capitalize the first word after a colon is applied:\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2689-L2691>\n\n```\n        ## do not remove capitalization immediately after \": \" or \"- \"\n        ind &lt;- grep(\"[-:]$\", xx); ind &lt;- ind[ind + 2L &lt;= length(l)]\n        ind &lt;- ind[(xx[ind + 1L] == \" \") &amp; grepl(\"^['[:alnum:]]\", xx[ind +\n2L])]\n        l[ind + 2L] &lt;- FALSE\n```\n\n## Special `either` exclusion list words are not capitalized at the beginning\nof a sentence or after a colon\n\nAt the moment, words in `alone`: \n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2656-L2661>\n\n```\n    ## leave these alone: the internal caps rule would do that\n    ## in some cases.  We could insist on this exact capitalization.\n    alone &lt;- c(\"2D\", \"3D\", \"AIC\", \"BayesX\", \"GoF\", \"HTML\", \"LaTeX\",\n               \"MonetDB\", \"OpenBUGS\", \"TeX\", \"U.S.\", \"U.S.A.\", \"WinBUGS\",\n               \"aka\", \"et\", \"al.\", \"ggplot2\", \"i.e.\", \"jar\", \"jars\",\n               \"ncdf\", \"netCDF\", \"rgl\", \"rpart\", \"xls\", \"xlsx\")\n```\n\nand `either`:\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2665-L2670>\n\n```\n    ## These we don't care about\n    either &lt;- c(\"all\", \"above\", \"after\", \"along\", \"also\", \"among\",\n                \"any\", \"both\", \"can\", \"few\", \"it\", \"less\", \"log\",\n                \"many\", \"may\", \"more\", \"over\", \"some\", \"their\",\n                \"then\", \"this\", \"under\", \"until\", \"using\", \"von\",\n                \"when\", \"where\", \"which\", \"will\", \"without\",\n                \"yet\", \"you\", \"your\")\n```\n\nare treated the same way:\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2683>\n\n```\n        alone &lt;- xx %in% c(alone, either)\n```\n\nBut this leads to situations where words in `either` are not capitalized at the\nbeginning of a sentence or after a colon:\n\n```\ntools::toTitleCase(\"more than writing code\")\n#&gt; [1] \"more than Writing Code\"\n```\n\nWe may want to separate the logic for `alone` and `either` and ensure special\nhandling happens at the correct location for each of them.\n\nIn particular, we may want to ensure `either` words are capitalized at the\nstart of the sentence, while we probably never want this for `alone` words.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1721238693.083749",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "psr0A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "where the custom logic to capitalize the first word after a colon is applied:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2689-L2691"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "        ## do not remove capitalization immediately after \": \" or \"- \"\n        ind <- grep(\"[-:]$\", xx); ind <- ind[ind + 2L <= length(l)]\n        ind <- ind[(xx[ind + 1L] == \" \") & grepl(\"^['[:alnum:]]\", xx[ind +\n2L])]\n        l[ind + 2L] <- FALSE\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n## Special "
                            },
                            {
                                "type": "text",
                                "text": "either",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " exclusion list words are not capitalized at the beginning\nof a sentence or after a colon\n\nAt the moment, words in "
                            },
                            {
                                "type": "text",
                                "text": "alone",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": \n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2656-L2661"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    ## leave these alone: the internal caps rule would do that\n    ## in some cases.  We could insist on this exact capitalization.\n    alone <- c(\"2D\", \"3D\", \"AIC\", \"BayesX\", \"GoF\", \"HTML\", \"LaTeX\",\n               \"MonetDB\", \"OpenBUGS\", \"TeX\", \"U.S.\", \"U.S.A.\", \"WinBUGS\",\n               \"aka\", \"et\", \"al.\", \"ggplot2\", \"i.e.\", \"jar\", \"jars\",\n               \"ncdf\", \"netCDF\", \"rgl\", \"rpart\", \"xls\", \"xlsx\")\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nand "
                            },
                            {
                                "type": "text",
                                "text": "either",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ":\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2665-L2670"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "    ## These we don't care about\n    either <- c(\"all\", \"above\", \"after\", \"along\", \"also\", \"among\",\n                \"any\", \"both\", \"can\", \"few\", \"it\", \"less\", \"log\",\n                \"many\", \"may\", \"more\", \"over\", \"some\", \"their\",\n                \"then\", \"this\", \"under\", \"until\", \"using\", \"von\",\n                \"when\", \"where\", \"which\", \"will\", \"without\",\n                \"yet\", \"you\", \"your\")\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nare treated the same way:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/09f3acb92dcc180636a7c4e257491302e9a22ae8\/src\/library\/tools\/R\/utils.R#L2683"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "        alone <- xx %in% c(alone, either)\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nBut this leads to situations where words in "
                            },
                            {
                                "type": "text",
                                "text": "either",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are not capitalized at the\nbeginning of a sentence or after a colon:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "tools::toTitleCase(\"more than writing code\")\n#> [1] \"more than Writing Code\"\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nWe may want to separate the logic for "
                            },
                            {
                                "type": "text",
                                "text": "alone",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "either",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and ensure special\nhandling happens at the correct location for each of them.\n\nIn particular, we may want to ensure "
                            },
                            {
                                "type": "text",
                                "text": "either",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " words are capitalized at the\nstart of the sentence, while we probably never want this for "
                            },
                            {
                                "type": "text",
                                "text": "alone",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " words."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
[
    {
        "subtype": "bot_message",
        "text": "*[Bug 18738] javareconf incorrectly managing Java out-of-memory situations on SGE*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18738>\n\n--- Comment #2 from Alexander Tyakht (<mailto:alexander.tyakht@tuebingen.mpg.de|alexander.tyakht@tuebingen.mpg.de>) ---\nSGE = Sun Grid Engine\n\nFurther testing showed that the issue is not always accompanied with the\nout-of-memory messages of Java, and the exact line causing could not be\nisolated (not always the same from run to run).\nHere are the outputs of the script:\n\nJava interpreter : \/software\/miniconda3\/lib\/jvm\/bin\/java\nJava version     : 20.0.2-internal\nJava home path   : \/software\/miniconda3\/lib\/jvm\nJava compiler    : \/software\/miniconda3\/lib\/jvm\/bin\/javac\nJava headers gen.: \/software\/miniconda3\/bin\/javah\nJava archive tool: \/software\/miniconda3\/lib\/jvm\/bin\/jar",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1717161570.492549",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VG\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18738] javareconf incorrectly managing Java out-of-memory situations on SGE",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18738"
                            },
                            {
                                "type": "text",
                                "text": "\n\n--- Comment #2 from Alexander Tyakht ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:alexander.tyakht@tuebingen.mpg.de",
                                "text": "alexander.tyakht@tuebingen.mpg.de",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ") ---\nSGE = Sun Grid Engine\n\nFurther testing showed that the issue is not always accompanied with the\nout-of-memory messages of Java, and the exact line causing could not be\nisolated (not always the same from run to run).\nHere are the outputs of the script:\n\nJava interpreter : \/software\/miniconda3\/lib\/jvm\/bin\/java\nJava version     : 20.0.2-internal\nJava home path   : \/software\/miniconda3\/lib\/jvm\nJava compiler    : \/software\/miniconda3\/lib\/jvm\/bin\/javac\nJava headers gen.: \/software\/miniconda3\/bin\/javah\nJava archive tool: \/software\/miniconda3\/lib\/jvm\/bin\/jar"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18732] Improve documentation for substr() and substring()*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18732>\n\nTomas Kalibera (<mailto:tomas.kalibera@gmail.com|tomas.kalibera@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |tomas.kalibera@gmail.com\n         Resolution|---                         |FIXED\n             Status|UNCONFIRMED                 |CLOSED\n\n--- Comment #1 from Tomas Kalibera (<mailto:tomas.kalibera@gmail.com|tomas.kalibera@gmail.com>) ---\nI've tried to improve the documentation based on your suggestions, now in\nR-devel.\n\nThe documentation says that substr() returns \"a character vector of the same\nlength and with the same attributes as x\". I think it is then clear that only\nlength(x) elements from stop\/start will be used, and it is not so important in\nthe first place. But I made the documentation say that the elements will be\nrecycled.\n\nAlso I made it say that when stop is larger than the string length, only the\npart until the end will be returned. Note this is a hard decision to add such\ndetails, because by saying that in the documentation, it is then harder to\nchange the implementation (to say return an error, which is what I would do if\ndesigning such function today). The logic of returning just a part of the\nstring, however, matches the behavior with out-of-bounds start, so probably\nbest if both are handled the same way.\n\nI've not added examples of these corner cases in the interest of keeping the\ndocumentation concise and focusing on the primary use. Also, again, I don't\nthink it is good to emphasize the behavior when the string indexes are out of\nbounds.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1717162260.887849",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "suhAm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18732] Improve documentation for substr() and substring()",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18732"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTomas Kalibera ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:tomas.kalibera@gmail.com",
                                "text": "tomas.kalibera@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |tomas.kalibera@gmail.com\n         Resolution|---                         |FIXED\n             Status|UNCONFIRMED                 |CLOSED\n\n--- Comment #1 from Tomas Kalibera ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:tomas.kalibera@gmail.com",
                                "text": "tomas.kalibera@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nI've tried to improve the documentation based on your suggestions, now in\nR-devel.\n\nThe documentation says that substr() returns \"a character vector of the same\nlength and with the same attributes as x\". I think it is then clear that only\nlength(x) elements from stop\/start will be used, and it is not so important in\nthe first place. But I made the documentation say that the elements will be\nrecycled.\n\nAlso I made it say that when stop is larger than the string length, only the\npart until the end will be returned. Note this is a hard decision to add such\ndetails, because by saying that in the documentation, it is then harder to\nchange the implementation (to say return an error, which is what I would do if\ndesigning such function today). The logic of returning just a part of the\nstring, however, matches the behavior with out-of-bounds start, so probably\nbest if both are handled the same way.\n\nI've not added examples of these corner cases in the interest of keeping the\ndocumentation concise and focusing on the primary use. Also, again, I don't\nthink it is good to emphasize the behavior when the string indexes are out of\nbounds."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18733] Add message or warning to `substr()` when `length(start)` and\/or `length(stop)` exceeds `length(x)`*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18733>\n\nTomas Kalibera (<mailto:tomas.kalibera@gmail.com|tomas.kalibera@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |tomas.kalibera@gmail.com\n\n--- Comment #1 from Tomas Kalibera (<mailto:tomas.kalibera@gmail.com|tomas.kalibera@gmail.com>) ---\nWhether the behavior of substr(\"abcdef\", 1:4, 3:6) is \"unexpected\" I think\ndepends on whether one has read the documentation of ?substr or not, the\ndocumentation says clearly what the length of the result would be.\n\nI am sympathetic that the behavior may be unexpected to someone who has not\nread the documentation, but relies on intuition.\n\nIt might be possible to help such users in this case by adding a warning when\nsome of the elements of the string index vectors are not used, unless there was\na large amount of code relying on the current behavior of no warning. Such\nthings are hard to predict, but I will test on CRAN and Bioconductor packages.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1717167624.777199",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SgVW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18733] Add message or warning to ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "substr()",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " when ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "length(start)",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and\/or ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "length(stop)",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " exceeds ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "length(x)",
                                "style": {
                                    "bold": true,
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18733"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTomas Kalibera ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:tomas.kalibera@gmail.com",
                                "text": "tomas.kalibera@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |tomas.kalibera@gmail.com\n\n--- Comment #1 from Tomas Kalibera ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:tomas.kalibera@gmail.com",
                                "text": "tomas.kalibera@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nWhether the behavior of substr(\"abcdef\", 1:4, 3:6) is \"unexpected\" I think\ndepends on whether one has read the documentation of ?substr or not, the\ndocumentation says clearly what the length of the result would be.\n\nI am sympathetic that the behavior may be unexpected to someone who has not\nread the documentation, but relies on intuition.\n\nIt might be possible to help such users in this case by adding a warning when\nsome of the elements of the string index vectors are not used, unless there was\na large amount of code relying on the current behavior of no warning. Such\nthings are hard to predict, but I will test on CRAN and Bioconductor packages."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "bot_message",
        "text": "*[Bug 18738] javareconf incorrectly managing Java out-of-memory situations on SGE*\n<https:\/\/bugs.r-project.org\/show_bug.cgi?id=18738>\n\nTomas Kalibera (<mailto:tomas.kalibera@gmail.com|tomas.kalibera@gmail.com>) changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |tomas.kalibera@gmail.com\n         Resolution|---                         |NOT REPRODUCIBLE\n             Status|UNCONFIRMED                 |CLOSED\n\n--- Comment #3 from Tomas Kalibera (<mailto:tomas.kalibera@gmail.com|tomas.kalibera@gmail.com>) ---\nUnless we would have a reproducible example (using only base R and java) or a\nvery thorough analysis, there is nothing we can do on our end.\n\nI tried to create a wrapper for Java that would ask for too much memory for\nJava to start, and javareconf correctly concluded that the \"Java interpreter\ndoesn't work properly\". Indeed, a reproducible example for a bug report like\nthis could include a (minimal) script behaving to the outside like the\nproblematic java invocation on your system.\n\nPlease note the line in the script you refer to properly quotes the output, so\nit works even if the output has multiple lines.",
        "username": "r-bugs notifier",
        "icons": {
            "emoji": ":robot_face:"
        },
        "type": "message",
        "ts": "1717169453.074589",
        "bot_id": "B06769YJX9Q",
        "app_id": "A024R9PQM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TF1FQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[Bug 18738] javareconf incorrectly managing Java out-of-memory situations on SGE",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bugs.r-project.org\/show_bug.cgi?id=18738"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTomas Kalibera ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:tomas.kalibera@gmail.com",
                                "text": "tomas.kalibera@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") changed:\n\n           What    |Removed                     |Added\n----------------------------------------------------------------------------\n                 CC|                            |tomas.kalibera@gmail.com\n         Resolution|---                         |NOT REPRODUCIBLE\n             Status|UNCONFIRMED                 |CLOSED\n\n--- Comment #3 from Tomas Kalibera ("
                            },
                            {
                                "type": "link",
                                "url": "mailto:tomas.kalibera@gmail.com",
                                "text": "tomas.kalibera@gmail.com"
                            },
                            {
                                "type": "text",
                                "text": ") ---\nUnless we would have a reproducible example (using only base R and java) or a\nvery thorough analysis, there is nothing we can do on our end.\n\nI tried to create a wrapper for Java that would ask for too much memory for\nJava to start, and javareconf correctly concluded that the \"Java interpreter\ndoesn't work properly\". Indeed, a reproducible example for a bug report like\nthis could include a (minimal) script behaving to the outside like the\nproblematic java invocation on your system.\n\nPlease note the line in the script you refer to properly quotes the output, so\nit works even if the output has multiple lines."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
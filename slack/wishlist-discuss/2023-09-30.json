[
    {
        "user": "U05UE6EBNTY",
        "type": "message",
        "ts": "1696065335.316349",
        "client_msg_id": "23cd0fb6-1b56-42ff-8ed4-a6377c1ee487",
        "text": "I posted this on <https:\/\/stat.ethz.ch\/pipermail\/r-devel\/2023-September\/082886.html|r-devel> but maybe here is the better place to discuss this first:\n&gt; Currently one can alter R's random number generation via `RNGkind()` in\n&gt; three aspects: the RNG itself, the method for drawing from the normal\n&gt; distribution and the method for generating integers within a range.\n&gt; For the first and second aspect it is possible to supply user defined\n&gt; methods. This is not the case for the last aspect, which is handled in\n&gt; `R_unif_index`. I think it would be interesting to add a comparable hook\n&gt; there as well.\nBackground: `R_unif_index` currently asumes that it can get only 16 bits of randomness per draw from the RNG. However, many RNGs provide 32 or even 64 bits (52 bits after conversion to double) per draw. The performance of `sample()` could be increased if these random bits were used via a user defined alternative to `R_unif_index`.\nI would be interested in working on a patch that implements this.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "3e98a1103e77",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5995855358768_3e98a1103e77fa41bdd2_72.jpg",
            "first_name": "Ralf",
            "real_name": "Ralf Stubner",
            "display_name": "Ralf Stubner",
            "team": "T01DW9DLB2A",
            "name": "ralf.stubner",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PJ=\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I posted this on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stat.ethz.ch\/pipermail\/r-devel\/2023-September\/082886.html",
                                "text": "r-devel"
                            },
                            {
                                "type": "text",
                                "text": " but maybe here is the better place to discuss this first:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Currently one can alter R's random number generation via "
                            },
                            {
                                "type": "text",
                                "text": "RNGkind()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in\nthree aspects: the RNG itself, the method for drawing from the normal\ndistribution and the method for generating integers within a range.\nFor the first and second aspect it is possible to supply user defined\nmethods. This is not the case for the last aspect, which is handled in\n"
                            },
                            {
                                "type": "text",
                                "text": "R_unif_index",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". I think it would be interesting to add a comparable hook\nthere as well."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Background: "
                            },
                            {
                                "type": "text",
                                "text": "R_unif_index",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " currently asumes that it can get only 16 bits of randomness per draw from the RNG. However, many RNGs provide 32 or even 64 bits (52 bits after conversion to double) per draw. The performance of "
                            },
                            {
                                "type": "text",
                                "text": "sample()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " could be increased if these random bits were used via a user defined alternative to "
                            },
                            {
                                "type": "text",
                                "text": "R_unif_index",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\nI would be interested in working on a patch that implements this."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
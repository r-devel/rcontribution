[
    {
        "user": "U021X72PVRN",
        "type": "message",
        "ts": "1709673579.993629",
        "client_msg_id": "a95c3abc-31c4-46ca-8c55-579ffac1c35a",
        "text": "Maybe have a look at `methods::.debugMethod` which inserts a `browser()` when using e.g. `debugonce()` as Lluís suggested. In theory, a custom version of such a mechanism could be used to inject whatever you wanted into the debugger, especially since `browser()` takes `text` and `condition` input arguments which allow for injections (retrieved via `browserText` and `browserCondition`)",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gc96fb19f1c2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c96fb19f1c22a8c67dbb6db88165e280.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Jonathan",
            "real_name": "Jonathan Carroll",
            "display_name": "Jonathan Carroll",
            "team": "T01DW9DLB2A",
            "name": "jono",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1709399248.395479",
        "parent_user_id": "U062MDESA6S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nANZz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe have a look at "
                            },
                            {
                                "type": "text",
                                "text": "methods::.debugMethod",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " which inserts a "
                            },
                            {
                                "type": "text",
                                "text": "browser()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " when using e.g. "
                            },
                            {
                                "type": "text",
                                "text": "debugonce()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as Lluís suggested. In theory, a custom version of such a mechanism could be used to inject whatever you wanted into the debugger, especially since "
                            },
                            {
                                "type": "text",
                                "text": "browser()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " takes "
                            },
                            {
                                "type": "text",
                                "text": "text",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "condition",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " input arguments which allow for injections (retrieved via "
                            },
                            {
                                "type": "text",
                                "text": "browserText",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "browserCondition",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
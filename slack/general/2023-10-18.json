[
    {
        "user": "U0358K327NW",
        "type": "message",
        "ts": "1697623710.639069",
        "edited": {
            "user": "U0358K327NW",
            "ts": "1697623928.000000"
        },
        "client_msg_id": "b0e0bec2-a7b7-4aae-9602-5f45fc535edb",
        "text": "I used the ROpensci package `crul` to send `async` requests. You can learn more through the documentation\n<https:\/\/cran.r-project.org\/web\/packages\/crul\/vignettes\/async.html>\n<https:\/\/docs.ropensci.org\/crul\/reference\/Async.html>\n<https:\/\/docs.ropensci.org\/crul\/reference\/AsyncQueue.html>",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "c6b0e58cf8f9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5842595445264_c6b0e58cf8f9dae9c310_72.jpg",
            "first_name": "Ahmadou",
            "real_name": "Ahmadou Dicko",
            "display_name": "Ahmadou Dicko",
            "team": "T01DW9DLB2A",
            "name": "dicko.ahmadou",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1697554174.901309",
        "parent_user_id": "U060HHXGD7G",
        "attachments": [
            {
                "from_url": "https:\/\/docs.ropensci.org\/crul\/reference\/Async.html",
                "image_url": "https:\/\/docs.ropensci.org\/crul\/logo.png",
                "image_width": 518,
                "image_height": 600,
                "image_bytes": 116114,
                "service_icon": "https:\/\/docs.ropensci.org\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/docs.ropensci.org\/crul\/reference\/Async.html",
                "fallback": "Simple async client — Async",
                "text": "An async client to work with many URLs, but all with the same HTTP method",
                "title": "Simple async client — Async",
                "title_link": "https:\/\/docs.ropensci.org\/crul\/reference\/Async.html",
                "service_name": "docs.ropensci.org"
            },
            {
                "from_url": "https:\/\/docs.ropensci.org\/crul\/reference\/AsyncQueue.html",
                "image_url": "https:\/\/docs.ropensci.org\/crul\/logo.png",
                "image_width": 518,
                "image_height": 600,
                "image_bytes": 116114,
                "service_icon": "https:\/\/docs.ropensci.org\/apple-touch-icon.png",
                "id": 2,
                "original_url": "https:\/\/docs.ropensci.org\/crul\/reference\/AsyncQueue.html",
                "fallback": "AsyncQueue — AsyncQueue",
                "text": "An AsyncQueue client",
                "title": "AsyncQueue — AsyncQueue",
                "title_link": "https:\/\/docs.ropensci.org\/crul\/reference\/AsyncQueue.html",
                "service_name": "docs.ropensci.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cIM2O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I used the ROpensci package "
                            },
                            {
                                "type": "text",
                                "text": "crul",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to send "
                            },
                            {
                                "type": "text",
                                "text": "async",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " requests. You can learn more through the documentation\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cran.r-project.org\/web\/packages\/crul\/vignettes\/async.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.ropensci.org\/crul\/reference\/Async.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.ropensci.org\/crul\/reference\/AsyncQueue.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0273CKQBAT",
        "type": "message",
        "ts": "1697636074.720159",
        "client_msg_id": "90ad294f-ad2f-4f88-a2d5-c9e51fd12b9a",
        "text": "{nanonext} (<https:\/\/github.com\/shikokuchuo\/nanonext>) does this and is robust and performant. It is the core engine for {targets} HPC scheduling. It is also true async as opposed to an event loop\/co-routine. The function you want is `ncurl_aio()`. Async websockets is also available using `stream()` with `send_aio()` and `recv_aio()`. Should be self-explanatory, but dm me with any questions as it is my own package.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "a0c81095572c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-02-09\/6630369085857_a0c81095572c68d11b60_72.png",
            "first_name": "Charlie",
            "real_name": "Charlie Gao",
            "display_name": "Charlie Gao",
            "team": "T01DW9DLB2A",
            "name": "charlie.gao",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1697554174.901309",
        "parent_user_id": "U060HHXGD7G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QxHps",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "{nanonext} ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/shikokuchuo\/nanonext"
                            },
                            {
                                "type": "text",
                                "text": ") does this and is robust and performant. It is the core engine for {targets} HPC scheduling. It is also true async as opposed to an event loop\/co-routine. The function you want is "
                            },
                            {
                                "type": "text",
                                "text": "ncurl_aio()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Async websockets is also available using "
                            },
                            {
                                "type": "text",
                                "text": "stream()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with "
                            },
                            {
                                "type": "text",
                                "text": "send_aio()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "recv_aio()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Should be self-explanatory, but dm me with any questions as it is my own package."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U01N3ET8N82"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "",
        "files": [
            {
                "id": "F062DJKND32",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U060HHXGD7G",
        "display_as_bot": false,
        "type": "message",
        "ts": "1697641664.533479",
        "client_msg_id": "df44adec-0daf-43c3-8d85-c6c59a2a60aa",
        "thread_ts": "1697554174.901309",
        "parent_user_id": "U060HHXGD7G",
        "reactions": [
            {
                "name": "partyr",
                "users": [
                    "U01N3ET8N82"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U060HHXGD7G",
        "type": "message",
        "ts": "1697641679.787179",
        "client_msg_id": "e5a78b66-33e8-4f21-a0fa-3147ca11039e",
        "text": "Thanks all. Will be taking a look into all three solutions.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "g046e93a1274",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/046e93a12746d903e28169e2c68b587b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Jonathan",
            "real_name": "Jonathan Rauscher",
            "display_name": "Jonathan Rauscher",
            "team": "T01DW9DLB2A",
            "name": "jonathan.rauscher",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1697554174.901309",
        "parent_user_id": "U060HHXGD7G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6o3ex",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks all. Will be taking a look into all three solutions."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
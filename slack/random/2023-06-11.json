[
    {
        "user": "U053DCDAF6U",
        "type": "message",
        "ts": "1686494350.834159",
        "edited": {
            "user": "U053DCDAF6U",
            "ts": "1686494385.000000"
        },
        "client_msg_id": "30e1bf84-d5b2-480e-8e3b-14e894f81218",
        "text": "I’m somewhat confused by the result of `is.atomic(factor())` . In one way it makes sense because the underlying `type` of a factor is an integer but the factor() itself is _not_ an integer. Is this expected because `is.atomic()` checks only the type?\n\n```# expect true\nis.atomic(integer())\n#&gt; [1] TRUE\n\n# expect false because of attr &amp; class\nis.atomic(factor())\n#&gt; [1] TRUE```",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "e714e755f196",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-11\/5077198575479_e714e755f19651f9eb3b_72.jpg",
            "first_name": "Josiah",
            "real_name": "Josiah Parry",
            "display_name": "",
            "team": "T01DW9DLB2A",
            "name": "josiah.parry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686494350.834159",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1686496717.041969",
        "reply_users": [
            "U01N3ET8N82"
        ],
        "replies": [
            {
                "user": "U01N3ET8N82",
                "ts": "1686496717.041969"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QLk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m somewhat confused by the result of "
                            },
                            {
                                "type": "text",
                                "text": "is.atomic(factor())",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " . In one way it makes sense because the underlying "
                            },
                            {
                                "type": "text",
                                "text": "type",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of a factor is an integer but the factor() itself is "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " an integer. Is this expected because "
                            },
                            {
                                "type": "text",
                                "text": "is.atomic()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " checks only the type?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "# expect true\nis.atomic(integer())\n#> [1] TRUE\n\n# expect false because of attr & class\nis.atomic(factor())\n#> [1] TRUE"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U053DCDAF6U",
        "type": "message",
        "ts": "1686495357.017619",
        "client_msg_id": "1866268e-2297-4558-8593-7e6ac6ca6419",
        "text": "Here’s another one I can’t reason about. What is it about a matrix and array that makes the class sticky? data.frame isn’t a base type nor is matrix or array. But for some reason unclassing a matrix doesn’t work but it does for a data.frame.\n\n```class(unclass(matrix()))\n#&gt; [1] \"matrix\" \"array\"\nclass(unclass(data.frame()))\n#&gt; [1] \"list\"```\n",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "e714e755f196",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-11\/5077198575479_e714e755f19651f9eb3b_72.jpg",
            "first_name": "Josiah",
            "real_name": "Josiah Parry",
            "display_name": "",
            "team": "T01DW9DLB2A",
            "name": "josiah.parry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "reply_count": 20,
        "reply_users_count": 4,
        "latest_reply": "1686668838.374769",
        "reply_users": [
            "U053DCDAF6U",
            "U01N3ET8N82",
            "U021X72PVRN",
            "U01KXU8UNRX"
        ],
        "replies": [
            {
                "user": "U053DCDAF6U",
                "ts": "1686496040.897769"
            },
            {
                "user": "U01N3ET8N82",
                "ts": "1686496857.779809"
            },
            {
                "user": "U053DCDAF6U",
                "ts": "1686497102.280209"
            },
            {
                "user": "U053DCDAF6U",
                "ts": "1686499155.890959"
            },
            {
                "user": "U053DCDAF6U",
                "ts": "1686499180.282629"
            },
            {
                "user": "U01N3ET8N82",
                "ts": "1686507984.525389"
            },
            {
                "user": "U01N3ET8N82",
                "ts": "1686508150.513919"
            },
            {
                "user": "U01N3ET8N82",
                "ts": "1686508178.185629"
            },
            {
                "user": "U01N3ET8N82",
                "ts": "1686508305.447499"
            },
            {
                "user": "U01N3ET8N82",
                "ts": "1686508508.617909"
            },
            {
                "user": "U053DCDAF6U",
                "ts": "1686510563.990439"
            },
            {
                "user": "U053DCDAF6U",
                "ts": "1686510618.307709"
            },
            {
                "user": "U021X72PVRN",
                "ts": "1686613766.388169"
            },
            {
                "user": "U053DCDAF6U",
                "ts": "1686657319.165429"
            },
            {
                "user": "U01KXU8UNRX",
                "ts": "1686664721.090649"
            },
            {
                "user": "U01KXU8UNRX",
                "ts": "1686664733.501169"
            },
            {
                "user": "U053DCDAF6U",
                "ts": "1686667073.317349"
            },
            {
                "user": "U01KXU8UNRX",
                "ts": "1686667249.120029"
            },
            {
                "user": "U01KXU8UNRX",
                "ts": "1686667344.453079"
            },
            {
                "user": "U053DCDAF6U",
                "ts": "1686668838.374769"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7EM8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here’s another one I can’t reason about. What is it about a matrix and array that makes the class sticky? data.frame isn’t a base type nor is matrix or array. But for some reason unclassing a matrix doesn’t work but it does for a data.frame.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class(unclass(matrix()))\n#> [1] \"matrix\" \"array\"\nclass(unclass(data.frame()))\n#> [1] \"list\""
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "U053DCDAF6U",
        "type": "message",
        "ts": "1686496040.897769",
        "client_msg_id": "ee51e24e-33a5-412c-8172-8b220bf653d7",
        "text": "It’s not a reason, but it is something I’ve noticed and I’m not sure I like \/ understand it fully! `unclass()` does not strip attributes. R does something weird with matrixes \/ arrays that it doesn’t do with data.frames. If the dim attribute is set. It _always_ adds the array &amp; matrix class if dims is 2 dimensional. 1 or 3+ is an array.\n\nWhy would this behavior happen for arrays but not data.frames?\n\n```class(unclass(matrix()))\n#&gt; [1] \"matrix\" \"array\"\nclass(unclass(data.frame()))\n#&gt; [1] \"list\"\n\nattributes(unclass(matrix()))\n#&gt; $dim\n#&gt; [1] 1 1\nattributes(unclass(data.frame()))\n#&gt; $names\n#&gt; character(0)\n#&gt; \n#&gt; $row.names\n#&gt; integer(0)\n\n# check classes of matrix\ninherits(matrix(), \"matrix\")\n#&gt; [1] TRUE\ninherits(matrix(), \"array\")\n#&gt; [1] TRUE\n\n# make a matrix without setting class\nstructure(1:3, dim = c(3, 1)) |&gt; \n  class()\n#&gt; [1] \"matrix\" \"array\"```",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "e714e755f196",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-11\/5077198575479_e714e755f19651f9eb3b_72.jpg",
            "first_name": "Josiah",
            "real_name": "Josiah Parry",
            "display_name": "",
            "team": "T01DW9DLB2A",
            "name": "josiah.parry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5ktw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s not a reason, but it is something I’ve noticed and I’m not sure I like \/ understand it fully! "
                            },
                            {
                                "type": "text",
                                "text": "unclass()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " does not strip attributes. R does something weird with matrixes \/ arrays that it doesn’t do with data.frames. If the dim attribute is set. It "
                            },
                            {
                                "type": "text",
                                "text": "always",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " adds the array & matrix class if dims is 2 dimensional. 1 or 3+ is an array.\n\nWhy would this behavior happen for arrays but not data.frames?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class(unclass(matrix()))\n#> [1] \"matrix\" \"array\"\nclass(unclass(data.frame()))\n#> [1] \"list\"\n\nattributes(unclass(matrix()))\n#> $dim\n#> [1] 1 1\nattributes(unclass(data.frame()))\n#> $names\n#> character(0)\n#> \n#> $row.names\n#> integer(0)\n\n# check classes of matrix\ninherits(matrix(), \"matrix\")\n#> [1] TRUE\ninherits(matrix(), \"array\")\n#> [1] TRUE\n\n# make a matrix without setting class\nstructure(1:3, dim = c(3, 1)) |> \n  class()\n#> [1] \"matrix\" \"array\""
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1686496717.041969",
        "client_msg_id": "b753bede-e6d7-46a3-a4b5-3a10b8a84e17",
        "text": "try `is.atomic(structure(integer(), class=\"myclass\"))`",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686494350.834159",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XqbZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "try "
                            },
                            {
                                "type": "text",
                                "text": "is.atomic(structure(integer(), class=\"myclass\"))",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U053DCDAF6U"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1686496857.779809",
        "client_msg_id": "33139bda-65f6-40d2-b60a-22e4eca28d49",
        "text": "I would use `attr&lt;-` to remove attributes, or `as.vector()` which should do so and also be \"more readable\"",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E3r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would use "
                            },
                            {
                                "type": "text",
                                "text": "attr<-",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to remove attributes, or "
                            },
                            {
                                "type": "text",
                                "text": "as.vector()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " which should do so and also be \"more readable\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U053DCDAF6U",
        "type": "message",
        "ts": "1686497102.280209",
        "client_msg_id": "625ed279-e293-4c20-9834-a27121867487",
        "text": "I understand that, yes. But this is inconsistent behavior. For example `factor()` is another atomic vector type that has a special attribute `level`  but unclassing it returns an integer vector.\n\n```class(unclass(factor()))\n#&gt; [1] \"integer\"```",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "e714e755f196",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-11\/5077198575479_e714e755f19651f9eb3b_72.jpg",
            "first_name": "Josiah",
            "real_name": "Josiah Parry",
            "display_name": "",
            "team": "T01DW9DLB2A",
            "name": "josiah.parry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4lHI3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I understand that, yes. But this is inconsistent behavior. For example "
                            },
                            {
                                "type": "text",
                                "text": "factor()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is another atomic vector type that has a special attribute "
                            },
                            {
                                "type": "text",
                                "text": "level",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  but unclassing it returns an integer vector.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "class(unclass(factor()))\n#> [1] \"integer\""
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U053DCDAF6U",
        "type": "message",
        "ts": "1686499155.890959",
        "client_msg_id": "6a4e0ae5-d24e-43b7-973b-41c62cbaeaa4",
        "text": "<https:\/\/josiahparry.com\/posts\/2023-06-11-matrix-bug.html>",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "e714e755f196",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-11\/5077198575479_e714e755f19651f9eb3b_72.jpg",
            "first_name": "Josiah",
            "real_name": "Josiah Parry",
            "display_name": "",
            "team": "T01DW9DLB2A",
            "name": "josiah.parry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HZ+l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/josiahparry.com\/posts\/2023-06-11-matrix-bug.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U053DCDAF6U",
        "type": "message",
        "ts": "1686499180.282629",
        "client_msg_id": "0b89f171-4e5f-488c-9166-9235312b2052",
        "text": "I’ve explored this a bit with teh R4DS slack channel and I’ve come to the conclusion that this is a bug. I’ll figure out how to report one of those :stuck_out_tongue:",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "e714e755f196",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-11\/5077198575479_e714e755f19651f9eb3b_72.jpg",
            "first_name": "Josiah",
            "real_name": "Josiah Parry",
            "display_name": "",
            "team": "T01DW9DLB2A",
            "name": "josiah.parry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x7bwO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve explored this a bit with teh R4DS slack channel and I’ve come to the conclusion that this is a bug. I’ll figure out how to report one of those "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1686507984.525389",
        "client_msg_id": "47f19618-ac19-4459-9236-92a1e8ec4957",
        "text": "which part is a bug exactly?\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/attrib.c#L652|https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/attrib.c#L652>",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B01V53YD4FJ",
                "app_unfurl_url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/attrib.c#L652",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/attrib.c | attrib.c>",
                "text": "```\n\t\t    SET_STRING_ELT(klass, 0, mkChar(\"matrix\"));\n```",
                "title": "<https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/attrib.c | attrib.c>",
                "footer": "<https:\/\/github.com\/r-devel\/r-svn|r-devel\/r-svn>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E2z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "which part is a bug exactly?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/attrib.c#L652",
                                "text": "https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/attrib.c#L652"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1686508150.513919",
        "client_msg_id": "3710dc76-1be7-4448-8d25-92dee1ae4236",
        "text": "<https:\/\/rdrr.io\/r\/base\/class.html|https:\/\/rdrr.io\/r\/base\/class.html>",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hSR6G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/rdrr.io\/r\/base\/class.html",
                                "text": "https:\/\/rdrr.io\/r\/base\/class.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1686508178.185629",
        "client_msg_id": "224540c4-35b5-41fb-a843-0bc94d659d4f",
        "text": "&gt; If the object does not have a class attribute, it has an implicit class, notably \"matrix\", \"array\", \"function\" or \"numeric\" or the result of typeof(x) (which is similar to mode(x)), but for type \"language\" and mode \"call\", where the following extra classes exist for the corresponding function calls: if, while, for, =, &lt;-, (, {, call.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lx1",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If the object does not have a class attribute, it has an implicit class, notably \"matrix\", \"array\", \"function\" or \"numeric\" or the result of typeof(x) (which is similar to mode(x)), but for type \"language\" and mode \"call\", where the following extra classes exist for the corresponding function calls: if, while, for, =, <-, (, {, call."
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1686508305.447499",
        "client_msg_id": "dfe90a15-aad2-437e-bc3e-bf53b81a09ff",
        "text": "unclass() simply removes the 'class' attribute:\n\n<https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/objects.c#L879|https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/objects.c#L879>",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "attachments": [
            {
                "id": 1,
                "footer_icon": "https:\/\/slack.github.com\/static\/img\/favicon-neutral.png",
                "color": "24292f",
                "bot_id": "B01V53YD4FJ",
                "app_unfurl_url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/objects.c#L879",
                "is_app_unfurl": true,
                "app_id": "A01BP7R4KNY",
                "fallback": "<https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/objects.c | objects.c>",
                "text": "```\nattribute_hidden SEXP do_unclass(SEXP call, SEXP op, SEXP args, SEXP env)\n```",
                "title": "<https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/objects.c | objects.c>",
                "footer": "<https:\/\/github.com\/r-devel\/r-svn|r-devel\/r-svn>",
                "mrkdwn_in": [
                    "text"
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Zt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "unclass() simply removes the 'class' attribute:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/objects.c#L879",
                                "text": "https:\/\/github.com\/r-devel\/r-svn\/blob\/9ba4696be423e56b52100e6b2b4fe983d88a417b\/src\/main\/objects.c#L879"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01N3ET8N82",
        "type": "message",
        "ts": "1686508508.617909",
        "edited": {
            "user": "U01N3ET8N82",
            "ts": "1686508538.000000"
        },
        "client_msg_id": "91d2d5c7-b093-4783-be6f-0dc5bb281ba3",
        "text": "there is no class attribute to remove: `dput(matrix())`",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "6c5b09058425",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-26\/7489004466548_6c5b09058425ecbe2d89_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael Chirico",
            "display_name": "Michael Chirico (he\/him)",
            "team": "T01DW9DLB2A",
            "name": "michaelchirico4",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t\/=G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there is no class attribute to remove: "
                            },
                            {
                                "type": "text",
                                "text": "dput(matrix())",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U053DCDAF6U",
        "type": "message",
        "ts": "1686510563.990439",
        "client_msg_id": "9a9b5b0a-ab95-403b-a29b-5cf1852e6b51",
        "text": "That’s kind of exactly my point. I make an integer with a `dim` attribute. It’s mode is `numeric` and its type is `integer` . It’s class, however is returned as `matrix` and `array` rather than `integer` as it, imho, should. Its slaps the array \/ matrix class on it, presumedly, because of the `dim` attribute which is not documented up there.\n\nTake the following example:\n\n```f &lt;- structure(integer(), levels = character())\nm &lt;- structure(integer(2), dim = c(1, 2)) \n\nclass(f)\n#&gt; [1] \"integer\"\nclass(m)\n#&gt; [1] \"matrix\" \"array\"\n\ntypeof(f)\n#&gt; [1] \"integer\"\ntypeof(m)\n#&gt; [1] \"integer\"\n\nmode(f)\n#&gt; [1] \"numeric\"\nmode(m)\n#&gt; [1] \"numeric\"```\n",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "e714e755f196",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-11\/5077198575479_e714e755f19651f9eb3b_72.jpg",
            "first_name": "Josiah",
            "real_name": "Josiah Parry",
            "display_name": "",
            "team": "T01DW9DLB2A",
            "name": "josiah.parry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=D\/W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s kind of exactly my point. I make an integer with a "
                            },
                            {
                                "type": "text",
                                "text": "dim",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " attribute. It’s mode is "
                            },
                            {
                                "type": "text",
                                "text": "numeric",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and its type is "
                            },
                            {
                                "type": "text",
                                "text": "integer",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " . It’s class, however is returned as "
                            },
                            {
                                "type": "text",
                                "text": "matrix",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "array",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " rather than "
                            },
                            {
                                "type": "text",
                                "text": "integer",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as it, imho, should. Its slaps the array \/ matrix class on it, presumedly, because of the "
                            },
                            {
                                "type": "text",
                                "text": "dim",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " attribute which is not documented up there.\n\nTake the following example:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "f <- structure(integer(), levels = character())\nm <- structure(integer(2), dim = c(1, 2)) \n\nclass(f)\n#> [1] \"integer\"\nclass(m)\n#> [1] \"matrix\" \"array\"\n\ntypeof(f)\n#> [1] \"integer\"\ntypeof(m)\n#> [1] \"integer\"\n\nmode(f)\n#> [1] \"numeric\"\nmode(m)\n#> [1] \"numeric\""
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "U053DCDAF6U",
        "type": "message",
        "ts": "1686510618.307709",
        "client_msg_id": "3db4dbe8-0dc8-484c-82ad-1108d7e3de47",
        "text": "The same type, same mode, and similar special attributes. Only that presence of `dim` forces the matrix class even though its not specified. Why does that behavior happen for arrays \/ matrix but not any other type? It’s rather inconsistent, no?",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "e714e755f196",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-11\/5077198575479_e714e755f19651f9eb3b_72.jpg",
            "first_name": "Josiah",
            "real_name": "Josiah Parry",
            "display_name": "",
            "team": "T01DW9DLB2A",
            "name": "josiah.parry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1686495357.017619",
        "parent_user_id": "U053DCDAF6U",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yR\/l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The same type, same mode, and similar special attributes. Only that presence of "
                            },
                            {
                                "type": "text",
                                "text": "dim",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " forces the matrix class even though its not specified. Why does that behavior happen for arrays \/ matrix but not any other type? It’s rather inconsistent, no?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
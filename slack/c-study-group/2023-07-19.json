[
    {
        "user": "U0524MK6H3K",
        "type": "message",
        "ts": "1689768486.541999",
        "client_msg_id": "2b860b47-ea04-4b65-8fae-eeff476ad46d",
        "text": "Anyone feeling interested in challenge 12? Doubly linked lists in C are very much like pairlists in R, but unfortunately you have to deal with memory allocation yourself (which is session 7 material).",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gc7f0c5d391a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c7f0c5d391a6f869c9310694b55fa506.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Krylov",
            "display_name": "Ivan Krylov",
            "team": "T01DW9DLB2A",
            "name": "ikrylov",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689768486.541999",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1689768569.748789",
        "reply_users": [
            "U0524MK6H3K"
        ],
        "replies": [
            {
                "user": "U0524MK6H3K",
                "ts": "1689768569.748789"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "60E=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone feeling interested in challenge 12? Doubly linked lists in C are very much like pairlists in R, but unfortunately you have to deal with memory allocation yourself (which is session 7 material)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0524MK6H3K",
        "type": "message",
        "ts": "1689768569.748789",
        "edited": {
            "user": "U0524MK6H3K",
            "ts": "1690609769.000000"
        },
        "client_msg_id": "29d41728-7b89-4bca-99fa-df7aac096a10",
        "text": "Sharing <https:\/\/github.com\/r-devel\/c-book-club\/blob\/main\/exercises\/Session%206\/modernC\/11\/ch12.c|my solution> as a thread comment to avoid spoiling it.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gc7f0c5d391a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c7f0c5d391a6f869c9310694b55fa506.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Krylov",
            "display_name": "Ivan Krylov",
            "team": "T01DW9DLB2A",
            "name": "ikrylov",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689768486.541999",
        "parent_user_id": "U0524MK6H3K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5qID9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sharing "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/c-book-club\/blob\/main\/exercises\/Session%206\/modernC\/11\/ch12.c",
                                "text": "my solution"
                            },
                            {
                                "type": "text",
                                "text": " as a thread comment to avoid spoiling it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0524MK6H3K",
        "type": "message",
        "ts": "1689768708.944249",
        "edited": {
            "user": "U0524MK6H3K",
            "ts": "1689774117.000000"
        },
        "client_msg_id": "860ccaff-222e-44d9-8016-babfa1c38e3d",
        "text": "Challenge 13 can be a fun exercise in calculus. Newton's method works remarkably well with simple polynomials, even if your derivatives are far from ideal.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gc7f0c5d391a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c7f0c5d391a6f869c9310694b55fa506.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Krylov",
            "display_name": "Ivan Krylov",
            "team": "T01DW9DLB2A",
            "name": "ikrylov",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689768708.944249",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1689768765.002149",
        "reply_users": [
            "U0524MK6H3K"
        ],
        "replies": [
            {
                "user": "U0524MK6H3K",
                "ts": "1689768765.002149"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x5DFI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Challenge 13 can be a fun exercise in calculus. Newton's method works remarkably well with simple polynomials, even if your derivatives are far from ideal."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0524MK6H3K",
        "type": "message",
        "ts": "1689768765.002149",
        "edited": {
            "user": "U0524MK6H3K",
            "ts": "1690609808.000000"
        },
        "client_msg_id": "690ebb1d-c201-4830-b69d-af9343c4dcb6",
        "text": "Again, <https:\/\/github.com\/r-devel\/c-book-club\/blob\/main\/exercises\/Session%206\/modernC\/11\/ch13.c|solution> as a thread comment. I took some liberties that make this implementation not generally applicable, but it works for the problem at hand.",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "gc7f0c5d391a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c7f0c5d391a6f869c9310694b55fa506.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0018-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Krylov",
            "display_name": "Ivan Krylov",
            "team": "T01DW9DLB2A",
            "name": "ikrylov",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689768708.944249",
        "parent_user_id": "U0524MK6H3K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JPr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Again, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/r-devel\/c-book-club\/blob\/main\/exercises\/Session%206\/modernC\/11\/ch13.c",
                                "text": "solution"
                            },
                            {
                                "type": "text",
                                "text": " as a thread comment. I took some liberties that make this implementation not generally applicable, but it works for the problem at hand."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ECGRL8CB",
        "type": "message",
        "ts": "1689814695.260619",
        "client_msg_id": "fc6b6e71-5117-44c1-aea1-0551fa5a58a0",
        "text": "So, mechanically you could make an ALTREP that samples from a distribution without precomputing them, but the savings would be minimal I think, because once sampled theyâ€™d need to be stored so that the data remained fixed and could be used as normal in R code. ie, you could have no data until something asks for data, at which time you calculate it, but once you do, you need to be able to call `mean(x)` on your vector and have it use that same data, rather than sampling again (otherwise it will need to explode it to a traditional vector)",
        "team": "T01DW9DLB2A",
        "user_team": "T01DW9DLB2A",
        "source_team": "T01DW9DLB2A",
        "user_profile": {
            "avatar_hash": "39f1ac18bd8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-09\/1481632125366_39f1ac18bd8d2e8902f0_72.png",
            "first_name": "",
            "real_name": "Gabriel Becker",
            "display_name": "Gabriel Becker",
            "team": "T01DW9DLB2A",
            "name": "gabembecker",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689099968.984869",
        "parent_user_id": "U01F5FZJ4MN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uwBw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So, mechanically you could make an ALTREP that samples from a distribution without precomputing them, but the savings would be minimal I think, because once sampled theyâ€™d need to be stored so that the data remained fixed and could be used as normal in R code. ie, you could have no data until something asks for data, at which time you calculate it, but once you do, you need to be able to call "
                            },
                            {
                                "type": "text",
                                "text": "mean(x)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " on your vector and have it use that same data, rather than sampling again (otherwise it will need to explode it to a traditional vector)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]
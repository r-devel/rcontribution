[
    {
        "text": "After watching “Memory” I have a few thoughts Mac’s specific:\n• Tried to debug more complicated program with `gdb` but after signing it again (cause of update) and trying to use it with no success, I moved to `lldb` and after reading some doc on commands I succesfully debugged my program where bug was hidden deep in function calls chain.\n• `Valgrind` being not native for Mac and I didn’t want to fight with it or compile it for a sake of really short use case for a video, I turned to native tools. `leaks` for memory leaks :slightly_smiling_face: invoked: `leaks -atExit -- .\/memory` where `memory` is my program being analysed. There are a little more switches to play with, with potentially more information. The other thing is to find potential misuse of memory via `clang` flags. \n• If you add `DBGFLAGS = -fsanitize=address -g`  after `CFLAGS` in `clang` invocation you will get interesting information if your program misuses memory. `-g` is useful if you want to have debugging information and thanks to that precise line number where sth happened.\n• After such compilation when you run the program you can get specific errors:\n• There are plenty other tools which I still need to try out and read, they can be read about here: <https:\/\/developer.apple.com\/library\/archive\/documentation\/Performance\/Conceptual\/ManagingMemory\/ManagingMemory.html#\/\/apple_ref\/doc\/uid\/10000160-SW1>  Document is quite old (11 years) but I guess in area of operating system core it’s still relevant.",
        "files": [
            {
                "id": "F06UR911VUP",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U060RULT44D",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xvZlK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After watching “Memory” I have a few thoughts Mac’s specific:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Tried to debug more complicated program with "
                                    },
                                    {
                                        "type": "text",
                                        "text": "gdb",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " but after signing it again (cause of update) and trying to use it with no success, I moved to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "lldb",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and after reading some doc on commands I succesfully debugged my program where bug was hidden deep in function calls chain."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Valgrind",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " being not native for Mac and I didn’t want to fight with it or compile it for a sake of really short use case for a video, I turned to native tools. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "leaks",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " for memory leaks "
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "slightly_smiling_face",
                                        "unicode": "1f642"
                                    },
                                    {
                                        "type": "text",
                                        "text": " invoked: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "leaks -atExit -- .\/memory",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " where "
                                    },
                                    {
                                        "type": "text",
                                        "text": "memory",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is my program being analysed. There are a little more switches to play with, with potentially more information. The other thing is to find potential misuse of memory via "
                                    },
                                    {
                                        "type": "text",
                                        "text": "clang",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " flags. "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If you add "
                                    },
                                    {
                                        "type": "text",
                                        "text": "DBGFLAGS = -fsanitize=address -g",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "  after "
                                    },
                                    {
                                        "type": "text",
                                        "text": "CFLAGS",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " in "
                                    },
                                    {
                                        "type": "text",
                                        "text": "clang",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " invocation you will get interesting information if your program misuses memory. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "-g",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is useful if you want to have debugging information and thanks to that precise line number where sth happened."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "After such compilation when you run the program you can get specific errors:"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "There are plenty other tools which I still need to try out and read, they can be read about here: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/developer.apple.com\/library\/archive\/documentation\/Performance\/Conceptual\/ManagingMemory\/ManagingMemory.html#\/\/apple_ref\/doc\/uid\/10000160-SW1"
                                    },
                                    {
                                        "type": "text",
                                        "text": "  Document is quite old (11 years) but I guess in area of operating system core it’s still relevant."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1713539335.092919",
        "edited": {
            "user": "U060RULT44D",
            "ts": "1713539536.000000"
        },
        "client_msg_id": "415cfc79-a727-4e28-a9e2-9f1ad6570a46",
        "thread_ts": "1713539335.092919",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1713708225.290769",
        "reply_users": [
            "U035M81N341"
        ],
        "replies": [
            {
                "user": "U035M81N341",
                "ts": "1713708225.290769"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/developer.apple.com\/library\/archive\/documentation\/Performance\/Conceptual\/ManagingMemory\/ManagingMemory.html#\/\/apple_ref\/doc\/uid\/10000160-SW1",
                "service_icon": "https:\/\/developer.apple.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/developer.apple.com\/library\/archive\/documentation\/Performance\/Conceptual\/ManagingMemory\/ManagingMemory.html#\/\/apple_ref\/doc\/uid\/10000160-SW1",
                "fallback": "Introduction",
                "text": "Guidelines for improving the performance of memory-related code.",
                "title": "Introduction",
                "title_link": "https:\/\/developer.apple.com\/library\/archive\/documentation\/Performance\/Conceptual\/ManagingMemory\/ManagingMemory.html#\/\/apple_ref\/doc\/uid\/10000160-SW1",
                "service_name": "developer.apple.com"
            }
        ]
    }
]